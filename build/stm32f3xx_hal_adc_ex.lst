ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_adc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Disable,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	ADC_Disable:
  25              	.LFB164:
  26              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @file    stm32f3xx_hal_adc_ex.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @version V1.4.0
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @date    16-December-2016
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          peripheral:
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *           + Operation functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *             ++ Start, stop, get result of conversions of injected
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *                group, using 2 possible modes: polling, interruption.
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *             ++ Multimode feature (available on devices with 2 ADCs or more)
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *             ++ Calibration (ADC automatic self-calibration)
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *           + Control functions
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *             ++ Channels configuration on injected group
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file 
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          "stm32f3xx_hal_adc.c".
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   @verbatim
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   [..] 
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       available in file of generic functions "stm32f3xx_hal_adc.c".
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   [..]
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   @endverbatim
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ******************************************************************************
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @attention
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * are permitted provided that the following conditions are met:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 2


  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      this list of conditions and the following disclaimer.
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      and/or other materials provided with the distribution.
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      may be used to endorse or promote products derived from this software
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      without specific prior written permission.
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ******************************************************************************  
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #include "stm32f3xx_hal.h"
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @addtogroup STM32F3xx_HAL_Driver
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADCEx Private Constants
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Fixed timeout values for ADC calibration, enable settling time, disable  */
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* settling time.                                                           */
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Values defined to be higher than worst cases: low clock frequency,       */
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* maximum prescalers.                                                      */
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Ex of profile low frequency : Clock source at 0.5 MHz, ADC clock         */
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* prescaler 256 (devices STM32F30xx), sampling time 7.5 ADC clock cycles,  */
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* resolution 12 bits.                                                      */
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: ms                                                                 */
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CALIBRATION_TIMEOUT         ( 10U)
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_ENABLE_TIMEOUT              (  2U)
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_DISABLE_TIMEOUT             (  2U)
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 3


  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_STOP_CONVERSION_TIMEOUT     ( 11U)
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout to wait for current conversion on going to be completed.         */
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout fixed to worst case, for 1 channel.                              */
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - maximum sampling time (601.5 adc_clk)                                */
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                          */
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - ADC clock (from PLL with prescaler 256 (devices STM32F30xx))         */
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: cycles of CPU clock.                                               */
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES ( 156928U)
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for ADC stabilization time (ADC voltage regulator start-up time)   */
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer to device datasheet, param. TADCVREG_STUP). */
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_STAB_DELAY_US               ( 10U)
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for temperature sensor stabilization time.                         */
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer device datasheet, parameter tSTART).        */
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_TEMPSENSOR_DELAY_US         ( 10U)
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout values for ADC enable and disable settling time.                 */
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Values defined to be higher than worst cases: low clocks freq,           */
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* maximum prescaler.                                                       */
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* prescaler 4U, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: ms                                                                 */
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_ENABLE_TIMEOUT              ( 2U)
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_DISABLE_TIMEOUT             ( 2U)
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for ADC calibration:                                               */
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Hardware prerequisite before starting a calibration: the ADC must have   */
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* been in power-on state for at least two ADC clock cycles.                */
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: ADC clock cycles                                                   */
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_PRECALIBRATION_DELAY_ADCCLOCKCYCLES       ( 2U)
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout value for ADC calibration                                        */
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Value defined to be higher than worst cases: low clocks freq,            */
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* maximum prescaler.                                                       */
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* prescaler 4U, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: ms                                                                 */
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CALIBRATION_TIMEOUT         ( 10U)
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for ADC stabilization time.                                        */
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum delay is 1us (refer to device datasheet, parameter tSTAB).       */
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_STAB_DELAY_US               ( 1U)
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for temperature sensor stabilization time.                         */
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 4


 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_TEMPSENSOR_DELAY_US         ( 10U)
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum number of CPU cycles corresponding to 1 ADC cycle                */
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Value fixed to worst case: clock prescalers slowing down ADC clock to    */
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* minimum frequency                                                        */
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - AHB prescaler: 16                                                    */
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - ADC prescaler: 8                                                     */
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: cycles of CPU clock.                                               */
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CYCLE_WORST_CASE_CPU_CYCLES ( 128U)
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ADC conversion cycles (unit: ADC clock cycles)                           */
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (selected sampling time + conversion time of 12.5 ADC clock cycles, with */
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* resolution 12 bits)                                                      */
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_1CYCLE5    ( 14U)
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_7CYCLES5   ( 20U)
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_13CYCLES5  ( 26U)
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_28CYCLES5  ( 41U)
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_41CYCLES5  ( 54U)
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_55CYCLES5  ( 68U)
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_71CYCLES5  ( 84U)
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_239CYCLES5 (252U)
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc);
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef* hadc);
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef* hadc, uint32_t ConversionGroup);
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc);
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_ConversionStop_Disable(ADC_HandleTypeDef* hadc);
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADCEx Exported Functions
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 ADCEx Initialization and de-initialization functions
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 5


 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief    ADC Extended Initialization and Configuration functions
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @verbatim    
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****               ##### Initialization and de-initialization functions #####
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Initialize and configure the ADC. 
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) De-initialize the ADC.
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @endverbatim
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         depending on possible clock sources: AHB clock or PLL clock.
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         See commented example code below that can be copied and uncommented 
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         into HAL_ADC_MspInit().
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         coming from ADC state reset. Following calls to this function can
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         before HAL_ADC_Init().
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned by ADC state.
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InitTypeDef".
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_InitTypeDef".
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: parameters related to common ADC 
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         registers (ADC clock mode) are set only if all ADCs sharing the
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         same common group are disabled.
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         If this is not the case, these common parameters setting are  
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         without  disabling the other ADCs sharing the same common group.
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpCFGR = 0U;
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check ADC handle */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 6


 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc == NULL)
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return HAL_ERROR;
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign)); 
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(hadc->Init.DiscontinuousConvMode != DISABLE)
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC core parameters and ADC MSP related parameters */
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* As prerequisite, into HAL_ADC_MspInit(), ADC clock must be configured  */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* at RCC top level.                                                      */
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Refer to header of this file for more details on clock enabling        */
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* procedure.                                                             */
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Actions performed only if ADC is coming from state reset:              */
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Initialization of ADC MSP                                            */
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - ADC voltage regulator enable                                         */
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->State == HAL_ADC_STATE_RESET)
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize ADC error code */
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize HAL ADC API internal variables */
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = 0U;
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0U;
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Allocate lock resource and initialize it */
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->Lock = HAL_UNLOCKED;
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Init the low level hardware */
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_MspInit(hadc);
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable voltage regulator (if disabled at this step) */
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN_0))
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 7


 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: The software must wait for the startup time of the ADC       */
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       voltage regulator before launching a calibration or          */
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       enabling the ADC. This temporization must be implemented by  */ 
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       software and is equal to 10 us in the worst case             */
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       process/temperature/power supply.                            */
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable the ADC (if not already disabled) */
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Check if ADC is effectively disabled */
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Configuration of ADC parameters if previous preliminary actions    */ 
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* are correctly completed.                                           */
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (tmp_hal_status == HAL_OK)                                  )
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state */
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_BUSY_INTERNAL);
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set the intermediate state before moving the ADC voltage         */
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* regulator to state enable.                                       */
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->CR, (ADC_CR_ADVREGEN_1 | ADC_CR_ADVREGEN_0));
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADVREGEN bits to 0x01U */
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN_0);
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Delay for ADC stabilization time.                                */
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Compute number of CPU cycles to wait for */
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             wait_loop_index--;
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Verification that ADC voltage regulator is correctly enabled, whether  */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* or not ADC is coming from state reset (if any potential problem of     */
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* clocking, voltage regulator would not be enabled).                     */
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN_0) ||
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADVREGEN_1)   )
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 8


 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* correctly completed and if there is no conversion on going on regular    */
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* called to update a parameter on the fly).                                */
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (tmp_hal_status == HAL_OK)                                &&
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)          )
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of common ADC parameters                                 */
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common   */
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set handle of the other ADC sharing the same common register           */
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Parameters update conditioned to ADC state:                            */
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - Multimode clock configuration                                       */
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if ((ADC_IS_ENABLE(hadc) == RESET)                                   &&
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset configuration of ADC common register CCR:                      */
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*   - ADC clock mode: CKMODE                                           */
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Some parameters of this register are not reset, since they are set   */
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* by other functions and must be kept in case of usage of this         */
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* parameters):                                                         */
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*   - multimode related parameters: MDMA, DMACFG, DELAY, MULTI (set    */
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*     into HAL_ADCEx_MultiModeConfigChannel() )                        */
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*     (set into HAL_ADC_ConfigChannel() or                             */
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR       ,
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_CKMODE           ,
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  hadc->Init.ClockPrescaler );
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of ADC:                                                  */
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - resolution                                                          */
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - data alignment                                                      */
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - continuous conversion mode                                          */
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - overrun                                                             */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 9


 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - discontinuous mode                                                  */
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(tmpCFGR, ADC_CFGR_CONTINUOUS(hadc->Init.ContinuousConvMode) |
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_CFGR_OVERRUN(hadc->Init.Overrun)               |
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      hadc->Init.DataAlign                               |
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      hadc->Init.Resolution                               );
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable discontinuous mode only if continuous mode is disabled */
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable the selected ADC regular discontinuous mode */
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the number of channels to be converted in discontinuous mode */
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(tmpCFGR, ADC_CFGR_DISCEN                                            |
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                          ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* ADC regular group discontinuous was intended to be enabled,        */
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* but ADC regular group modes continuous and sequencer discontinuous */
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* cannot be enabled simultaneously.                                  */
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_CONFIG);
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable external trigger if trigger selection is different of software  */
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* start.                                                                 */
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       software start.                                                  */
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(tmpCFGR, ADC_CFGR_EXTSEL_SET(hadc, hadc->Init.ExternalTrigConv) |
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        hadc->Init.ExternalTrigConvEdge                         );
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Parameters update conditioned to ADC state:                            */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* conversion on going on regular and injected groups:                    */
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - DMA continuous request                                              */
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - LowPowerAutoWait feature                                            */
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_AUTDLY |
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_CFGR_DMACFG  );
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(tmpCFGR, ADC_CFGR_AUTOWAIT(hadc->Init.LowPowerAutoWait)       |
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        ADC_CFGR_DMACONTREQ(hadc->Init.DMAContinuousRequests) );
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 10


 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC configuration register with previous settings */
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CFGR,
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_DISCNUM |
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_DISCEN  |
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_CONT    |
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_OVRMOD  |
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_EXTSEL  |
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_EXTEN   |
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_ALIGN   |
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_RES        ,
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                tmpCFGR              );
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of regular group sequencer:                              */
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   0x00: 1 channel converted (channel on regular rank 1U)                */
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   parameter "NbrOfConversion"                                          */   
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set number of ranks in regular group sequencer */     
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR1                     ,
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_L                               ,
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  (hadc->Init.NbrOfConversion - (uint8_t)1U) );  
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to none */
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the ADC state */
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_ERROR_INTERNAL);
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR; 
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 11


 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (clock source APB2).
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         See commented example code below that can be copied and uncommented 
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         into HAL_ADC_MspInit().
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         coming from ADC state reset. Following calls to this function can
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         before HAL_ADC_Init().
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InitTypeDef".
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_InitTypeDef".
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cr1 = 0U;
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cr2 = 0U;
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_sqr1 = 0U;
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check ADC handle */
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc == NULL)
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return HAL_ERROR;
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(hadc->Init.DiscontinuousConvMode != DISABLE)
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 12


 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* As prerequisite, into HAL_ADC_MspInit(), ADC clock must be configured    */
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* at RCC top level.                                                        */
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Refer to header of this file for more details on clock enabling          */
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* procedure.                                                               */
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Actions performed only if ADC is coming from state reset:                */
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - Initialization of ADC MSP                                              */
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Initialize ADC error code */
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Allocate lock resource and initialize it */
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Lock = HAL_UNLOCKED;
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Init the low level hardware */
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_MspInit(hadc);
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: In case of ADC already enabled, precaution to not launch an        */
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       unwanted conversion while modifying register CR2 by writing 1 to   */
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       bit ADON.                                                          */
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* correctly completed.                                                     */
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (tmp_hal_status == HAL_OK)                                  )
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC parameters */
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of ADC:                                                  */
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - data alignment                                                      */
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger polarity (always set to 1U, because needed for all  */
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*    triggers: external trigger of SW start)                             */
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - continuous conversion mode                                          */
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: External trigger polarity (ADC_CR2_EXTTRIG) is set into          */
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       HAL_ADC_Start_xxx functions because if set in this function,     */
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       a conversion on injected group would start a conversion also on  */
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       regular group after ADC enabling.                                */
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cr2 |= (hadc->Init.DataAlign                             |
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                 hadc->Init.ExternalTrigConv                      |
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode) );
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of ADC:                                                  */
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - scan mode                                                           */
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - discontinuous mode disable/enable                                   */
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - discontinuous mode number of conversions                            */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 13


 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cr1 |= (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode));
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable discontinuous mode only if continuous mode is disabled */
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: If parameter "Init.ScanConvMode" is set to disable, parameter    */
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       discontinuous is set anyway, but will have no effect on ADC HW.  */
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable the selected ADC regular discontinuous mode */
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the number of channels to be converted in discontinuous mode */
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cr1 |= (ADC_CR1_DISCEN                                           |
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                   ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion) );
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* ADC regular group discontinuous was intended to be enabled,        */
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* but ADC regular group modes continuous and sequencer discontinuous */
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* cannot be enabled simultaneously.                                  */
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC configuration register CR1 with previous settings */
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CR1,
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR1_SCAN    |
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR1_DISCEN  |
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR1_DISCNUM    ,
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmp_cr1             );
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC configuration register CR2 with previous settings */
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CR2,
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR2_ALIGN   |
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR2_EXTSEL  |
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR2_EXTTRIG |
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR2_CONT       ,
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmp_cr2             );
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of regular group sequencer:                              */
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   0x00: 1 channel converted (channel on regular rank 1U)                */
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   Note: Scan mode is present by hardware on this device and, if        */
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   disabled, discards automatically nb of conversions. Anyway, nb of    */
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   conversions is forced to 0x00 for alignment over all STM32 devices.  */
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   parameter "NbrOfConversion"                                          */
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode) == ADC_SCAN_ENABLE)
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_sqr1 = ADC_SQR1_L_SHIFT(hadc->Init.NbrOfConversion);
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 14


 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SQR1,
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR1_L          ,
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                tmp_sqr1             );
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check back that ADC registers have effectively been configured to      */
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ensure of no potential problem of ADC core IP clocking.                */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check through register CR2 (excluding bits set in other functions:     */
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* execution control bits (ADON, JSWSTART, SWSTART), regular group bits   */
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (DMA), injected group bits (JEXTTRIG and JEXTSEL), channel internal    */
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* measurement path bit (TSVREFE).                                        */
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR2, ~(ADC_CR2_ADON | ADC_CR2_DMA |
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                         ADC_CR2_JEXTTRIG | ADC_CR2_JEXTSEL |
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                         ADC_CR2_TSVREFE                     ))
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          == tmp_cr2)
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to none */
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the ADC state */
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 15


 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         values, with deinitialization of the ADC MSP.
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done 
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         only if all ADCs sharing the same common group are disabled.
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         If this is not the case, reset of these common parameters reset is  
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of reset of a single ADC while the other ADCs sharing the same 
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         common group is still running.
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: Global reset of all ADCs sharing a
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         common group is possible.
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         As this function is intended to reset a single ADC, to not impact 
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         other ADCs, instructions for global reset of multiple ADCs have been
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         let commented below.
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         If needed, the example code can be copied and uncommented into
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function HAL_ADC_MspDeInit().
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check ADC handle */
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc == NULL)
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      return HAL_ERROR;
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set ADC state */
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Flush register JSQR: queue sequencer reset when injected queue         */
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* sequencer is enabled and ADC disabled.                                 */
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable injected queue sequencer after injected conversion stop         */
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the ADC peripheral */
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Change ADC state */
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->State = HAL_ADC_STATE_READY;
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {      
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 16


 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* correctly completed.                                                     */
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Reset ADC registers ========== */
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register IER */
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_JQOVF | ADC_IT_OVR  |
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_JEOS  | ADC_IT_JEOC |
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_EOS   | ADC_IT_EOC  |
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_EOSMP | ADC_IT_RDY                 ) );
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register ISR */
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_EOSMP | ADC_FLAG_RDY                   ) );
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CR */
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART are  */
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* in access mode "read-set": no direct reset applicable.                 */
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset Calibration mode to default setting (single ended):              */
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable voltage regulator:                                             */
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: Voltage regulator disable is conditioned to ADC state disabled:  */
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       already done above.                                              */
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: Voltage regulator disable is intended for power saving.          */
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Sequence to disable voltage regulator:                                 */
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Set the intermediate state before moving the ADC voltage regulator  */
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*    to disable state.                                                   */
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN_1 | ADC_CR_ADVREGEN_0 | ADC_CR_ADCALDIF);
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Set ADVREGEN bits to 0x10U */
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN_1);
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CFGR */
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_AWD1CH  | ADC_CFGR_JAUTO   | ADC_CFGR_JAWD1EN |   
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_AWD1EN  | ADC_CFGR_AWD1SGL | ADC_CFGR_JQM     |     
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_JDISCEN | ADC_CFGR_DISCNUM | ADC_CFGR_DISCEN  | 
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_AUTDLY  | ADC_CFGR_CONT    | ADC_CFGR_OVRMOD  |     
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_EXTEN   | ADC_CFGR_EXTSEL  | ADC_CFGR_ALIGN   |     
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_RES     | ADC_CFGR_DMACFG  | ADC_CFGR_DMAEN    );
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SMPR1 */
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_SMP9 | ADC_SMPR1_SMP8 | ADC_SMPR1_SMP7 | 
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR1_SMP6 | ADC_SMPR1_SMP5 | ADC_SMPR1_SMP4 | 
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR1_SMP3 | ADC_SMPR1_SMP2 | ADC_SMPR1_SMP1  );
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SMPR2 */
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 | 
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 | 
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10  );
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 17


 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register TR1 */
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register TR2 */
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register TR3 */
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR1 */
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 | 
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ1 | ADC_SQR1_L);
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR2 */
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 | 
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR3 */
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 | 
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR4 */
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register DR */
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bits in access mode read only, no direct reset applicable*/
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR1 */
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR2 */
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR3 */
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR4 */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bits in access mode read only, no direct reset applicable*/
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register AWD2CR */
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register AWD3CR */
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register DIFSEL */
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CALFACT */
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Reset common ADC registers ========== */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 18


 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common   */
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set handle of the other ADC sharing the same common register           */
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Software is allowed to change common parameters only when all ADCs of  */
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* the common group are disabled.                                         */
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if ((ADC_IS_ENABLE(hadc) == RESET)                                  &&
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET) )   )
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset configuration of ADC common register CCR:
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         - clock mode: CKMODE
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         - multimode related parameters: MDMA, DMACFG, DELAY, MULTI (set into
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_ADCEx_MultiModeConfigChannel() )
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         - internal measurement paths: Vbat, temperature sensor, Vref (set into
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       */
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_CKMODE |
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_VBATEN |
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_TSEN   |
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_VREFEN |
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_MDMA   |
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_DMACFG |
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_DELAY  |
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_MULTI   );
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Other ADC common registers (CSR, CDR) are in access mode read only,
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          no direct reset applicable */
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Hard reset and clock disable of ADC peripheral ========== */
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Into HAL_ADC_MspDeInit(), ADC clock can be hard reset and disabled     */
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* at RCC top level.                                                      */
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Refer to header of this file for more details on clock disabling       */
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* procedure.                                                             */
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* DeInit the low level hardware */
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_MspDeInit(hadc);
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to none */
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->State = HAL_ADC_STATE_RESET;
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 19


1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Deinitialize the ADC peripheral registers to its default reset values.
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** { 
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check ADC handle */
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc == NULL)
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      return HAL_ERROR;
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set ADC state */
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* correctly completed.                                                     */
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Reset ADC registers ========== */
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SR */
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD | ADC_FLAG_JEOC | ADC_FLAG_EOC |
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                          
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CR1 */
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR1, (ADC_CR1_AWDEN   | ADC_CR1_JAWDEN | ADC_CR1_DISCNUM | 
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR1_JDISCEN | ADC_CR1_DISCEN | ADC_CR1_JAUTO   | 
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR1_AWDSGL  | ADC_CR1_SCAN   | ADC_CR1_JEOCIE  |   
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR1_AWDIE   | ADC_CR1_EOCIE  | ADC_CR1_AWDCH    ));
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CR2 */
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR2, (ADC_CR2_TSVREFE | ADC_CR2_SWSTART | ADC_CR2_JSWSTART | 
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL  | ADC_CR2_JEXTTRIG |  
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR2_JEXTSEL | ADC_CR2_ALIGN   | ADC_CR2_DMA      |        
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR2_RSTCAL  | ADC_CR2_CAL     | ADC_CR2_CONT     |         
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR2_ADON                                          ));
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 20


1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SMPR1 */
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SMPR1, (ADC_SMPR1_SMP18 | ADC_SMPR1_SMP17 | ADC_SMPR1_SMP15 | 
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR1_SMP15 | ADC_SMPR1_SMP14 | ADC_SMPR1_SMP13 | 
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR1_SMP12 | ADC_SMPR1_SMP11 | ADC_SMPR1_SMP10  ));
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SMPR2 */
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SMPR2, (ADC_SMPR2_SMP9 | ADC_SMPR2_SMP8 | ADC_SMPR2_SMP7 | 
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR2_SMP6 | ADC_SMPR2_SMP5 | ADC_SMPR2_SMP4 | 
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR2_SMP3 | ADC_SMPR2_SMP2 | ADC_SMPR2_SMP1 | 
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR2_SMP0                                    ));
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JOFR1 */
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JOFR1, ADC_JOFR1_JOFFSET1);
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JOFR2 */
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JOFR2, ADC_JOFR2_JOFFSET2);
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JOFR3 */
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JOFR3, ADC_JOFR3_JOFFSET3);
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JOFR4 */
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JOFR4, ADC_JOFR4_JOFFSET4);
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register HTR */
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->HTR, ADC_HTR_HT);
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register LTR */
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->LTR, ADC_LTR_LT);
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR1 */
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR1 */
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR2 */
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ12 | ADC_SQR2_SQ11 | ADC_SQR2_SQ10 | 
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR2_SQ9  | ADC_SQR2_SQ8  | ADC_SQR2_SQ7   );
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR3 */
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ6 | ADC_SQR3_SQ5 | ADC_SQR3_SQ4 | 
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR3_SQ3 | ADC_SQR3_SQ2 | ADC_SQR3_SQ1  );
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JSQR */
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JSQR */
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register DR */
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bits in access mode read only, no direct reset applicable*/
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset registers JDR1, JDR2, JDR3, JDR4 */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 21


1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bits in access mode read only, no direct reset applicable*/
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset VBAT measurement path, in case of enabled before by selecting    */
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* channel ADC_CHANNEL_VBAT. */
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SYSCFG->CFGR1 &= ~(SYSCFG_CFGR1_VBAT);
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Hard reset ADC peripheral ========== */
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Performs a global reset of the entire ADC peripheral: ADC state is     */
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* forced to a similar state after device power-on.                       */
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If needed, copy-paste and uncomment the following reset code into      */
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* function "void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)":              */
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*                                                                        */
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  __HAL_RCC_ADC1_FORCE_RESET()                                          */
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  __HAL_RCC_ADC1_RELEASE_RESET()                                        */
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* DeInit the low level hardware */
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_MspDeInit(hadc);
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to none */
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->State = HAL_ADC_STATE_RESET;
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADCEx Input and Output operation functions
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief    ADC Extended IO operation functions
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @verbatim   
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ##### IO operation functions #####
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================  
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of regular group.
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of regular group.
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Poll for conversion complete on regular group.
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Poll for conversion event.
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Get result of regular channel conversion.
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of regular group and enable interruptions.
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of regular group and disable interruptions.
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Handle ADC interrupt request
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of regular group and enable DMA transfer.
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 22


1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of injected group.
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of injected group.
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Poll for conversion complete on injected group.
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Get result of injected channel conversion.
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of injected group and enable interruptions.
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of injected group and disable interruptions.
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start multimode and enable DMA transfer.
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @endverbatim
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group.
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs):
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if ADC is slave, ADC is enabled only (conversion is not started).
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if ADC is master, ADC is enabled and multimode conversion is started.
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to regular group conversion results   */
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to regular operation                    */
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 23


1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set group injected state (from auto-injection) and multimode state   */
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* for all cases of multimode: independent mode, multimode ADC master   */
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* or multimode ADC slave (for devices with several ADCs):              */
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state (ADC independent or master) */
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If conversions on group regular are also triggering group injected,*/
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* update ADC state.                                                  */
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state (ADC slave) */
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If conversions on group regular are also triggering group injected,*/
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* update ADC state.                                                  */
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* State machine update: Check if an injected conversion is ongoing */
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC error code fields related to conversions on group regular*/
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC all error code fields */
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* operations)                                                          */
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                  */
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of multimode enabled (for devices with several ADCs):           */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 24


1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is slave, ADC is enabled only (conversion is not started). */
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_REG_OR_MULTIMODEMASTER(hadc))
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group.
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular operation                      */
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set group injected state (from auto-injection) */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 25


1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* State machine update: Check if an injected conversion is ongoing */
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC error code fields related to conversions on group regular */
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of regular group.                                    */
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with SW start */
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with external trigger */
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of both groups regular and injected,
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 26


1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC peripheral.
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use,
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it should be preliminarily stopped using function
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_InjectedStop().
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To stop ADC conversion only on ADC group regular
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         while letting ADC group injected conversions running,
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADCEx_RegularStop().
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular and injected groups */
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC peripheral.
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use, it
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 27


1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Wait for regular group conversion to be completed.
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion) are cleared by this function, with an exception:
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are 
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         not cleared to not interfere with this feature until data register
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         is read using function HAL_ADC_GetValue().
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         performed on each conversion. Nevertheless, polling can still 
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be performed on the complete sequence (ADC init
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Depending on init parameter "EOCSelection", flags EOS or EOC is 
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         checked and cleared depending on autodelay status (bit AUTDLY).     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 28


1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_Flag_EOC;
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cfgr     = 0x0U;
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* If end of conversion selected to end of sequence */
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_Flag_EOC = ADC_FLAG_EOS;
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If end of conversion selected to end of each conversion */
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else /* ADC_EOC_SINGLE_CONV */
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Verification that ADC configuration is compliant with polling for      */
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* each conversion:                                                       */
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* several ranks and polling for end of each conversion.                  */
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For code simplicity sake, this particular case is generalized to       */
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may have up to 4 ADC and 2 common */
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check DMA configuration, depending on MultiMode set or not */
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_MULTI) == ADC_MODE_INDEPENDENT)
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_DMAEN))
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* MultiMode is enabled, Common Control Register MDMA bits must be checked */
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA) != RESET)
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 29


1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_Flag_EOC = (ADC_FLAG_EOC | ADC_FLAG_EOS);
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave      */
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode             */
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* available).                                                            */
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get tick count */
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Wait until End of Conversion or End of Sequence flag is raised */
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_TIMEOUT;
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update ADC state machine */
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group regular       */
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)           && 
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If End of Sequence is reached, disable interrupts */
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* ADSTART==0 (no conversion on going)                                  */
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {        
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 30


1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Change ADC state to error state */
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear end of conversion flag of regular group if low power feature       */
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* until data register is read using function HAL_ADC_GetValue().           */
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (READ_BIT (tmp_cfgr, ADC_CFGR_AUTDLY) == RESET)
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag */
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (EOC or EOS depending on HAL ADC initialization parameter) */
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, tmp_Flag_EOC);
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Wait for regular group conversion to be completed.
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in DMA mode.
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         performed on each conversion.
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   On STM32F37x devices, limitation in case of sequencer enabled
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (several ranks selected): polling cannot be done on each 
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion inside the sequence. In this case, polling is replaced by
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         wait for maximum conversion time.
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Variables for polling in case of scan mode enabled */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 31


1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles_max = 0U;
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0U;
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification that ADC configuration is compliant with polling for        */
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* each conversion:                                                         */
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Particular case is ADC configured in DMA mode                            */
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return HAL_ERROR;
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get tick count */
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion.                                                              */
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - If single conversion for regular group (Scan mode disabled or enabled */
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    with NbrOfConversion =1U), flag EOC is used to determine the           */
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    conversion completion.                                                */
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - If sequence conversion for regular group (scan mode enabled and       */
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    NbrOfConversion >=2U), flag EOC is set only at the end of the          */
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    sequence.                                                             */
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    As flag EOC is not set after each conversion, no timeout status can   */
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    be set.                                                               */
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_SCAN) &&
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L)    )
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait until End of Conversion flag is raised */
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_EOC))
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Process unlocked */
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 32


1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Replace polling by wait for maximum conversion time */
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Calculation of CPU cycles corresponding to ADC conversion cycles.      */
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Retrieve ADC clock prescaler and ADC maximum conversion cycles on all  */
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* channels.                                                              */
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max = ADC_CLOCK_PRESCALER_RANGE() ;
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max *= ADC_CONVCYCLES_MAX_RANGE(hadc);
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Poll with maximum conversion time */
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Process unlocked */
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       Conversion_Timeout_CPU_cycles ++;
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear regular group conversion flag */
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update ADC state machine */
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group regular       */
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: On STM32F37x devices, in case of sequencer enabled                 */
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       (several ranks selected), end of conversion flag is raised         */
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       at the end of the sequence.                                        */
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {   
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     { 
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 33


1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Poll for conversion event.
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  EventType: the ADC event type.
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_AWD1_EVENT: ADC Analog watchdog 1 event (main analog watchdog, present on a
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_AWD2_EVENT: ADC Analog watchdog 2 event (additional analog watchdog, not pr
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_AWD3_EVENT: ADC Analog watchdog 3 event (additional analog watchdog, not pr
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_JQOVF_EVENT: ADC Injected context queue overflow event
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart; 
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get start tick count */
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check selected event flag */
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_TIMEOUT;
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   switch(EventType)
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Analog watchdog (level out of window) event */
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: In case of several analog watchdog enabled, if needed to know      */
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* flags HAL_ADC_STATE_AWD1/2U/3 using function "HAL_ADC_GetState()".        */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 34


1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For example:                                                             */
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD1)) "    */
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD2)) "    */
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD3)) "    */
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check analog watchdog 1 flag */
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   case ADC_AWD_EVENT:
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check analog watchdog 2 flag */
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   case ADC_AWD2_EVENT:
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check analog watchdog 3 flag */
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   case ADC_AWD3_EVENT:
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Injected context queue overflow event */
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   case ADC_JQOVF_EVENT:
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to Injected context queue overflow */
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC Injected context queue overflow flag */
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Overrun event */
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   default: /* Case ADC_OVR_EVENT */
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If overrun is set to overwrite previous data, overrun event is not     */
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* considered as an error.                                                */
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* overrun ")                                                             */
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to overrun */
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 35


1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC Overrun flag */
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Poll for conversion event.
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  EventType: the ADC event type.
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watchdog event.
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart; 
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();   
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check selected event flag */
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Analog watchdog (level out of window) event */
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 36


1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear ADC analog watchdog flag */
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - EOC (end of conversion of regular group) or EOS (end of 
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of regular group) depending on ADC initialization 
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            parameter "EOCSelection"
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun, depending on ADC initialization parameter "Overrun"
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC slave first, then ADC master. 
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).  
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to regular group conversion results   */
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to regular operation                    */
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set group injected state (from auto-injection) and multimode state   */
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* for all cases of multimode: independent mode, multimode ADC master   */
2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* or multimode ADC slave (for devices with several ADCs):              */
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 37


2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state (ADC independent or master) */
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If conversions on group regular are also triggering group injected,*/
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* update ADC state.                                                  */
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state (ADC slave) */
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If conversions on group regular are also triggering group injected,*/
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* update ADC state.                                                  */
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* State machine update: Check if an injected conversion is ongoing */
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC error code fields related to conversions on group regular*/
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC all error code fields */
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC           */
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* operations)                                                          */
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */  
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       switch(hadc->Init.EOCSelection)
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV: 
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOS));
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         default:
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS));
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 38


2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If overrun is set to overwrite previous data (default setting),      */
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* overrun interrupt is not activated (overrun event is not considered  */
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* as an error).                                                        */
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (cf ref manual "Managing conversions without using the DMA and       */
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* without overrun ")                                                   */
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                  */
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of multimode enabled (for devices with several ADCs):           */
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is slave, ADC is enabled only (conversion is not started). */
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_REG_OR_MULTIMODEMASTER(hadc))
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - EOC (end of conversion of regular group)
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 39


2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular operation                      */
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set group injected state (from auto-injection) */
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* State machine update: Check if an injected conversion is ongoing */
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC error code fields related to conversions on group regular */
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable end of conversion interrupt for regular group */
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of regular group.                                    */
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 40


2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with SW start */
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with external trigger */
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of both groups regular and injected,
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC peripheral.
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - EOC (end of conversion of regular group) and EOS (end of 
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of regular group)
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use,
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it should be preliminarily stopped using function
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_InjectedStop().
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To stop ADC conversion only on ADC group regular
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         while letting ADC group injected conversions running,
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADCEx_RegularStop_IT().
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular and injected groups */
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for regular group */
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 41


2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable interrution of 
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         end-of-conversion, disable ADC peripheral.
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for regular group */
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 42


2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         through DMA.
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function is for single-ADC mode only. For multimode, use the 
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         dedicated MultimodeStart function.
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  pData: The destination Buffer address.
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Verification if multimode is disabled (for devices with several ADC)   */
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If multimode is enabled, dedicated function multimode conversion       */
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* start DMA must be used.                                                */
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(ADC_COMMON_CCR_MULTI(hadc) == RESET)
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable the ADC peripheral */
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(hadc);
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start conversion if ADC is effectively enabled */
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state                                                      */
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* - Clear state bitfield related to regular group conversion results */
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* - Set state bitfield related to regular operation                  */
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 43


2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY);
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set group injected state (from auto-injection) and multimode state */
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* for all cases of multimode: independent mode, multimode ADC master */
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* or multimode ADC slave (for devices with several ADCs):            */
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state (ADC independent or master) */
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* If conversions on group regular are also triggering group injected,*/
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* update ADC state.                                                  */
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state (ADC slave) */
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* If conversions on group regular are also triggering group injected,*/
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* update ADC state.                                                  */
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* State machine update: Check if an injected conversion is ongoing */
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Reset ADC error code fields related to conversions on group regular*/
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Reset ADC all error code fields */
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_CLEAR_ERRORCODE(hadc);
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the DMA transfer complete callback */
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the DMA half transfer complete callback */
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the DMA error callback */
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 44


2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****               
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC */
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* start (in case of SW start):                                       */
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Clear regular group conversion flag and overrun flag */
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* operations)                                                        */
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable ADC overrun interrupt */
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable ADC DMA mode */
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Start the DMA channel */
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable conversion of regular group.                                */
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If software start has been selected, conversion starts immediately.*/
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If external trigger has been selected, conversion will start at    */
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* next trigger event.                                                */
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         through DMA.
2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 45


2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         only. For multimode, use the dedicated MultimodeStart function.
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  pData: The destination Buffer address.
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular operation                      */
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set group injected state (from auto-injection) */
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* State machine update: Check if an injected conversion is ongoing */
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC error code fields related to conversions on group regular */
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 46


2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the DMA transfer complete callback */
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the DMA half transfer complete callback */
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the DMA error callback */
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* start (in case of SW start):                                           */
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable ADC DMA mode */
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start the DMA channel */
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of regular group.                                    */
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with SW start */
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with external trigger */
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of both groups regular and injected,
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC DMA transfer, disable ADC peripheral.
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 47


2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use,
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it should be preliminarily stopped using function
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_InjectedStop().
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To stop ADC conversion only on ADC group regular
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         while letting ADC group injected conversions running,
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADCEx_RegularStop_DMA().
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function is for single-ADC mode only. For multimode, use the 
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         dedicated MultimodeStop function.
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {  
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular and injected groups */
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);   
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);     
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to retain a potential failing status.                                  */
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(hadc);
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 48


2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC peripheral.
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use, it
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         only. For multimode, use the dedicated MultimodeStop function.
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC DMA mode */
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 49


2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get ADC regular group conversion result.
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of unitary conversion).
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag EOS 
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of sequence conversion).
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Occurrence of flag EOS rising:
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            to flag EOC.
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            both flags EOC and EOS are raised.
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADC_PollForConversion() 
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval ADC group regular conversion data
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: ADC flag EOC is not cleared here by software because               */
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       automatically cleared by hardware when reading register DR.        */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 50


2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return hadc->Instance->DR;
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get ADC regular group conversion result.
2781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of unitary conversion).
2783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag EOS 
2784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of sequence conversion).
2785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Occurrence of flag EOS rising:
2786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            to flag EOC.
2788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
2789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            both flags EOC and EOS are raised.
2791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
2792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADC_PollForConversion() 
2794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval ADC group regular conversion data
2797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
2799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       cleared by hardware when reading register DR.                      */
2805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
2807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return hadc->Instance->DR;
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Handles ADC interrupt request.  
2817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t overrun_error = 0U; /* flag set if overrun occurrence has to be considered as an error *
2823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
2824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cfgr     = 0x0U;
2825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cfgr_jqm = 0x0U;
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 51


2826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
2830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check End of Conversion flag for regular group ========== */
2833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if( (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC)) || 
2834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
2835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update state machine on conversion status if not in error state */
2837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
2838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
2840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
2841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* in function of multimode state (for devices with multimode           */
2845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* available).                                                          */
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_NONMULTIMODE_REG_OR_MULTIMODEMASTER(hadc))
2847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
2849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cfgr = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
2853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable interruption if no further conversion upcoming by regular      */
2856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* external trigger or by continuous mode,                                */
2857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* and if scan sequence if completed.                                     */
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)         && 
2859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == RESET)  )
2860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If End of Sequence is reached, disable interrupts */
2862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
2863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
2865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* ADSTART==0 (no conversion on going)                                */
2866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
2867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Disable ADC end of sequence conversion interrupt */
2869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
2870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
2871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* by overrun IRQ process below.                                    */
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state */
2875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
2876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 52


2883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
2885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC error code to ADC IP internal error */
2888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Conversion complete callback */
2894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: into callback, to determine if conversion has been triggered     */
2895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       from EOC or EOS, possibility to use:                             */
2896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "                */
2897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_ConvCpltCallback(hadc);
2898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag */
2901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       conversion flags clear induces the release of the preserved      */
2903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       data.                                                            */
2904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS) );
2907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check End of Conversion flag for injected group ========== */
2911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if( (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC)) ||   
2912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOS))   )
2913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
2915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave      */
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* in function of multimode state (for devices with multimode             */
2919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* available).                                                            */
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_NONMULTIMODE_REG_OR_MULTIMODEMASTER(hadc))
2921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
2923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cfgr = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
2927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* external trigger or by automatic injected conversion with regular      */
2931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* group having no further conversion upcoming (same conditions as        */
2932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* regular group interruption disabling above),                           */
2933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* and if injected scan sequence is completed.                            */
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                   ||
2935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
2936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
2937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
2938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If End of Sequence is reached, disable interrupts */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 53


2940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* in function of multimode state (for devices with multimode         */
2945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* available).                                                        */
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc))
2947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           tmp_cfgr_jqm = READ_REG(hadc->Instance->CFGR); 
2949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
2951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           tmp_cfgr_jqm = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
2953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Particular case if injected contexts queue is enabled:             */
2956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* when the last context has been fully processed, JSQR is reset      */
2957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* by the hardware. Even if no injected conversion is planned to come */
2958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* (queue empty, triggers are ignored), it can start again            */
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* immediately after setting a new context (JADSTART is still set).   */
2960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Therefore, state of HAL ADC injected group is kept to busy.        */
2961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if(READ_BIT(tmp_cfgr_jqm, ADC_CFGR_JQM) == RESET)
2962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* JADSTART==0 (no conversion on going)                             */
2965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
2966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             /* Disable ADC end of sequence conversion interrupt  */
2968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             
2970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             /* Set ADC state */
2971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
2974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             { 
2975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             }
2977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           else
2979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             /* Update ADC state machine to error */
2981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             /* Set ADC error code to ADC IP internal error */
2984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Conversion complete callback */
2991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: into callback, to determine if conversion has been triggered     */
2992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       from JEOC or JEOS, possibility to use:                           */
2993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) "               */
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 54


2997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check analog watchdog 1 flag ========== */
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD1) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD1))
3002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Level out of window 1 callback */
3007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
3008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
3009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
3010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check analog watchdog 2 flag ========== */
3013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD2) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD2))
3014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
3017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Level out of window 2 callback */
3019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
3020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
3021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
3022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   } 
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check analog watchdog 3 flag ========== */
3025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD3) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD3)) 
3026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Level out of window 3 callback */
3031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
3032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
3033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
3034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check Overrun flag ========== */
3037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_OVR) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR))
3038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If overrun is set to overwrite previous data (default setting),        */
3040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* overrun event is not considered as an error.                           */
3041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (cf ref manual "Managing conversions without using the DMA and         */
3042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* without overrun ")                                                     */
3043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Exception for usage with DMA overrun event always considered as an     */
3044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* error.                                                                 */
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
3046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       overrun_error = 1U;
3048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
3050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Pointer to the common control register to which is belonging hadc    */
3052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common */
3053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* control registers)                                                   */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 55


3054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpADC_Common = ADC_COMMON_REGISTER(hadc);
3055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check DMA configuration, depending on MultiMode set or not */
3057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_MULTI) == ADC_MODE_INDEPENDENT)
3058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_DMAEN))
3060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
3061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           overrun_error = 1U;  
3062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
3065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* MultiMode is enabled, Common Control Register MDMA bits must be checked */
3067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA) != RESET)
3068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
3069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           overrun_error = 1U;  
3070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (overrun_error == 1U)
3075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
3077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
3078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
3080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
3081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Error callback */ 
3083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_ErrorCallback(hadc);
3084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear the Overrun flag */
3087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
3088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check Injected context queue overflow flag ========== */
3093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JQOVF) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JQOVF))
3094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
3096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
3097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
3099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear the Injected context queue overflow flag */
3102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Error callback */ 
3105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
3106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 56


3111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Handles ADC interrupt request  
3117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
3119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
3121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
3125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
3126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check End of Conversion flag for regular group ========== */
3129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC))
3130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC) )
3132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update state machine on conversion status if not in error state */
3134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
3135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
3138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Determine whether any further conversion upcoming on group regular   */
3141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* by external trigger, continuous mode or scan sequence on going.      */
3142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: On STM32F37x devices, in case of sequencer enabled             */
3143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       (several ranks selected), end of conversion flag is raised     */
3144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       at the end of the sequence.                                    */
3145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(ADC_IS_SOFTWARE_START_REGULAR(hadc)       && 
3146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.ContinuousConvMode == DISABLE)  )
3147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable ADC end of single conversion interrupt  */
3149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
3150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
3155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
3156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Conversion complete callback */
3161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_ConvCpltCallback(hadc);
3162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear regular group conversion flag */
3164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
3165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 57


3168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check End of Conversion flag for injected group ========== */
3169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC))
3170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC))
3172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update state machine on conversion status if not in error state */
3174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
3175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Determine whether any further conversion upcoming on group injected  */
3181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* by external trigger, scan sequence on going or by automatic injected */
3182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* conversion from group regular (same conditions as group regular      */
3183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption disabling above).                                       */
3184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: On STM32F37x devices, in case of sequencer enabled             */
3185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       (several ranks selected), end of conversion flag is raised     */
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       at the end of the sequence.                                    */
3187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
3188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
3189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
3190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (hadc->Init.ContinuousConvMode == DISABLE)  )         )   )
3191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable ADC end of single conversion interrupt  */
3193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
3194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
3197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
3199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         { 
3200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Conversion complete callback */ 
3205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
3206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear injected group conversion flag */
3208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
3209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
3212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check Analog watchdog flags ========== */
3213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD))
3214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
3216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
3218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Level out of window callback */ 
3221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
3222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the ADC analog watchdog flag */
3224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 58


3225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
3230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
3238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
3239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
3240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  SingleDiff: Selection of single-ended or differential input
3242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
3243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_SINGLE_ENDED: Channel in mode input single ended
3244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_DIFFERENTIAL_ENDED: Channel in mode input differential ended
3245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef* hadc, uint32_t SingleDiff)
3248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
3251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
3259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
3260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
3261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
3262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
3263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
3265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
3266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Change ADC state */
3268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->State = HAL_ADC_STATE_READY;
3269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Select calibration mode single ended or differential ended */
3271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Instance->CR &= (~ADC_CR_ADCALDIF);
3272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
3273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->Instance->CR |= ADC_CR_ADCALDIF;
3275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start ADC calibration */
3278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Instance->CR |= ADC_CR_ADCAL;
3279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
3281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 59


3282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for calibration completion */
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADCAL))
3284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
3288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
3289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
3290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
3291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
3293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
3294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
3296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
3301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
3302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
3303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
3307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
3308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
3312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
3324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
3325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
3326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         During calibration process, ADC is enabled. ADC is let enabled at
3327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the completion of this function.
3328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef* hadc)
3332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
3335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
3336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 60


3339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Calibration prerequisite:                                             */
3344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    - ADC must be disabled for at least two ADC clock cycles in disable   */
3345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      mode before ADC enable                                              */
3346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups       */
3347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
3348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
3349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
3351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
3352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
3355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
3356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
3357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait two ADC clock cycles */
3359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(wait_loop_index < ADC_CYCLE_WORST_CASE_CPU_CYCLES *2U)
3360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       wait_loop_index++;
3362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Enable the ADC peripheral */
3365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_Enable(hadc);
3366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 3. Resets ADC calibration registers */  
3369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_RSTCAL);
3370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
3372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for calibration reset completion */
3374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_RSTCAL))
3375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
3377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
3379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
3380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
3381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
3382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
3384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
3385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
3387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 4. Start ADC calibration */
3392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_CAL);
3393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
3395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 61


3396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for calibration completion */
3397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_CAL))
3398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
3400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
3402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
3403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
3404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
3405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
3407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
3408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
3410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
3415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
3416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
3417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
3421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
3427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get the calibration factor from automatic conversion result
3434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  SingleDiff: Selection of single-ended or differential input
3436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
3437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_SINGLE_ENDED: Channel in mode input single ended
3438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_DIFFERENTIAL_ENDED: Channel in mode input differential ended
3439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval Converted value
3440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(ADC_HandleTypeDef* hadc, uint32_t SingleDiff)
3442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff)); 
3446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */ 
3448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
3449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return ADC_CALFACT_DIFF_GET(hadc->Instance->CALFACT);
3451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 62


3453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return ((hadc->Instance->CALFACT) & ADC_CALFACT_CALFACT_S);
3455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result. ADC must be enable
3468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  SingleDiff: Selection of single-ended or differential input
3470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
3471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_SINGLE_ENDED: Channel in mode input single ended
3472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_DIFFERENTIAL_ENDED: Channel in mode input differential ended
3473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  CalibrationFactor: Calibration factor (coded on 7 bits maximum)
3474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL state
3475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef* hadc, uint32_t SingleDiff, uint
3477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff)); 
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor)); 
3484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ( (ADC_IS_ENABLE(hadc) != RESET)                              &&
3491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
3492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the selected ADC calibration value */ 
3494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
3495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CALFACT                ,
3497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_CALFACT_D                  ,
3498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_DIFF_SET(CalibrationFactor) );
3499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
3501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CALFACT,
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_CALFACT_S  ,
3504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  CalibrationFactor       );
3505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 63


3510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to ADC IP internal error */
3513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
3518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group.
3533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
3534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
3535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC slave first, then ADC master. 
3536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).  
3537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
3538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc)
3542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
3549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
3550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
3552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
3553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
3555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
3556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start conversion if ADC is effectively enabled */
3558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
3559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
3561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
3563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
3564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
3565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
3566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 64


3567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of independent mode or multimode(for devices with several ADCs):*/
3568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set multimode state.                                                 */
3569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
3570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
3572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
3574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
3576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
3579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: On this device, there is no ADC error code fields related to   */
3580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       conversions on group injected only. In case of conversion on   */
3581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       going on group regular, no error code is reset.                */
3582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
3583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC all error code fields */
3585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
3586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
3589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
3590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
3591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
3592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear injected group conversion flag */
3594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC           */
3595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* operations)                                                          */
3596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
3597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected           */
3599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* conversion is disabled.                                              */
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
3601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
3602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
3603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of multimode enabled (for devices with several ADCs):           */
3604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is slave, ADC is enabled only (conversion is not started). */
3605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
3606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO) && 
3607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
3608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_JADSTART);
3610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
3613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
3615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
3616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
3621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 65


3624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group.
3634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
3635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc)
3639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
3649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
3650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
3652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
3653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
3655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
3656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
3657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
3658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
3659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
3660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
3662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
3663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
3664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
3665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
3666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
3668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
3669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
3672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
3673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
3674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
3675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
3677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
3678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
3679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of injected group.                                   */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 66


3681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
3682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
3683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
3684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
3685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
3686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
3687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
3688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_INJECTED(hadc)               && 
3689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
3690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on injected group with SW start */
3692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
3693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
3695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on injected group with external trigger */
3697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_JEXTTRIG);
3698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
3705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group injected conversion (potential conversion on going
3712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group regular is not impacted), disable ADC peripheral
3713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group regular.
3714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
3715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
3716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
3717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
3718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
3719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
3720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
3721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC master first, then ADC slave.
3722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled. 
3723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
3724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
3725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
3726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
3728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc)
3730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 67


3738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
3740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
3741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
3742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC injected group conversion stop:                                */
3743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
3744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group regular) can continue (groups regular and injected              */
3745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
3746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
3747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group regular) must be intended to   */
3748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
3749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
3750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO))
3751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Stop potential conversion on going on injected group only. */
3753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
3754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC peripheral if conversion on ADC group injected is          */
3756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* effectively stopped and if no conversion on the other group            */
3757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (ADC group regular) is intended to continue.                           */
3758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
3759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {      
3760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET) &&
3761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
3762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* 2. Disable the ADC peripheral */
3764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
3765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Check if ADC is effectively disabled */
3767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
3768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
3769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state */
3770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
3771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
3772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_READY);
3773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Conversion on ADC group injected group is stopped, but ADC is not    */
3776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* disabled since conversion on ADC group regular is still on going.    */
3777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
3778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
3781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
3787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
3790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
3794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 68


3795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
3806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         no regular conversion is on going.
3807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
3808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
3809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
3810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
3811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
3813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc)
3815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
3825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
3826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
3827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
3828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   are common)                                                            */
3829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
3830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
3831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
3832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
3834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
3835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
3836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
3838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
3839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
3841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
3842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
3843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
3844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
3849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 69


3852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
3856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
3861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
3868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
3870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
3873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
3875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_Flag_EOC;
3876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cfgr = 0x00000000U;
3877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If end of conversion selected to end of sequence */
3882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
3883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_Flag_EOC = ADC_FLAG_JEOS;
3885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If end of conversion selected to end of each conversion */
3887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else /* ADC_EOC_SINGLE_CONV */
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_Flag_EOC = (ADC_FLAG_JEOC | ADC_FLAG_JEOS);
3890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave      */
3893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode             */
3894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* available).                                                            */
3895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
3896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
3898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
3902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get tick count */
3905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
3906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
3907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Wait until End of Conversion flag is raised */
3908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 70


3909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
3911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
3912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
3914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
3916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
3917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
3919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
3920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_TIMEOUT;
3922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update ADC state machine */
3927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
3928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
3930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
3931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* from group regular.                                                      */
3932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                   ||
3933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
3934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
3935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
3936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
3939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
3941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear end of conversion flag of injected group if low power feature      */
3947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* "Auto Wait" is disabled, to not interfere with this feature until data   */
3948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* register is read using function HAL_ADC_GetValue().                      */
3949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (READ_BIT (tmp_cfgr, ADC_CFGR_AUTDLY) == RESET)
3950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
3952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (JEOC or JEOS depending on HAL ADC initialization parameter) */
3953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, tmp_Flag_EOC);
3954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
3957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
3958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 71


3966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
3967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
3969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
3972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
3974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Variables for polling in case of scan mode enabled */
3976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles_max =0U;
3977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles =0U;
3978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  
3979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get tick count */
3983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
3984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
3985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
3986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion.                                                              */
3987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For injected group, flag JEOC is set only at the end of the sequence,    */
3988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* not for each conversion within the sequence.                             */
3989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - If single conversion for injected group (scan mode disabled or        */
3990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion ==1U), flag JEOC is used to determine the      */
3991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    conversion completion.                                                */
3992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - If sequence conversion for injected group (scan mode enabled and      */
3993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion >=2U), flag JEOC is set only at the end of the */
3994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    sequence.                                                             */
3995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
3996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
3997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
3998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
3999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    As flag JEOC is not set after each conversion, no timeout status can  */
4000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    be set.                                                               */
4001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ((hadc->Instance->JSQR & ADC_JSQR_JL) == RESET)
4002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait until End of Conversion flag is raised */
4004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_JEOC))
4005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
4007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
4008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
4010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
4011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
4012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
4013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Process unlocked */
4015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
4016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
4018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
4019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 72


4023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Replace polling by wait for maximum conversion time */
4025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Calculation of CPU cycles corresponding to ADC conversion cycles.      */
4026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Retrieve ADC clock prescaler and ADC maximum conversion cycles on all  */
4027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* channels.                                                              */
4028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max = ADC_CLOCK_PRESCALER_RANGE();
4029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max *= ADC_CONVCYCLES_MAX_RANGE(hadc);
4030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Poll with maximum conversion time */
4032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
4033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
4035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
4036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
4038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
4039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
4040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
4041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Process unlocked */
4043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
4044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
4046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
4047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       Conversion_Timeout_CPU_cycles ++;
4049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear injected group conversion flag (and regular conversion flag raised simultaneously) */
4054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JSTRT | ADC_FLAG_JEOC | ADC_FLAG_EOC);
4055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update ADC state machine */
4057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
4058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
4060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
4061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* from group regular.                                                      */
4062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
4063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
4064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
4065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
4066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
4068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
4069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
4071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
4073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
4077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
4078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 73


4080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
4084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
4085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group with interruption.
4087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
4088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group) or JEOS (end of 
4089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of injected group) depending on ADC initialization 
4090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            parameter "EOCSelection"
4091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
4092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
4093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC slave first, then ADC master. 
4094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).  
4095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
4096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
4098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc)
4100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
4107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
4108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
4110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
4111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
4113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
4114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
4116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start conversion if ADC is effectively enabled */
4117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
4120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
4121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
4122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
4123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
4124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
4125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of independent mode or multimode(for devices with several ADCs):*/
4127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set multimode state.                                                 */
4128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
4129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
4131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
4133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
4135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 74


4137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
4138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: On this device, there is no ADC error code fields related to   */
4139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       conversions on group injected only. In case of conversion on   */
4140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       going on group regular, no error code is reset.                */
4141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
4142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC all error code fields */
4144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
4145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
4149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
4150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear injected group conversion flag */
4153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC           */
4154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* operations)                                                          */
4155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
4156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC Injected context queue overflow interrupt if this feature */
4158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* is enabled.                                                          */
4159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((hadc->Instance->CFGR & ADC_CFGR_JQM) != RESET)
4160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_FLAG_JQOVF);
4162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
4165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       switch(hadc->Init.EOCSelection)
4166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV: 
4168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
4169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
4170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
4171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
4172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         default:
4173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
4174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
4175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected           */
4178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* conversion is disabled.                                              */
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
4180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
4181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
4182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of multimode enabled (for devices with several ADCs):           */
4183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is slave, ADC is enabled only (conversion is not started). */
4184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
4185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO) && 
4186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
4187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_JADSTART);
4189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
4192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 75


4194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
4200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
4206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
4207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
4208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
4209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
4211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group with interruption.
4213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
4214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group)
4215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
4216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
4218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc)
4220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
4230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
4231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
4233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
4234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
4236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
4237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
4238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
4239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
4240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
4241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
4243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
4244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
4245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
4246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
4247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
4249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
4250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 76


4251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
4253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
4254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
4255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
4256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to none */
4258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
4259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
4261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
4262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
4263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable end of conversion interrupt for injected channels */
4265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
4266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of injected group.                                   */
4268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
4269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
4270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
4271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
4272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
4273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
4274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
4275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_INJECTED(hadc)              && 
4276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)  )
4277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on injected group with SW start */
4279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
4280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
4282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on injected group with external trigger */
4284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_JEXTTRIG);
4285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
4292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
4296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
4297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group injected conversion (potential conversion on going
4299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group regular is not impacted), disable ADC peripheral
4300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group regular.
4301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
4302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group) and JEOS (end of 
4303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of injected group)
4304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
4305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
4306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
4307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 77


4308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
4309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
4310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
4311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC master first, then ADC slave.
4312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled. 
4313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
4314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
4315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
4316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
4318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef* hadc)
4320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** { 
4321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
4330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
4331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
4332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC injected group conversion stop:                                */
4333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
4334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group regular) can continue (groups regular and injected              */
4335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
4336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
4337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group regular) must be intended to   */
4338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
4339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
4340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO))
4341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Stop potential conversion on going on injected group only. */
4343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
4344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC peripheral if conversion on ADC group injected is          */
4346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* effectively stopped and if no conversion on the other group            */
4347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (ADC group regular) is intended to continue.                           */
4348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable ADC end of conversion interrupt for injected channels */
4351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_JEOC | ADC_IT_JEOS | ADC_IT_JQOVF));
4352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET) &&
4354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
4355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* 2. Disable the ADC peripheral */
4357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
4358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Check if ADC is effectively disabled */
4360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
4361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
4362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state */
4363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
4364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 78


4365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_READY);
4366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
4367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Conversion on ADC group injected group is stopped, but ADC is not    */
4369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* disabled since conversion on ADC group regular is still on going.    */
4370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
4371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
4373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
4374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
4380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
4381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
4383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
4386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
4387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
4392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
4393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
4394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
4395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
4397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of 
4399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
4400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         is on going.
4401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
4402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
4403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
4404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
4406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef* hadc)
4408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
4418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
4419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
4420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
4421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   are common)                                                            */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 79


4422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */ 
4423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
4424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
4425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
4427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
4428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
4429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
4431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable ADC end of conversion interrupt for injected channels */
4434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
4435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
4437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
4438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
4439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
4440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
4445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
4446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
4448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
4451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
4452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
4457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx)
4461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  With ADC configured in multimode, for ADC master:
4463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Enables ADC, starts conversion of regular group and transfers result
4464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         through DMA.
4465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Multimode must have been previously configured using 
4466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
4467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
4468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
4469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
4470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
4471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
4472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC slave must be preliminarily enabled using single-mode  
4473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_Start() function.
4474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
4475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  pData: The destination Buffer address.
4476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
4477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
4478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 80


4479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t L
4480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
4483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
4484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
4487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
4488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
4489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
4490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
4495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (check on ADC master only) */
4496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
4497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
4499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 2 ADC slaves)        */
4500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
4501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
4503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
4505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
4506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
4511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripherals: master and slave (in case if not already   */
4515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enabled previously)                                                    */
4516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
4517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(&tmphadcSlave);
4520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start conversion all ADCs of multimode are effectively enabled */
4523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state (ADC master)                                           */
4526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to regular group conversion results   */
4527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to regular operation                    */
4528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
4529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
4530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
4531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If conversions on group regular are also triggering group injected,  */
4533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* update ADC state.                                                    */
4534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
4535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 81


4536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
4537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
4541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
4542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to none */
4545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
4546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the DMA transfer complete callback */
4549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
4550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          
4551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the DMA half transfer complete callback */
4552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
4553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the DMA error callback */
4555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError ;
4556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Pointer to the common control register to which is belonging hadc    */
4558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common */
4559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* control registers)                                                   */
4560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpADC_Common = ADC_COMMON_REGISTER(hadc);
4561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
4564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* start (in case of SW start):                                         */
4565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
4567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
4568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
4569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */
4571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
4572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start the DMA channel */
4574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&tmpADC_Common->CDR, (uint32_t)pData, Length);
4575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                  */
4577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
4578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
4579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
4580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
4581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
4584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
4592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 82


4593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  With ADC configured in multimode, for ADC master:
4600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Stop ADC group regular conversion (potential conversion on going
4601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted),
4602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC DMA transfer, disable ADC peripheral
4603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
4604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
4605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
4606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
4607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
4608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, this function also stop conversion
4609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected.
4610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. To disable multimode
4611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (set with HAL_ADCEx_MultiModeConfigChannel() ), ADC must be 
4612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_ReInit().
4613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function 
4614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA must be called after this function with handle of
4615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel of ADC slave.
4616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
4617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
4618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef* hadc)
4620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
4623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
4624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
4627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular and          */
4632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    injected groups.                                                      */
4633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
4634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
4636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
4637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
4639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 2 ADC slaves)        */
4640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
4641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
4643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine (ADC master) to error */
4645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
4646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 83


4650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
4651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
4654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
4655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Wait until ADSTP=0 for ADC master and ADC slave */
4657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
4658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(ADC_IS_CONVERSION_ONGOING_REGULAR(hadc)          || 
4660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
4661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
4663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine (ADC master) to error */
4665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
4666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
4668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
4669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
4671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
4675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
4676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: In case of ADC slave using its own DMA channel (multimode        */
4677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       parameter "DMAAccessMode" set to disabled):                      */
4678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       DMA channel of ADC slave should stopped after this function with */
4679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       function HAL_ADC_Stop_DMA.                                       */
4680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
4681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
4683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
4684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
4686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
4687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
4690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
4691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
4695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
4696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to retain a potential failing status.                                  */
4697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if ADC are effectively disabled */
4700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) != HAL_ERROR)          &&
4701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
4702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
4704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Change ADC state (ADC master) */
4706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 84


4707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
4708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
4709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
4712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC instances anyway */
4714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(hadc);
4715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(&tmphadcSlave);
4716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine (ADC master) to error */
4718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
4719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
4724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
4725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Returns the last ADC Master&Slave regular conversions results data
4732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in the selected multi mode.
4733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register CDR does not clear flag ADC flag EOC
4734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of unitary conversion),
4735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         as it is the case for independent mode data register.
4736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
4737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval The converted data value.
4738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef* hadc)
4740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
4742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
4745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Pointer to the common control register to which is belonging hadc        */
4747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common     */
4748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* control registers)                                                       */
4749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmpADC_Common = ADC_COMMON_REGISTER(hadc);
4750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
4752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmpADC_Common->CDR;
4753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
4755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
4756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx    */
4757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
4761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
4762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 85


4764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
4765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
4766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS 
4767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
4768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
4769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
4770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            to flag JEOC.
4771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
4772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
4773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
4774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
4775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
4776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
4777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
4778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
4779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion() 
4780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
4781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  InjectedRank: the converted ADC injected rank.
4783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
4784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_1: Injected Channel1 selected
4785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_2: Injected Channel2 selected
4786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_3: Injected Channel3 selected
4787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_4: Injected Channel4 selected
4788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
4789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef* hadc, uint32_t InjectedRank)
4791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0U;
4793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
4797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: ADC flag JEOC is not cleared here by software because              */
4799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       automatically cleared by hardware when reading register JDRx.      */
4800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get ADC converted value */ 
4802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   switch(InjectedRank)
4803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {  
4804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4: 
4805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
4806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
4808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
4809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
4811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
4812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
4814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default:
4815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
4816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
4820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_jdr;
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 86


4821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
4823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
4824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
4825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
4826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
4828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
4830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
4831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
4832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS 
4833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
4834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
4835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
4836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            to flag JEOC.
4837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
4838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
4839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
4840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
4841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
4842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
4843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
4844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
4845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion() 
4846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
4847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  InjectedRank: the converted ADC injected rank.
4849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
4850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_1: Injected Channel1 selected
4851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_2: Injected Channel2 selected
4852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_3: Injected Channel3 selected
4853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_4: Injected Channel4 selected
4854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
4855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef* hadc, uint32_t InjectedRank)
4857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0U;
4859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
4863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get ADC converted value */ 
4865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   switch(InjectedRank)
4866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {  
4867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4: 
4868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
4869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
4871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
4872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
4874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
4875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
4877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 87


4878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
4879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
4883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_jdr;
4884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
4886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
4890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
4891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group regular conversion (potential conversion on going
4893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted), disable ADC peripheral
4894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
4895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
4896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
4897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
4898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
4899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, this function also stop conversion
4900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected.
4901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
4903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop(ADC_HandleTypeDef* hadc)
4905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
4915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
4916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC regular group conversion stop:                                 */
4917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
4918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group injected) can continue (groups regular and injected             */
4919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
4920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
4921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group injected) must be intended to  */
4922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
4923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
4924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular group only */
4926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
4927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversion on ADC group regular is             */
4929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* effectively stopped and if no conversion on the other group              */
4930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (ADC group injected) is intended to continue.                            */
4931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET) &&
4932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
4933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 88


4935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
4936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
4938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
4941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
4942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
4943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
4944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conversion on ADC group regular group is stopped, but ADC is not         */
4947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled since conversion on ADC group injected is still on going.       */
4948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
4951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
4952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
4955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
4956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group regular conversion (potential conversion on going
4963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted), disable ADC peripheral
4964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
4965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
4966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - EOC (end of conversion of regular group) and EOS (end of 
4967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of regular group)
4968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
4969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
4970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
4971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
4972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
4973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, this function also stop conversion
4974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected.
4975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
4977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_IT(ADC_HandleTypeDef* hadc)
4979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
4989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
4990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC regular group conversion stop:                                 */
4991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 89


4992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group injected) can continue (groups regular and injected             */
4993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
4994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
4995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group injected) must be intended to  */
4996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
4997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
4998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular group only */
5000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
5001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversion on ADC group regular is             */
5003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* effectively stopped and if no conversion on the other group              */
5004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (ADC group injected) is intended to continue.                            */
5005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET) &&
5006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
5007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for regular group */
5009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
5010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
5011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
5013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
5014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
5016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
5017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
5019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
5020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
5021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
5022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conversion on ADC group regular group is stopped, but ADC is not         */
5025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled since conversion on ADC group injected is still on going.       */
5026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
5029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
5030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
5034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
5037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group regular conversion (potential conversion on going
5041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted), 
5042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC DMA transfer, disable ADC peripheral
5043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
5044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
5045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
5046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
5047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
5048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 90


5049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
5050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
5051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
5052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
5053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function is for single-ADC mode only. For multimode, use the 
5054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         dedicated MultimodeStop function.
5055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
5057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_DMA(ADC_HandleTypeDef* hadc)
5059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
5061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
5064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
5067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
5069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
5070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC regular group conversion stop:                                 */
5071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
5072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group injected) can continue (groups regular and injected             */
5073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
5074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
5075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group injected) must be intended to  */
5076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
5077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
5078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular group only */
5080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
5081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversion on ADC group regular is             */
5083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* effectively stopped and if no conversion on the other group              */
5084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (ADC group injected) is intended to continue.                            */
5085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET) &&
5086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
5087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
5089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
5090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
5092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
5093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);   
5094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
5097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
5099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);     
5100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
5103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
5104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 91


5106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
5107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to retain a potential failing status.                                  */
5108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
5109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
5111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
5113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(hadc);
5115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
5118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
5119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
5121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
5122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
5123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
5124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conversion on ADC group regular group is stopped, but ADC is not         */
5127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled since conversion on ADC group injected is still on going.       */
5128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
5131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
5132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
5136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
5139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
5142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
5143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx)
5144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  With ADC configured in multimode, for ADC master:
5146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Stop ADC group regular conversion (potential conversion on going
5147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted),
5148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC DMA transfer, disable ADC peripheral
5149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
5150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
5151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
5152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
5153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
5154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
5155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
5156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularMultiModeStop_DMA() and
5157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_InjectedStop(), use function
5158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_MultiModeStop_DMA.
5159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, this function also stop conversion
5160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected.
5161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. To disable multimode
5162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (set with HAL_ADCEx_MultiModeConfigChannel() ), ADC must be 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 92


5163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_ReInit().
5164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function 
5165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA must be called after this function with handle of
5166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel of ADC slave.
5167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
5168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularMultiModeStop_DMA(ADC_HandleTypeDef* hadc)
5171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
5173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
5174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
5175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
5178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
5181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
5183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
5184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC regular group conversion stop:                                 */
5185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
5186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group injected) can continue (groups regular and injected             */
5187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
5188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
5189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group injected) must be intended to  */
5190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
5191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
5192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular group only */
5194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
5195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversion on ADC group regular is             */
5197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* effectively stopped and if no conversion on the other group              */
5198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (ADC group injected) is intended to continue.                            */
5199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET) &&
5200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
5201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
5203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 2 ADC slaves)        */
5204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
5205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
5207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine (ADC master) to error */
5209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
5210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
5212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
5213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
5215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
5218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
5219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 93


5220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Wait until ADSTP=0 for ADC master and ADC slave*/
5221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
5222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(ADC_IS_CONVERSION_ONGOING_REGULAR(hadc)          || 
5224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
5225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
5227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine (ADC master) to error */
5229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
5230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
5232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
5233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
5235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
5239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
5240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: In case of ADC slave using its own DMA channel (multimode        */
5241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       parameter "DMAAccessMode" set to disabled):                      */
5242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       DMA channel of ADC slave should stopped after this function with */
5243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       function HAL_ADC_Stop_DMA.                                       */
5244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
5245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
5247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
5248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
5250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
5251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
5254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
5255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
5259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
5260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to retain a potential failing status.                                  */
5261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
5262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if ADC are effectively disabled */
5264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) != HAL_ERROR)          &&
5265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
5266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
5268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Change ADC state (ADC master) */
5270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
5271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
5272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
5273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
5276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 94


5277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC instances anyway */
5278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(hadc);
5279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(&tmphadcSlave);
5280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine (ADC master) to error */
5282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
5283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conversion on ADC group regular group is stopped, but ADC is not         */
5287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled since conversion on ADC group injected is still on going.       */
5288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
5291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
5292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
5296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
5299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
5301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
5302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx    */
5303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
5306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
5307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
5308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
5309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non blocking mode 
5312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef* hadc)
5316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
5318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   UNUSED(hadc);
5319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             the HAL_ADCEx_InjectedConvCpltCallback could be implemented in the user file
5322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
5326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
5327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
5328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
5329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Injected context queue overflow flag callback. 
5331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This callback is called if injected context queue is enabled
5332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (parameter "QueueInjectedContext" in injected channel configuration)
5333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             and if a new injected context is set when queue is full (maximum 2
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 95


5334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             contexts).
5335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedQueueOverflowCallback(ADC_HandleTypeDef* hadc)
5339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
5341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   UNUSED(hadc);
5342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
5344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedQueueOverflowCallback must be implemented 
5345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             in the user file.
5346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         
5349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non blocking mode. 
5351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef* hadc)
5355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
5357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   UNUSED(hadc);
5358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
5360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             function HAL_ADC_LevelOoutOfWindow2Callback must be implemented in the user file.
5361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non blocking mode. 
5366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef* hadc)
5370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
5372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   UNUSED(hadc);
5373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
5375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             function HAL_ADC_LevelOoutOfWindow3Callback must be implemented in the user file.
5376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
5379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
5380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
5381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
5382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
5385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group3 ADCEx Peripheral Control functions
5388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
5389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
5390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @verbatim   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 96


5391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================
5392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
5393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================  
5394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
5395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Configure channels on regular group
5396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Configure channels on injected group
5397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Configure multimode
5398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Configure the analog watchdog
5399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @endverbatim
5401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
5402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
5406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
5407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
5408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
5409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the the selected channel to be linked to the regular
5411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         group.
5412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
5413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
5414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The recommended sampling time is at least:
5415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
5416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
5417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            Vbat/VrefInt/TempSensor.
5418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         These internal paths can be be disabled using function 
5419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
5420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
5421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes channel into regular group, following  
5422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
5423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without reseting 
5424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the ADC.
5425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
5426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
5427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_ChannelConfTypeDef".
5428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  sConfig: Structure ADC channel for regular group.
5430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
5431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
5433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
5435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
5436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
5437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
5438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
5439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
5442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
5443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
5444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
5445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
5446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
5447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 97


5448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification of channel number: Channels 1 to 14 are available in        */  
5450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* differential mode. Channels 15U, 16U, 17U, 18 can be used only in           */
5451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* single-ended mode.                                                       */
5452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
5453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(sConfig->Channel));
5455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_DIFF_CHANNEL(sConfig->Channel));
5459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
5463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
5466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
5467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
5468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel number                                                        */
5469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel rank                                                          */
5470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
5471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Regular sequence configuration */
5473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For Rank 1 to 4U */
5474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfig->Rank < 5U)
5475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR1,
5477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_RK(ADC_SQR2_SQ5, sConfig->Rank)    ,
5478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_RK(sConfig->Channel, sConfig->Rank) );
5479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For Rank 5 to 9U */
5481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else if (sConfig->Rank < 10U)
5482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR2,
5484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR2_RK(ADC_SQR2_SQ5, sConfig->Rank)    ,
5485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR2_RK(sConfig->Channel, sConfig->Rank) );
5486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For Rank 10 to 14U */
5488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else if (sConfig->Rank < 15U)
5489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR3                        ,
5491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR3_RK(ADC_SQR3_SQ10, sConfig->Rank)   ,
5492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR3_RK(sConfig->Channel, sConfig->Rank) );
5493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For Rank 15 to 16U */
5495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
5496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {   
5497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR4                        ,
5498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR4_RK(ADC_SQR4_SQ15, sConfig->Rank)   ,
5499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR4_RK(sConfig->Channel, sConfig->Rank) );
5500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
5504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 98


5505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
5506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
5507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
5508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
5509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Channel sampling time configuration */
5511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For channels 10 to 18U */
5512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfig->Channel >= ADC_CHANNEL_10)
5513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR2                             ,
5515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel)      ,
5516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel) );
5517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else /* For channels 1 to 9U */
5519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR1                             ,
5521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel)       ,
5522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel) );
5523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
5527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Shift the offset in function of the selected ADC resolution. */
5529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11U, the LSB (right bits) are set  */
5530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to 0.                                                                  */
5531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfig->Offset);
5532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configure the selected offset register:                                */
5534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Enable offset                                                        */
5535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set channel number                                                   */
5536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set offset value                                                     */
5537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     switch (sConfig->OffsetNumber)
5538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_1:
5540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 1U */
5541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR1               ,
5542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_CH |
5543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1                   ,
5544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_EN               |
5545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfig->Channel) |
5546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                    );
5547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
5548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_2:
5550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 2U */
5551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR2               ,
5552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_CH |
5553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2                   ,
5554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_EN               |
5555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfig->Channel) |
5556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                    );
5557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
5558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_3:
5560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 3U */
5561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR3               ,
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 99


5562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_CH |
5563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3                   ,
5564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_EN               |
5565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfig->Channel) |
5566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                    );
5567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
5568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_4:
5570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 4U */
5571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR4               ,
5572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_CH |
5573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4                   ,
5574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_EN               |
5575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfig->Channel) |
5576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                    );
5577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
5578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case ADC_OFFSET_NONE */
5580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default :
5581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is        */
5582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enabled. If this is the case, offset OFRx is disabled.                 */
5583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
5584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR1*/
5586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN);
5587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
5589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR2*/
5591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN); 
5592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
5594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR3*/
5596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN);
5597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
5599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR4*/
5601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN);
5602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
5604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  
5608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
5610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
5611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
5612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
5613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
5614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of differential mode */
5616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
5617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable differential mode (default mode: single-ended) */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 100


5619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfig->Channel));
5620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
5622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable differential mode */
5624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfig->Channel));
5625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Channel sampling time configuration (channel ADC_INx +1              */
5627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* corresponding to differential negative input).                       */
5628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* For channels 10 to 18U */
5629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfig->Channel >= ADC_CHANNEL_10)
5630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR2,
5632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel +1U)      ,
5633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel +1U) );
5634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else /* For channels 1 to 9U */
5636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR1,
5638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel +1U)       ,
5639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel +1U) );
5640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Management of internal measurement channels: VrefInt/TempSensor/Vbat   */
5645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* internal measurement paths enable: If internal channel selected,       */
5646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enable dedicated internal buffers and path.                            */
5647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: these internal measurement paths can be disabled using           */
5648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* HAL_ADC_DeInit().                                                      */
5649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        
5650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of common ADC parameters                                 */
5651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
5652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common   */
5653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
5654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
5655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If the requested internal measurement path has already been enabled,   */
5657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bypass the configuration processing.                                   */
5658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (( (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) &&
5659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
5660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VBAT)       &&
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
5662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
5663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
5664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        )
5665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of common ADC parameters (continuation)                */
5667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set handle of the other ADC sharing the same common register         */
5668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
5669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Software is allowed to change common parameters only when all ADCs   */
5671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* of the common group are disabled.                                    */
5672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                                    &&
5673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
5674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
5675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 101


5676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_16 is selected, enable Temp. sensor measurement path    */
5677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: Temp. sensor internal channels available on ADC1 only        */
5678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && (hadc->Instance == ADC1))
5679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
5680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_TSEN);
5681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
5682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Delay for temperature sensor stabilization time */
5683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Compute number of CPU cycles to wait for */
5684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
5685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
5686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
5687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             wait_loop_index--;
5688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
5689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
5690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_17 is selected, enable VBAT measurement path            */
5691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: VBAT internal channels available on ADC1 only                */
5692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && (hadc->Instance == ADC1))
5693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
5694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VBATEN);
5695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
5696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_18 is selected, enable VREFINT measurement path         */
5697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: VrefInt internal channels available on all ADCs, but only    */
5698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       one ADC is allowed to be connected to VrefInt at the same    */
5699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       time.                                                        */
5700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else if (sConfig->Channel == ADC_CHANNEL_VREFINT)
5701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
5702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VREFEN);
5703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
5704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If the requested internal measurement path has already been          */
5706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* enabled and other ADC of the common group are enabled, internal      */
5707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* measurement paths cannot be enabled.                                 */
5708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else  
5709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
5711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
5712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
5714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If a conversion is on going on regular group, no update on regular       */
5721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* channel could be done on neither of the channel configuration structure  */
5722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* parameters.                                                              */
5723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
5726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
5727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
5729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 102


5733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
5736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
5738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
5739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
5740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
5741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
5743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the the selected channel to be linked to the regular
5745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         group.
5746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
5747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
5748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The recommended sampling time is at least:
5749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
5750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
5751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            Vbat/VrefInt/TempSensor.
5752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         These internal paths can be be disabled using function 
5753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
5754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
5755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes channel into regular group, following  
5756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
5757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without reseting 
5758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the ADC.
5759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
5760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
5761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_ChannelConfTypeDef".
5762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  sConfig: Structure of ADC channel for regular group.
5764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
5765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
5767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** { 
5768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
5769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
5770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
5773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
5774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
5775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
5776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
5779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Regular sequence configuration */
5782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For Rank 1 to 6U */
5783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfig->Rank < 7U)
5784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SQR3                        ,
5786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank)    ,
5787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR3_RK(sConfig->Channel, sConfig->Rank) );
5788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For Rank 7 to 12U */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 103


5790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else if (sConfig->Rank < 13U)
5791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SQR2                        ,
5793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank)    ,
5794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR2_RK(sConfig->Channel, sConfig->Rank) );
5795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For Rank 13 to 16U */
5797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SQR1                        ,
5800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank)   ,
5801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR1_RK(sConfig->Channel, sConfig->Rank) );
5802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Channel sampling time configuration */
5806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For channels 10 to 18U */
5807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfig->Channel > ADC_CHANNEL_10)
5808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR1                             ,
5810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel)      ,
5811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel) );
5812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else   /* For channels 0 to 9U */
5814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR2                             ,
5816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel)       ,
5817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel) );
5818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
5821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
5822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) ||
5823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
5824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
5826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
5828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Delay for temperature sensor stabilization time */
5830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Compute number of CPU cycles to wait for */
5831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
5832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       while(wait_loop_index != 0U)
5833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         wait_loop_index--;
5835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* if ADC1 Channel_18 is selected, enable VBAT measurement path */
5839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else if (sConfig->Channel == ADC_CHANNEL_VBAT)
5840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_VBAT);
5842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
5845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 104


5847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
5850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
5852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
5854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
5855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
5856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
5857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the ADC injected group and the selected channel to be
5859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         linked to the injected group.
5860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
5861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this 
5862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
5863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without reseting the ADC.
5864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
5865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
5866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef".
5867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
5868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
5869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The recommended sampling time is at least:
5870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
5871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
5872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            Vbat/VrefInt/TempSensor.
5873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         These internal paths can be be disabled using function 
5874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
5875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To reset injected sequencer, function HAL_ADCEx_InjectedStop() can
5876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be used.
5877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Caution: For Injected Context Queue use: a context must be fully 
5878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * defined before start of injected conversion: all channels configured 
5879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * consecutively for the same ADC instance. Therefore, Number of calls of 
5880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * HAL_ADCEx_InjectedConfigChannel() must correspond to value of parameter 
5881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * InjectedNbrOfConversion for each context.
5882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *  - Example 1: If 1 context intended to be used (or not use of this feature: 
5883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    QueueInjectedContext=DISABLE) and usage of the 3 first injected ranks 
5884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    (InjectedNbrOfConversion=3), HAL_ADCEx_InjectedConfigChannel() must be  
5885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    called once for each channel (3 times) before launching a conversion.   
5886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    This function must not be called to configure the 4th injected channel:   
5887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    it would start a new context into context queue.
5888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *  - Example 2: If 2 contexts intended to be used and usage of the 3 first 
5889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    injected ranks (InjectedNbrOfConversion=3),  
5890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() must be called once for each channel and  
5891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    for each context (3 channels x 2 contexts = 6 calls). Conversion can  
5892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    start once the 1st context is set. The 2nd context can be set on the fly.
5893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  sConfigInjected: Structure of ADC injected group and ADC channel for
5895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         injected group.
5896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef* hadc, ADC_InjectionConfTypeDef
5899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
5901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
5902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
5903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 105


5904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
5905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Injected context queue feature: temporary JSQR variables defined in      */
5907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* static to be passed over calls of this function                          */
5908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_JSQR_ContextQueueBeingBuilt = 0U;
5909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
5912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
5913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfigInjected->InjectedSingleDiff));
5914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
5915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->QueueInjectedContext));
5916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC_EDGE(sConfigInjected->ExternalTrigInjecConvEdge));
5917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
5918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfigInjected->InjectedOffsetNumber));
5919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
5920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
5922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
5924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
5925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
5926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification of channel number: Channels 1 to 14 are available in        */  
5929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* differential mode. Channels 15U, 16U, 17U, 18 can be used only in           */
5930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* single-ended mode.                                                       */
5931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
5932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
5934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_DIFF_CHANNEL(sConfigInjected->InjectedChannel));
5938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
5942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of Injected group sequencer.                               */
5944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Hardware constraint: Must fully define injected context register JSQR    */
5945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* before make it entering into injected sequencer queue.                   */
5946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*                                                                          */
5947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - if scan mode is disabled:                                              */
5948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to 0x00: 1 channel         */
5949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      converted (channel on injected rank 1U)                              */
5950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      Parameter "InjectedNbrOfConversion" is discarded.                   */
5951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting is simple: register is fully */
5952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      defined on one call of this function (for injected rank 1U) and can  */
5953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      be entered into queue directly.                                     */
5954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - if scan mode is enabled:                                               */
5955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to parameter               */
5956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      "InjectedNbrOfConversion".                                          */
5957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting more complex: register is    */
5958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      fully defined over successive calls of this function, for each      */
5959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      injected channel rank. It is entered into queue only when all       */
5960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      injected ranks have been set.                                       */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 106


5961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   Note: Scan mode is not present by hardware on this device, but used    */
5962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   by software for alignment over all STM32 devices.                      */
5963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)  ||
5965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U)  )
5966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of context register JSQR:                                */
5968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - number of ranks in injected group sequencer: fixed to 1st rank      */
5969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*    (scan mode disabled, only rank 1 used)                              */
5970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
5971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
5972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - channel set to rank 1 (scan mode disabled, only rank 1 used)        */
5973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
5975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
5977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* software start.                                                      */
5978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
5979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
5980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       software start.                                                */
5981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
5982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(tmp_JSQR_ContextQueueBeingBuilt, ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_
5984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Extern
5985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  sConfigInjected->ExternalTrigInjecConvEdge        
5986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
5988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(tmp_JSQR_ContextQueueBeingBuilt, ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_
5990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC register JSQR */
5993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR           ,
5994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ4    |
5995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ3    |
5996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ2    |
5997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ1    |
5998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JEXTEN  |
5999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JEXTSEL |
6000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL                    ,
6001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmp_JSQR_ContextQueueBeingBuilt );
6002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
6004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = tmp_JSQR_ContextQueueBeingBuilt;
6005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If another injected rank than rank1 was intended to be set, and could  */
6007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* not due to ScanConvMode disabled, error is reported.                   */
6008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
6011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
6014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 107


6018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case of scan mode enabled, several channels to set into injected group */
6020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* sequencer.                                                             */
6021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Procedure to define injected context register JSQR over successive     */
6022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* calls of this function, for each injected channel rank:                */
6023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Start new context and set parameters related to all injected        */
6025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*    channels: injected sequence length and trigger                      */
6026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
6027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize number of channels that will be configured on the context */
6029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  being built                                                         */
6030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = sConfigInjected->InjectedNbrOfConversion;
6031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize value that will be set into register JSQR */
6032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0x00000000U;
6033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of context register JSQR:                              */
6035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - number of ranks in injected group sequencer                       */
6036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - external trigger to start conversion                              */
6037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - external trigger polarity                                         */
6038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
6040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* software start.                                                      */
6041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
6042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
6043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       software start.                                                */
6044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
6045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->InjectionConfig.ContextQueue, (sConfigInjected->InjectedNbrOfConversion - 1U)
6047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Ext
6048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     sConfigInjected->ExternalTrigInjecConvEdge     
6049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->InjectionConfig.ContextQueue, (sConfigInjected->InjectedNbrOfConversion - 1U)
6053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* 2. Continue setting of context under definition with parameter       */
6058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    related to each channel: channel rank sequence                    */
6059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the JSQx bits for the selected rank */
6061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->InjectionConfig.ContextQueue                                          ,
6062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK(ADC_SQR3_SQ10, sConfigInjected->InjectedRank)                   ,
6063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK(sConfigInjected->InjectedChannel, sConfigInjected->InjectedRank) );
6064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Decrease channel count after setting into temporary JSQR variable */
6066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount --;
6067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* 3. End of context setting: If last channel set, then write context   */
6069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    into register JSQR and make it enter into queue                   */
6070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (hadc->InjectionConfig.ChannelCount == 0U)
6071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC register JSQR */
6073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->JSQR              ,
6074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ4    |
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 108


6075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ3    |
6076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ2    |
6077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ1    |
6078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JEXTEN  |
6079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JEXTSEL |
6080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JL                       ,
6081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    hadc->InjectionConfig.ContextQueue );
6082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
6089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on injected group:                                   */
6090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Injected context queue: Queue disable (active context is kept) or     */
6091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    enable (context decremented, up to 2 contexts queued)                 */
6092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode: can be enabled only if auto-injected     */
6093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    mode is disabled.                                                     */
6094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
6095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {     
6096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If auto-injected mode is disabled: no constraint                       */
6097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == DISABLE)
6098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR                                                            ,
6100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JQM    |
6101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JDISCEN                                                                ,
6102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE(sConfigInjected->QueueInjectedContext)           | 
6103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_DISCCONTINUOUS(sConfigInjected->InjectedDiscontinuousConvMode)   )
6104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If auto-injected mode is enabled: Injected discontinuous setting is    */
6106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* discarded.                                                             */
6107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR                                                ,
6110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JQM    |
6111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JDISCEN                                                    ,
6112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE(sConfigInjected->QueueInjectedContext) );
6113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If injected discontinuous mode was intended to be set and could not  */
6115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* due to auto-injected enabled, error is reported.                     */
6116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->InjectedDiscontinuousConvMode == ENABLE)
6117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
6122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
6130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
6131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Automatic injected conversion: can be enabled if injected group       */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 109


6132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    external triggers are disabled.                                       */
6133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
6134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
6135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
6136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {    
6137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If injected group external triggers are disabled (set to injected      */
6138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* software start): no constraint                                         */
6139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
6140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR                                              ,
6142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JAUTO                                                    ,
6143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_AUTO_CONVERSION(sConfigInjected->AutoInjectedConv) );
6144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If Automatic injected conversion was intended to be set and could not  */
6146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* due to injected group external triggers enabled, error is reported.    */
6147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable Automatic injected conversion */
6150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
6151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
6153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
6158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Channel sampling time configuration */
6163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For channels 10 to 18U */
6164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedChannel >= ADC_CHANNEL_10)
6165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR2                                                             
6167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel)                      
6168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel)
6169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else /* For channels 1 to 9U */
6171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR1                                                             
6173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel)                       
6174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel)
6175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
6178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Shift the offset in function of the selected ADC resolution. */
6180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11U, the LSB (right bits) are set  */
6181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to 0.                                                                  */
6182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfigInjected->InjectedOffset);
6183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configure the selected offset register:                                */
6185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Enable offset                                                        */
6186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set channel number                                                   */
6187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set offset value                                                     */
6188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     switch (sConfigInjected->InjectedOffsetNumber)
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 110


6189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_1:
6191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 1U */
6192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR1                               ,
6193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_CH |
6194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1                                   ,
6195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_EN                               |
6196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) |
6197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                                    );
6198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_2:
6201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 2U */
6202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR2                               ,
6203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_CH |
6204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2                                   ,
6205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_EN                               |
6206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) |
6207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                                    );
6208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_3:
6211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 3U */
6212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR3                               ,
6213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_CH |
6214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3                                   ,
6215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_EN                               |
6216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) |
6217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                                    );
6218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_4:
6221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 4U */
6222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR4                               ,
6223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_CH |
6224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4                                   ,
6225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_EN                               |
6226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) |
6227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                                    );
6228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case ADC_OFFSET_NONE */
6231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default :
6232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is        */
6233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enabled. If this is the case, offset OFRx is disabled.                 */
6234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfigInjected->Inject
6235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR1*/
6237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN);
6238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfigInjected->Inject
6240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR2*/
6242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN); 
6243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfigInjected->Inject
6245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 111


6246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR3*/
6247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN);
6248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfigInjected->Inject
6250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR4*/
6252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN);
6253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
6262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
6263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
6264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
6265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of differential mode */
6267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
6268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable differential mode (default mode: single-ended) */
6270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfigInjected->InjectedChannel));
6271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable differential mode */
6275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfigInjected->InjectedChannel));
6276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Channel sampling time configuration (channel ADC_INx +1              */
6278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* corresponding to differential negative input).                       */
6279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* For channels 10 to 18U */
6280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->InjectedChannel >= ADC_CHANNEL_10)
6281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR2,
6283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel +1U),
6284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChanne
6285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else /* For channels 1 to 9U */
6287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR1,
6289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel +1U),
6290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChanne
6291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Management of internal measurement channels: VrefInt/TempSensor/Vbat   */
6296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* internal measurement paths enable: If internal channel selected,       */
6297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enable dedicated internal buffers and path.                            */
6298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: these internal measurement paths can be disabled using           */
6299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* HAL_ADC_deInit().                                                      */
6300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        
6301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of common ADC parameters                                 */
6302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 112


6303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common   */
6304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
6305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
6306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If the requested internal measurement path has already been enabled,   */
6308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bypass the configuration processing.                                   */
6309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (( (sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) &&
6310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
6311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)       &&
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
6313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)    &&
6314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
6315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        )
6316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of common ADC parameters (continuation)                */
6318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set handle of the other ADC sharing the same common register         */
6319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
6320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Software is allowed to change common parameters only when all ADCs   */
6322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* of the common group are disabled.                                    */
6323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                                    &&
6324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
6325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
6326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_16 is selected, enable Temp. sensor measurement path    */
6328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: Temp. sensor internal channels available on ADC1 only        */
6329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) && (hadc->Instance == ADC1
6330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_TSEN);
6332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
6333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Delay for temperature sensor stabilization time */
6334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Compute number of CPU cycles to wait for */
6335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
6336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
6337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
6338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             wait_loop_index--;
6339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
6340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_17 is selected, enable VBAT measurement path            */
6342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: VBAT internal channels available on ADC1 only                */
6343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT) && (hadc->Instance == ADC1)
6344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VBATEN);
6346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_18 is selected, enable VREFINT measurement path         */
6348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: VrefInt internal channels available on all ADCs, but only    */
6349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       one ADC is allowed to be connected to VrefInt at the same    */
6350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       time.                                                        */
6351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else if (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)
6352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VREFEN);
6354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If the requested internal measurement path has already been enabled  */
6357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* and other ADC of the common group are enabled, internal              */
6358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* measurement paths cannot be enabled.                                 */
6359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else  
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 113


6360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
6365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
6371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
6372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
6374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
6375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
6376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
6377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
6378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
6379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
6380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
6382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
6383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the ADC injected group and the selected channel to be
6384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         linked to the injected group.
6385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
6386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this 
6387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
6388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without reseting the ADC.
6389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state: 
6390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         this function must be called when ADC is not under conversion.
6391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
6392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
6393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The recommended sampling time is at least:
6394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
6395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
6396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            Vbat/VrefInt/TempSensor.
6397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         These internal paths can be be disabled using function 
6398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
6399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
6400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  sConfigInjected: Structure of ADC injected group and ADC channel for
6401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         injected group.
6402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
6403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
6404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef* hadc, ADC_InjectionConfTypeDef
6405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
6406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
6407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
6408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
6410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
6411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
6412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
6413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
6414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
6415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(sConfigInjected->InjectedOffset));
6416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 114


6417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
6418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
6420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
6421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
6422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
6425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
6426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
6428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - if scan mode is disabled, injected channels sequence length is set to  */
6429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   0x00: 1 channel converted (channel on regular rank 1U)                  */
6430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   Parameter "InjectedNbrOfConversion" is discarded.                      */
6431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   Note: Scan mode is present by hardware on this device and, if          */
6432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   disabled, discards automatically nb of conversions. Anyway, nb of      */
6433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversions is forced to 0x00 for alignment over all STM32 devices.    */
6434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - if scan mode is enabled, injected channels sequence length is set to   */
6435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   parameter "InjectedNbrOfConversion".                                   */
6436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
6437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
6439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the old SQx bits for all injected ranks */
6441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                           ,
6442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL   |
6443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ4 |
6444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ3 |
6445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ2 |
6446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ1                                  ,
6447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,
6448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_INJECTED_RANK_1,
6449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       0x01U)                      );
6450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If another injected rank than rank1 was intended to be set, and could  */
6452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* not due to ScanConvMode disabled, error is reported.                   */
6453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
6456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
6459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
6462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Since injected channels rank conv. order depends on total number of   */
6464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* injected conversions, selected rank must be below or equal to total   */
6465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* number of injected conversions to be updated.                         */
6466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank <= sConfigInjected->InjectedNbrOfConversion)
6467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
6469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the SQx bits for the selected rank */
6470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                         ,
6471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
6472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                                 |
6473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 115


6474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedRank,         
6475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedNbrOfConversion)     ,
6476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
6477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL_SHIFT(sConfigInjected->InjectedNbrOfConversion) |
6478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,      
6479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedRank,         
6480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedNbrOfConversion)      );
6481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
6485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                     ,
6486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
6487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                             |
6488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
6489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedRank,         
6490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedNbrOfConversion) ,
6491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
6492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  0x00000000                                                );
6493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
6497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
6499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - external trigger to start conversion                                  */
6500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update not conditioned to ADC state:                          */
6501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
6502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
6503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: In case of ADC already enabled, caution to not launch an unwanted  */
6504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       conversion while modifying register CR2 by writing 1 to bit ADON.  */
6505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
6506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {    
6507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR2                   ,
6508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CR2_JEXTSEL |
6509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CR2_ADON                          ,
6510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                sConfigInjected->ExternalTrigInjecConv );
6511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
6514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
6515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
6516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Automatic injected conversion can be enabled if injected group         */
6518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* external triggers are disabled.                                        */
6519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == ENABLE)
6520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
6522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO);
6524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 116


6531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Injected discontinuous can be enabled only if auto-injected mode is    */
6535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* disabled.                                                              */  
6536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedDiscontinuousConvMode == ENABLE)
6537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == DISABLE)
6539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JDISCEN);
6541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       } 
6542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
6548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* InjectedChannel sampling time configuration */
6553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For channels 10 to 18 */
6554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedChannel > ADC_CHANNEL_10)
6555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR1,
6557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfigInjected->InjectedChannel),
6558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
6559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else /* For channels 1 to 9 */
6561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR2,
6563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfigInjected->InjectedChannel),
6564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
6565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configure the offset: offset enable/disable, InjectedChannel, offset value */
6569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   switch(sConfigInjected->InjectedRank)
6570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case 1:
6572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set injected channel 1 offset */
6573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR1,
6574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JOFR1_JOFFSET1,
6575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
6576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case 2:
6578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set injected channel 2 offset */
6579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR2,
6580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JOFR2_JOFFSET2,
6581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
6582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case 3:
6584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set injected channel 3 offset */
6585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR3,
6586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JOFR3_JOFFSET3,
6587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 117


6588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case 4:
6590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default:
6591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR4,
6592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JOFR4_JOFFSET4,
6593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
6594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
6598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
6599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) ||
6600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
6601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE) == RESET)
6603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
6605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR))
6607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Delay for temperature sensor stabilization time */
6609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Compute number of CPU cycles to wait for */
6610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
6611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         while(wait_loop_index != 0U)
6612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           wait_loop_index--;
6614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* if ADC1 Channel_18 is selected, enable VBAT measurement path */
6619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else if (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)
6620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_VBAT);
6622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
6625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
6626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
6628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
6629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
6630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
6631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
6633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
6634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
6635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
6636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
6637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the analog watchdog.
6638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
6639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes the selected analog watchdog, following  
6640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
6641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without reseting 
6642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the ADC.
6643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
6644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 118


6645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_AnalogWDGConfTypeDef".
6646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
6647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  AnalogWDGConfig: Structure of ADC analog watchdog configuration
6648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
6649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
6650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
6651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
6652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
6653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpAWDHighThresholdShifted;
6655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpAWDLowThresholdShifted;
6656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpADCFlagAWD2orAWD3;
6658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpADCITAWD2orAWD3;
6659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
6661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
6662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
6663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
6664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
6665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verify if threshold is within the selected ADC resolution */
6667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
6668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
6669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
6671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
6672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
6673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
6675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
6678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
6679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
6682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
6683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Analog watchdog channels                                              */
6684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Analog watchdog thresholds                                            */
6685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
6686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Analog watchdogs configuration */
6689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
6690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of analog watchdog:                                    */
6692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Set the analog watchdog enable mode: regular and/or injected      */
6693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    groups, one or overall group of channels.                         */
6694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Set the Analog watchdog channel (is not used if watchdog          */
6695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    mode "all channels": ADC_CFGR_AWD1SGL=0U).                         */
6696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR                             ,
6697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1SGL |
6698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JAWD1EN |
6699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1EN  |
6700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1CH                                  ,
6701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  AnalogWDGConfig->WatchdogMode                   |
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 119


6702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1CH_SHIFT(AnalogWDGConfig->Channel)   );
6703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Shift the offset in function of the selected ADC resolution:         */
6705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Thresholds have to be left-aligned on bit 11U, the LSB (right bits)   */
6706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* are set to 0                                                         */ 
6707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
6708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
6709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the high and low thresholds */
6711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->TR1                                ,
6712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_TR1_HT1 |
6713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_TR1_LT1                                        ,
6714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_TRX_HIGHTHRESHOLD(tmpAWDHighThresholdShifted) |
6715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpAWDLowThresholdShifted                           );
6716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the ADC Analog watchdog flag (in case of left enabled by       */
6718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* previous ADC operations) to be ready to use for HAL_ADC_IRQHandler() */
6719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* or HAL_ADC_PollForEvent().                                           */
6720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_IT_AWD1);
6721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure ADC Analog watchdog interrupt */
6723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(AnalogWDGConfig->ITMode == ENABLE)
6724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable the ADC Analog watchdog interrupt */
6726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD1);
6727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable the ADC Analog watchdog interrupt */
6731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD1);
6732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
6736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Shift the threshold in function of the selected ADC resolution */
6739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* have to be left-aligned on bit 7U, the LSB (right bits) are set to 0    */
6740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
6741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
6742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
6744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the Analog watchdog channel or group of channels. This also    */
6746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* enables the watchdog.                                              */
6747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: Conditional register reset, because several channels can be  */
6748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       set by successive calls of this function.                    */
6749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (AnalogWDGConfig->WatchdogMode != ADC_ANALOGWATCHDOG_NONE) 
6750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set the high and low thresholds */
6752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           MODIFY_REG(hadc->Instance->TR2                                ,
6753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR2_HT2 |
6754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR2_LT2                                        ,
6755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TRX_HIGHTHRESHOLD(tmpAWDHighThresholdShifted) |
6756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      tmpAWDLowThresholdShifted                           );
6757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
6758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->AWD2CR, ADC_CFGR_AWD23CR(AnalogWDGConfig->Channel));
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 120


6759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
6761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
6763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
6764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                 
6766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set temporary variable to flag and IT of AWD2 or AWD3 for further  */
6767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* settings.                                                          */
6768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCFlagAWD2orAWD3 = ADC_FLAG_AWD2;
6769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD2;
6770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
6772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the Analog watchdog channel or group of channels. This also    */
6775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* enables the watchdog.                                              */
6776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: Conditionnal register reset, because several channels can be */
6777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       set by successive calls of this function.                    */
6778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (AnalogWDGConfig->WatchdogMode != ADC_ANALOGWATCHDOG_NONE) 
6779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set the high and low thresholds */
6781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           MODIFY_REG(hadc->Instance->TR3                                ,
6782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR3_HT3 |
6783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR3_LT3                                        ,
6784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TRX_HIGHTHRESHOLD(tmpAWDHighThresholdShifted) |
6785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      tmpAWDLowThresholdShifted                           );
6786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
6787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->AWD3CR, ADC_CFGR_AWD23CR(AnalogWDGConfig->Channel));
6788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
6790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
6792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
6793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set temporary variable to flag and IT of AWD2 or AWD3 for further  */
6796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* settings.                                                          */
6797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCFlagAWD2orAWD3 = ADC_FLAG_AWD3;
6798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD3;
6799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the ADC Analog watchdog flag (in case of left enabled by       */
6802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* previous ADC operations) to be ready to use for HAL_ADC_IRQHandler() */
6803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* or HAL_ADC_PollForEvent().                                           */
6804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, tmpADCFlagAWD2orAWD3);
6805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure ADC Analog watchdog interrupt */
6807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(AnalogWDGConfig->ITMode == ENABLE)
6808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, tmpADCITAWD2orAWD3);
6810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, tmpADCITAWD2orAWD3);
6814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 121


6816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If a conversion is on going on regular or injected groups, no update     */
6819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
6820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
6821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
6823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
6826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
6830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
6831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
6833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
6834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
6835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
6836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
6837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
6838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
6839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
6841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
6842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the analog watchdog.
6843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Analog watchdog thresholds can be modified while ADC conversion
6844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         is on going.
6845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         In this case, some constraints must be taken into account:
6846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the programmed threshold values are effective from the next
6847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC EOC (end of unitary conversion).
6848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Considering that registers write delay may happen due to
6849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         bus activity, this might cause an uncertainty on the
6850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         effective timing of the new programmed threshold values.
6851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
6852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  AnalogWDGConfig: Structure of ADC analog watchdog configuration
6853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
6854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
6855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
6856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
6857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
6858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
6859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
6860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
6861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->HighThreshold));
6862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->LowThreshold));
6863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
6865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
6866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
6867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
6869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
6872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 122


6873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Analog watchdog configuration */
6875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configure ADC Analog watchdog interrupt */
6877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
6878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC Analog watchdog interrupt */
6880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
6881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
6883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the ADC Analog watchdog interrupt */
6885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
6886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of analog watchdog:                                        */
6889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Set the analog watchdog enable mode: regular and/or injected groups,  */
6890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    one or all channels.                                                  */
6891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Set the Analog watchdog channel (is not used if watchdog              */
6892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    mode "all channels": ADC_CFGR_AWD1SGL=0U).                             */
6893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   MODIFY_REG(hadc->Instance->CR1            ,
6894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ADC_CR1_AWDSGL |
6895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ADC_CR1_JAWDEN |
6896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ADC_CR1_AWDEN  |
6897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ADC_CR1_AWDCH                  ,
6898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              AnalogWDGConfig->WatchdogMode |
6899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              AnalogWDGConfig->Channel       );
6900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set the high threshold */
6902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   WRITE_REG(hadc->Instance->HTR, AnalogWDGConfig->HighThreshold);
6903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set the low threshold */
6905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   WRITE_REG(hadc->Instance->LTR, AnalogWDGConfig->LowThreshold);
6906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
6908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
6909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
6911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
6912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
6913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
6914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
6917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
6918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx)
6919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
6920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
6921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
6922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following  
6923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
6924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without reseting 
6925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the ADCs (both ADCs of the common group).
6926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
6927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
6928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
6929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To change back configuration from multimode to single mode, ADC must
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 123


6930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
6931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
6932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  multimode : Structure of ADC multimode configuration
6933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
6934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
6935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef* hadc, ADC_MultiModeTypeDef* m
6936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
6937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
6938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
6939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
6940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
6942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
6943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MODE(multimode->Mode));
6944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(multimode->Mode != ADC_MODE_INDEPENDENT)
6945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_DMA_ACCESS_MODE(multimode->DMAAccessMode));
6947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
6948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
6951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
6952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set handle of the other ADC sharing the same common register             */
6955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
6956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
6959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
6960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Multimode DMA configuration                                           */
6961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Multimode DMA mode                                                    */
6962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ( (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET) 
6963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     && (ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSharingSameCommonRegister) == RESET) )
6964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
6966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may have up to 4 ADC and 2 common */
6967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
6968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
6969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If multimode is selected, configure all multimode paramaters.          */
6971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Otherwise, reset multimode parameters (can be used in case of          */
6972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* transition from multimode to independent mode).                        */
6973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(multimode->Mode != ADC_MODE_INDEPENDENT)
6974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of ADC common group ADC1&ADC2, ADC3&ADC4 if available    */
6976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (ADC2, ADC3, ADC4 availability depends on STM32 product)               */
6977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - DMA access mode                                                     */
6978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR                                          ,
6979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_MDMA  |
6980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_DMACFG                                              ,
6981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  multimode->DMAAccessMode                                   |
6982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_MULTI_DMACONTREQ(hadc->Init.DMAContinuousRequests)   );
6983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:              */
6985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                            */
6986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Set delay between two sampling phases                               */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 124


6987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    Note: Delay range depends on selected resolution:                   */
6988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*      from 1 to 12 clock cycles for 12 bits                             */
6989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*      from 1 to 10 clock cycles for 10 bits,                            */
6990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*      from 1 to 8 clock cycles for 8 bits                               */
6991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*      from 1 to 6 clock cycles for 6 bits                               */
6992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    If a higher delay is selected, it will be clamped to maximum delay  */
6993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    range                                                               */
6994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: If ADC is not in the appropriate state to modify these           */
6995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       parameters, their setting is bypassed without error reporting    */
6996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       (as it can be the expected behaviour in case of intended action  */
6997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       to update parameter above (which fulfills the ADC state          */
6998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       condition: no conversion on going on group regular)              */
6999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       on the fly).                                                     */
7000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                              &&
7001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
7002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(tmpADC_Common->CCR                                          ,
7004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_CCR_MULTI |
7005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_CCR_DELAY                                               ,
7006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    multimode->Mode                                            |
7007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    multimode->TwoSamplingDelay                                  );
7008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else /* ADC_MODE_INDEPENDENT */
7011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG);
7013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
7015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
7016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
7017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                              &&
7018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
7019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_MULTI | ADC_CCR_DELAY);
7021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
7025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
7026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
7027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
7029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
7030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
7032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
7036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
7037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
7039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
7040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** } 
7041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
7042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
7043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F328xx || STM32F334x8    */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 125


7044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
7047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
7051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Functions ADCEx Private Functions
7054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
7055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  DMA transfer complete callback. 
7058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hdma: pointer to DMA handle.
7059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
7060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
7062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
7063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
7064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
7065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  
7066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update state machine on conversion status if not in error state */
7067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
7068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine */
7070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
7071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Determine whether any further conversion upcoming on group regular     */
7073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* by external trigger, continuous mode or scan sequence on going.        */
7074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: On STM32F3 devices, in case of sequencer enabled                 */
7075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       (several ranks selected), end of conversion flag is raised       */
7076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       at the end of the sequence.                                      */
7077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
7078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
7079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
7081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
7082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
7084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
7086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Conversion complete callback */
7090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_ConvCpltCallback(hadc); 
7091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
7093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Call DMA error callback */
7095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
7096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
7098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  DMA half transfer complete callback. 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 126


7101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hdma: pointer to DMA handle.
7102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
7103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
7105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
7106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
7107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
7108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Half conversion callback */
7110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
7111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
7112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  DMA error callback 
7115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hdma: pointer to DMA handle.
7116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
7117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
7119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
7120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
7121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
7122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set ADC state */
7124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
7125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set ADC error code to DMA error */
7127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
7128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Error callback */
7130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_ADC_ErrorCallback(hadc); 
7131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
7132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
7134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
7135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
7136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
7137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enable the selected ADC.
7139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
7140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
7141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
7142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
7143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
7145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
7146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
7147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
7149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
7150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
7151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* causes: ADC clock not running, ...).                                     */
7152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
7153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if conditions to enable the ADC are fulfilled */
7155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_ENABLING_CONDITIONS(hadc) == RESET)
7156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 127


7158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
7159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
7161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
7162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
7164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
7167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE(hadc);
7168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for ADC effectively enabled */
7170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
7171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
7173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
7175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
7177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
7178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
7180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
7181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
7183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return HAL status */
7188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
7189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
7190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Disable the selected ADC.
7193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
7194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         stopped.
7195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
7196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
7197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef* hadc)
7199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
  27              		.loc 1 7199 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39              	.LVL1:
7200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
7201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 128


7202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification if ADC is not already disabled:                             */
7203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
7204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled.                                                                */
7205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) != RESET )
  40              		.loc 1 7205 0
  41 0002 0268     		ldr	r2, [r0]
  42 0004 9368     		ldr	r3, [r2, #8]
  43 0006 03F00303 		and	r3, r3, #3
  44 000a 012B     		cmp	r3, #1
  45 000c 11D0     		beq	.L11
  46 000e 0023     		movs	r3, #0
  47              	.L2:
  48              		.loc 1 7205 0 is_stmt 0 discriminator 6
  49 0010 002B     		cmp	r3, #0
  50 0012 37D0     		beq	.L9
7206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if conditions to disable the ADC are fulfilled */
7208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_DISABLING_CONDITIONS(hadc) != RESET)
  51              		.loc 1 7208 0 is_stmt 1
  52 0014 9368     		ldr	r3, [r2, #8]
  53 0016 03F00D03 		and	r3, r3, #13
  54 001a 012B     		cmp	r3, #1
  55 001c 11D0     		beq	.L12
7209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable the ADC peripheral */
7211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE(hadc);
7212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
7214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
7216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
  56              		.loc 1 7216 0
  57 001e 436C     		ldr	r3, [r0, #68]
  58 0020 43F01003 		orr	r3, r3, #16
  59 0024 4364     		str	r3, [r0, #68]
7217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
7219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
  60              		.loc 1 7219 0
  61 0026 836C     		ldr	r3, [r0, #72]
  62 0028 43F00103 		orr	r3, r3, #1
  63 002c 8364     		str	r3, [r0, #72]
7220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
  64              		.loc 1 7221 0
  65 002e 0120     		movs	r0, #1
  66              	.LVL2:
  67 0030 38BD     		pop	{r3, r4, r5, pc}
  68              	.LVL3:
  69              	.L11:
7205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
  70              		.loc 1 7205 0 discriminator 1
  71 0032 1368     		ldr	r3, [r2]
  72 0034 13F0010F 		tst	r3, #1
  73 0038 01D1     		bne	.L8
7205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
  74              		.loc 1 7205 0 is_stmt 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 129


  75 003a 0023     		movs	r3, #0
  76 003c E8E7     		b	.L2
  77              	.L8:
  78 003e 0123     		movs	r3, #1
  79 0040 E6E7     		b	.L2
  80              	.L12:
  81 0042 0446     		mov	r4, r0
7211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
  82              		.loc 1 7211 0 is_stmt 1
  83 0044 9368     		ldr	r3, [r2, #8]
  84 0046 43F00203 		orr	r3, r3, #2
  85 004a 9360     		str	r3, [r2, #8]
  86 004c 0368     		ldr	r3, [r0]
  87 004e 0322     		movs	r2, #3
  88 0050 1A60     		str	r2, [r3]
7222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
7224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for ADC effectively disabled */
7225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
  89              		.loc 1 7225 0
  90 0052 FFF7FEFF 		bl	HAL_GetTick
  91              	.LVL4:
  92 0056 0546     		mov	r5, r0
  93              	.LVL5:
  94              	.L5:
7226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADEN))
  95              		.loc 1 7227 0
  96 0058 2368     		ldr	r3, [r4]
  97 005a 9B68     		ldr	r3, [r3, #8]
  98 005c 13F0010F 		tst	r3, #1
  99 0060 0ED0     		beq	.L13
7228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
 100              		.loc 1 7229 0
 101 0062 FFF7FEFF 		bl	HAL_GetTick
 102              	.LVL6:
 103 0066 401B     		subs	r0, r0, r5
 104 0068 0228     		cmp	r0, #2
 105 006a F5D9     		bls	.L5
7230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
7232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 106              		.loc 1 7232 0
 107 006c 636C     		ldr	r3, [r4, #68]
 108 006e 43F01003 		orr	r3, r3, #16
 109 0072 6364     		str	r3, [r4, #68]
7233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
7235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 110              		.loc 1 7235 0
 111 0074 A36C     		ldr	r3, [r4, #72]
 112 0076 43F00103 		orr	r3, r3, #1
 113 007a A364     		str	r3, [r4, #72]
7236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
 114              		.loc 1 7237 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 130


 115 007c 0120     		movs	r0, #1
 116 007e 38BD     		pop	{r3, r4, r5, pc}
 117              	.LVL7:
 118              	.L13:
7238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return HAL status */
7243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
 119              		.loc 1 7243 0
 120 0080 0020     		movs	r0, #0
 121 0082 38BD     		pop	{r3, r4, r5, pc}
 122              	.LVL8:
 123              	.L9:
 124 0084 0020     		movs	r0, #0
 125              	.LVL9:
7244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 126              		.loc 1 7244 0
 127 0086 38BD     		pop	{r3, r4, r5, pc}
 128              		.cfi_endproc
 129              	.LFE164:
 131              		.section	.text.ADC_ConversionStop,"ax",%progbits
 132              		.align	1
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	ADC_ConversionStop:
 139              	.LFB165:
7245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion.
7249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
7250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  ConversionGroup: ADC group regular and/or injected.
7251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
7252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_REGULAR_GROUP: ADC regular conversion type.
7253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_GROUP: ADC injected conversion type.
7254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_REGULAR_INJECTED_GROUP: ADC regular and injected conversion type.
7255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
7256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef* hadc, uint32_t ConversionGroup)
7258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 140              		.loc 1 7258 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              	.LVL10:
7259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART = 0U;
7260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
7261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0U;
7262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
7264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
7265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
7266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 131


7267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
7268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* groups) to bypass this function if not needed.                           */
7269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc))
 145              		.loc 1 7269 0
 146 0000 0368     		ldr	r3, [r0]
 147 0002 9A68     		ldr	r2, [r3, #8]
 148 0004 12F00C0F 		tst	r2, #12
 149 0008 62D0     		beq	.L27
7258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART = 0U;
 150              		.loc 1 7258 0
 151 000a 70B5     		push	{r4, r5, r6, lr}
 152              	.LCFI1:
 153              		.cfi_def_cfa_offset 16
 154              		.cfi_offset 4, -16
 155              		.cfi_offset 5, -12
 156              		.cfi_offset 6, -8
 157              		.cfi_offset 14, -4
 158 000c 0446     		mov	r4, r0
7270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Particular case of continuous auto-injection mode combined with        */
7272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* auto-delay mode.                                                       */
7273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
7274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
7275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Procedure to be followed: Wait until JEOS=1U, clear JEOS, set ADSTP=1   */
7276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (see reference manual).                                                */
7277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if ((HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_JAUTO)) &&
 159              		.loc 1 7277 0
 160 000e DA68     		ldr	r2, [r3, #12]
 161 0010 12F0007F 		tst	r2, #33554432
 162 0014 02D0     		beq	.L16
7278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.ContinuousConvMode==ENABLE)               &&
 163              		.loc 1 7278 0 discriminator 1
 164 0016 C269     		ldr	r2, [r0, #28]
7277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.ContinuousConvMode==ENABLE)               &&
 165              		.loc 1 7277 0 discriminator 1
 166 0018 012A     		cmp	r2, #1
 167 001a 38D0     		beq	.L35
 168              	.LVL11:
 169              	.L16:
7279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.LowPowerAutoWait==ENABLE)                   )
7280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Use stop of regular group */
7282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ConversionGroup = ADC_REGULAR_GROUP;
7283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
7285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == RESET)
7286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES *4U))
7288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
7289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
7290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
7291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
7292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC error code to ADC IP internal error */
7293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
7294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
7295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_ERROR;
7296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 132


7297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         Conversion_Timeout_CPU_cycles ++;
7298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear JEOS */
7301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
7302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Stop potential conversion on going on regular group */
7305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ConversionGroup != ADC_INJECTED_GROUP)
 170              		.loc 1 7305 0
 171 001c 6029     		cmp	r1, #96
 172 001e 0CD0     		beq	.L20
7306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0U */
7308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADSTART) && 
 173              		.loc 1 7308 0
 174 0020 2368     		ldr	r3, [r4]
 175 0022 9A68     		ldr	r2, [r3, #8]
 176 0024 12F0040F 		tst	r2, #4
 177 0028 07D0     		beq	.L20
7309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
 178              		.loc 1 7309 0 discriminator 1
 179 002a 9A68     		ldr	r2, [r3, #8]
7308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
 180              		.loc 1 7308 0 discriminator 1
 181 002c 12F0020F 		tst	r2, #2
 182 0030 03D1     		bne	.L20
7310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Stop conversions on regular group */
7312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->Instance->CR |= ADC_CR_ADSTP;
 183              		.loc 1 7312 0
 184 0032 9A68     		ldr	r2, [r3, #8]
 185 0034 42F01002 		orr	r2, r2, #16
 186 0038 9A60     		str	r2, [r3, #8]
 187              	.L20:
7313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Stop potential conversion on going on injected group */
7317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ConversionGroup != ADC_REGULAR_GROUP)
 188              		.loc 1 7317 0
 189 003a 0C29     		cmp	r1, #12
 190 003c 0CD0     		beq	.L21
7318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0U */
7320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_JADSTART) && 
 191              		.loc 1 7320 0
 192 003e 2368     		ldr	r3, [r4]
 193 0040 9A68     		ldr	r2, [r3, #8]
 194 0042 12F0080F 		tst	r2, #8
 195 0046 07D0     		beq	.L21
7321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
 196              		.loc 1 7321 0 discriminator 1
 197 0048 9A68     		ldr	r2, [r3, #8]
7320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
 198              		.loc 1 7320 0 discriminator 1
 199 004a 12F0020F 		tst	r2, #2
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 133


 200 004e 03D1     		bne	.L21
7322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Stop conversions on injected group */
7324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->Instance->CR |= ADC_CR_JADSTP;
 201              		.loc 1 7324 0
 202 0050 9A68     		ldr	r2, [r3, #8]
 203 0052 42F02002 		orr	r2, r2, #32
 204 0056 9A60     		str	r2, [r3, #8]
 205              	.L21:
7325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Selection of start and stop bits in function of regular or injected group */
7329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     switch(ConversionGroup)
 206              		.loc 1 7329 0
 207 0058 6029     		cmp	r1, #96
 208 005a 35D0     		beq	.L29
 209 005c 6C29     		cmp	r1, #108
 210 005e 31D1     		bne	.L30
7330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_REGULAR_INJECTED_GROUP:
7332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
 211              		.loc 1 7332 0
 212 0060 0C25     		movs	r5, #12
 213              	.LVL12:
 214              	.L23:
7333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         break;
7334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_GROUP:
7335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
7336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         break;
7337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case ADC_REGULAR_GROUP */
7338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default:
7339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
7340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         break;
7341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for conversion effectively stopped */
7344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 215              		.loc 1 7344 0
 216 0062 FFF7FEFF 		bl	HAL_GetTick
 217              	.LVL13:
 218 0066 0646     		mov	r6, r0
 219              	.LVL14:
 220              	.L25:
7345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != RESET)
 221              		.loc 1 7346 0
 222 0068 2368     		ldr	r3, [r4]
 223 006a 9B68     		ldr	r3, [r3, #8]
 224 006c 1D42     		tst	r5, r3
 225 006e 2DD0     		beq	.L36
7347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
 226              		.loc 1 7348 0
 227 0070 FFF7FEFF 		bl	HAL_GetTick
 228              	.LVL15:
 229 0074 801B     		subs	r0, r0, r6
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 134


 230 0076 0B28     		cmp	r0, #11
 231 0078 F6D9     		bls	.L25
7349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
7351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 232              		.loc 1 7351 0
 233 007a 636C     		ldr	r3, [r4, #68]
 234 007c 43F01003 		orr	r3, r3, #16
 235 0080 6364     		str	r3, [r4, #68]
7352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
7354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 236              		.loc 1 7354 0
 237 0082 A36C     		ldr	r3, [r4, #72]
 238 0084 43F00103 		orr	r3, r3, #1
 239 0088 A364     		str	r3, [r4, #72]
7355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
 240              		.loc 1 7356 0
 241 008a 0120     		movs	r0, #1
 242 008c 70BD     		pop	{r4, r5, r6, pc}
 243              	.LVL16:
 244              	.L35:
7279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 245              		.loc 1 7279 0
 246 008e 8269     		ldr	r2, [r0, #24]
7278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.LowPowerAutoWait==ENABLE)                   )
 247              		.loc 1 7278 0
 248 0090 012A     		cmp	r2, #1
 249 0092 C3D1     		bne	.L16
 250 0094 0022     		movs	r2, #0
 251              	.LVL17:
 252              	.L17:
7285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 253              		.loc 1 7285 0
 254 0096 1968     		ldr	r1, [r3]
 255 0098 11F0400F 		tst	r1, #64
 256 009c 0ED1     		bne	.L37
7287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 257              		.loc 1 7287 0
 258 009e 0D49     		ldr	r1, .L39
 259 00a0 8A42     		cmp	r2, r1
 260 00a2 01D8     		bhi	.L38
7297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 261              		.loc 1 7297 0
 262 00a4 0132     		adds	r2, r2, #1
 263              	.LVL18:
 264 00a6 F6E7     		b	.L17
 265              	.L38:
7290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 266              		.loc 1 7290 0
 267 00a8 636C     		ldr	r3, [r4, #68]
 268 00aa 43F01003 		orr	r3, r3, #16
 269 00ae 6364     		str	r3, [r4, #68]
7293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 270              		.loc 1 7293 0
 271 00b0 A36C     		ldr	r3, [r4, #72]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 135


 272 00b2 43F00103 		orr	r3, r3, #1
 273 00b6 A364     		str	r3, [r4, #72]
7295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 274              		.loc 1 7295 0
 275 00b8 0120     		movs	r0, #1
 276              	.LVL19:
 277 00ba 70BD     		pop	{r4, r5, r6, pc}
 278              	.LVL20:
 279              	.L37:
7301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 280              		.loc 1 7301 0
 281 00bc 4022     		movs	r2, #64
 282              	.LVL21:
 283 00be 1A60     		str	r2, [r3]
7282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 284              		.loc 1 7282 0
 285 00c0 0C21     		movs	r1, #12
 286 00c2 ABE7     		b	.L16
 287              	.LVL22:
 288              	.L30:
7339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         break;
 289              		.loc 1 7339 0
 290 00c4 0425     		movs	r5, #4
7340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 291              		.loc 1 7340 0
 292 00c6 CCE7     		b	.L23
 293              	.LVL23:
 294              	.L29:
7335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         break;
 295              		.loc 1 7335 0
 296 00c8 0825     		movs	r5, #8
 297 00ca CAE7     		b	.L23
 298              	.LVL24:
 299              	.L36:
7357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
7362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return HAL status */
7363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
 300              		.loc 1 7363 0
 301 00cc 0020     		movs	r0, #0
 302 00ce 70BD     		pop	{r4, r5, r6, pc}
 303              	.LVL25:
 304              	.L27:
 305              	.LCFI2:
 306              		.cfi_def_cfa_offset 0
 307              		.cfi_restore 4
 308              		.cfi_restore 5
 309              		.cfi_restore 6
 310              		.cfi_restore 14
 311 00d0 0020     		movs	r0, #0
 312              	.LVL26:
 313 00d2 7047     		bx	lr
 314              	.L40:
 315              		.align	2
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 136


 316              	.L39:
 317 00d4 FF930900 		.word	627711
 318              		.cfi_endproc
 319              	.LFE165:
 321              		.section	.text.ADC_Enable,"ax",%progbits
 322              		.align	1
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu fpv4-sp-d16
 328              	ADC_Enable:
 329              	.LFB163:
7145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
 330              		.loc 1 7145 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              	.LVL27:
 335 0000 38B5     		push	{r3, r4, r5, lr}
 336              	.LCFI3:
 337              		.cfi_def_cfa_offset 16
 338              		.cfi_offset 3, -16
 339              		.cfi_offset 4, -12
 340              		.cfi_offset 5, -8
 341              		.cfi_offset 14, -4
 342              	.LVL28:
7152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 343              		.loc 1 7152 0
 344 0002 0268     		ldr	r2, [r0]
 345 0004 9368     		ldr	r3, [r2, #8]
 346 0006 03F00303 		and	r3, r3, #3
 347 000a 012B     		cmp	r3, #1
 348 000c 10D0     		beq	.L51
 349 000e 0023     		movs	r3, #0
 350              	.L42:
7152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 351              		.loc 1 7152 0 is_stmt 0 discriminator 6
 352 0010 002B     		cmp	r3, #0
 353 0012 33D1     		bne	.L49
7155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 354              		.loc 1 7155 0 is_stmt 1
 355 0014 9168     		ldr	r1, [r2, #8]
 356 0016 1A4B     		ldr	r3, .L53
 357 0018 1942     		tst	r1, r3
 358 001a 11D0     		beq	.L44
7158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 359              		.loc 1 7158 0
 360 001c 436C     		ldr	r3, [r0, #68]
 361 001e 43F01003 		orr	r3, r3, #16
 362 0022 4364     		str	r3, [r0, #68]
7161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 363              		.loc 1 7161 0
 364 0024 836C     		ldr	r3, [r0, #72]
 365 0026 43F00103 		orr	r3, r3, #1
 366 002a 8364     		str	r3, [r0, #72]
7163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 367              		.loc 1 7163 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 137


 368 002c 0120     		movs	r0, #1
 369              	.LVL29:
 370 002e 38BD     		pop	{r3, r4, r5, pc}
 371              	.LVL30:
 372              	.L51:
7152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 373              		.loc 1 7152 0 discriminator 1
 374 0030 1368     		ldr	r3, [r2]
 375 0032 13F0010F 		tst	r3, #1
 376 0036 01D1     		bne	.L48
7152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 377              		.loc 1 7152 0 is_stmt 0
 378 0038 0023     		movs	r3, #0
 379 003a E9E7     		b	.L42
 380              	.L48:
 381 003c 0123     		movs	r3, #1
 382 003e E7E7     		b	.L42
 383              	.L44:
 384 0040 0446     		mov	r4, r0
7167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 385              		.loc 1 7167 0 is_stmt 1
 386 0042 9368     		ldr	r3, [r2, #8]
 387 0044 43F00103 		orr	r3, r3, #1
 388 0048 9360     		str	r3, [r2, #8]
7170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 389              		.loc 1 7170 0
 390 004a FFF7FEFF 		bl	HAL_GetTick
 391              	.LVL31:
 392 004e 0546     		mov	r5, r0
 393              	.LVL32:
 394              	.L45:
7172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 395              		.loc 1 7172 0
 396 0050 2368     		ldr	r3, [r4]
 397 0052 1B68     		ldr	r3, [r3]
 398 0054 13F0010F 		tst	r3, #1
 399 0058 0ED1     		bne	.L52
7174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 400              		.loc 1 7174 0
 401 005a FFF7FEFF 		bl	HAL_GetTick
 402              	.LVL33:
 403 005e 401B     		subs	r0, r0, r5
 404 0060 0228     		cmp	r0, #2
 405 0062 F5D9     		bls	.L45
7177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 406              		.loc 1 7177 0
 407 0064 636C     		ldr	r3, [r4, #68]
 408 0066 43F01003 		orr	r3, r3, #16
 409 006a 6364     		str	r3, [r4, #68]
7180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 410              		.loc 1 7180 0
 411 006c A36C     		ldr	r3, [r4, #72]
 412 006e 43F00103 		orr	r3, r3, #1
 413 0072 A364     		str	r3, [r4, #72]
7182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 414              		.loc 1 7182 0
 415 0074 0120     		movs	r0, #1
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 138


 416 0076 38BD     		pop	{r3, r4, r5, pc}
 417              	.LVL34:
 418              	.L52:
7188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 419              		.loc 1 7188 0
 420 0078 0020     		movs	r0, #0
 421 007a 38BD     		pop	{r3, r4, r5, pc}
 422              	.LVL35:
 423              	.L49:
 424 007c 0020     		movs	r0, #0
 425              	.LVL36:
7189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 426              		.loc 1 7189 0
 427 007e 38BD     		pop	{r3, r4, r5, pc}
 428              	.L54:
 429              		.align	2
 430              	.L53:
 431 0080 3F000080 		.word	-2147483585
 432              		.cfi_endproc
 433              	.LFE163:
 435              		.section	.text.ADC_DMAError,"ax",%progbits
 436              		.align	1
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 440              		.fpu fpv4-sp-d16
 442              	ADC_DMAError:
 443              	.LFB162:
7119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 444              		.loc 1 7119 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              	.LVL37:
 449 0000 08B5     		push	{r3, lr}
 450              	.LCFI4:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 3, -8
 453              		.cfi_offset 14, -4
7121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 454              		.loc 1 7121 0
 455 0002 406A     		ldr	r0, [r0, #36]
 456              	.LVL38:
7124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 457              		.loc 1 7124 0
 458 0004 436C     		ldr	r3, [r0, #68]
 459 0006 43F04003 		orr	r3, r3, #64
 460 000a 4364     		str	r3, [r0, #68]
7127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 461              		.loc 1 7127 0
 462 000c 836C     		ldr	r3, [r0, #72]
 463 000e 43F00403 		orr	r3, r3, #4
 464 0012 8364     		str	r3, [r0, #72]
7130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 465              		.loc 1 7130 0
 466 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 467              	.LVL39:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 139


 468 0018 08BD     		pop	{r3, pc}
 469              		.cfi_endproc
 470              	.LFE162:
 472              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 473              		.align	1
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 477              		.fpu fpv4-sp-d16
 479              	ADC_DMAHalfConvCplt:
 480              	.LFB161:
7105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 481              		.loc 1 7105 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              	.LVL40:
 486 0000 08B5     		push	{r3, lr}
 487              	.LCFI5:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 3, -8
 490              		.cfi_offset 14, -4
 491              	.LVL41:
7110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 492              		.loc 1 7110 0
 493 0002 406A     		ldr	r0, [r0, #36]
 494              	.LVL42:
 495 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 496              	.LVL43:
 497 0008 08BD     		pop	{r3, pc}
 498              		.cfi_endproc
 499              	.LFE161:
 501              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 502              		.align	1
 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 506              		.fpu fpv4-sp-d16
 508              	ADC_DMAConvCplt:
 509              	.LFB160:
7062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 510              		.loc 1 7062 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              	.LVL44:
 515 0000 08B5     		push	{r3, lr}
 516              	.LCFI6:
 517              		.cfi_def_cfa_offset 8
 518              		.cfi_offset 3, -8
 519              		.cfi_offset 14, -4
7064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  
 520              		.loc 1 7064 0
 521 0002 436A     		ldr	r3, [r0, #36]
 522              	.LVL45:
7067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 523              		.loc 1 7067 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 140


 524 0004 5A6C     		ldr	r2, [r3, #68]
 525 0006 12F0500F 		tst	r2, #80
 526 000a 1AD1     		bne	.L60
7070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 527              		.loc 1 7070 0
 528 000c 5A6C     		ldr	r2, [r3, #68]
 529 000e 42F40072 		orr	r2, r2, #512
 530 0012 5A64     		str	r2, [r3, #68]
7077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 531              		.loc 1 7077 0
 532 0014 1A68     		ldr	r2, [r3]
 533 0016 D268     		ldr	r2, [r2, #12]
 534 0018 12F4406F 		tst	r2, #3072
 535 001c 0DD1     		bne	.L61
7078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 536              		.loc 1 7078 0 discriminator 1
 537 001e DA69     		ldr	r2, [r3, #28]
7077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 538              		.loc 1 7077 0 discriminator 1
 539 0020 5AB9     		cbnz	r2, .L61
7081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 540              		.loc 1 7081 0
 541 0022 5A6C     		ldr	r2, [r3, #68]
 542 0024 22F48072 		bic	r2, r2, #256
 543 0028 5A64     		str	r2, [r3, #68]
7083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 544              		.loc 1 7083 0
 545 002a 5A6C     		ldr	r2, [r3, #68]
 546 002c 12F4805F 		tst	r2, #4096
 547 0030 03D1     		bne	.L61
7085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 548              		.loc 1 7085 0
 549 0032 5A6C     		ldr	r2, [r3, #68]
 550 0034 42F00102 		orr	r2, r2, #1
 551 0038 5A64     		str	r2, [r3, #68]
 552              	.L61:
7090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 553              		.loc 1 7090 0
 554 003a 1846     		mov	r0, r3
 555              	.LVL46:
 556 003c FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 557              	.LVL47:
 558 0040 08BD     		pop	{r3, pc}
 559              	.LVL48:
 560              	.L60:
7095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 561              		.loc 1 7095 0
 562 0042 DB6B     		ldr	r3, [r3, #60]
 563              	.LVL49:
 564 0044 1B6B     		ldr	r3, [r3, #48]
 565 0046 9847     		blx	r3
 566              	.LVL50:
 567 0048 08BD     		pop	{r3, pc}
 568              		.cfi_endproc
 569              	.LFE160:
 571              		.section	.text.HAL_ADC_Init,"ax",%progbits
 572              		.align	1
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 141


 573              		.global	HAL_ADC_Init
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 577              		.fpu fpv4-sp-d16
 579              	HAL_ADC_Init:
 580              	.LFB124:
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 581              		.loc 1 253 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 88
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              	.LVL51:
 586 0000 30B5     		push	{r4, r5, lr}
 587              	.LCFI7:
 588              		.cfi_def_cfa_offset 12
 589              		.cfi_offset 4, -12
 590              		.cfi_offset 5, -8
 591              		.cfi_offset 14, -4
 592 0002 97B0     		sub	sp, sp, #92
 593              	.LCFI8:
 594              		.cfi_def_cfa_offset 104
 595              	.LVL52:
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 596              		.loc 1 258 0
 597 0004 0023     		movs	r3, #0
 598 0006 0093     		str	r3, [sp]
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 599              		.loc 1 261 0
 600 0008 0028     		cmp	r0, #0
 601 000a 00F0FB80 		beq	.L85
 602 000e 0446     		mov	r4, r0
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 603              		.loc 1 291 0
 604 0010 436C     		ldr	r3, [r0, #68]
 605 0012 13F0100F 		tst	r3, #16
 606 0016 51D1     		bne	.L86
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 607              		.loc 1 301 0
 608 0018 436C     		ldr	r3, [r0, #68]
 609 001a ABB1     		cbz	r3, .L93
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 610              		.loc 1 254 0
 611 001c 0020     		movs	r0, #0
 612              	.LVL53:
 613              	.L67:
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADVREGEN_1)   )
 614              		.loc 1 359 0
 615 001e 2368     		ldr	r3, [r4]
 616 0020 9A68     		ldr	r2, [r3, #8]
 617 0022 12F0805F 		tst	r2, #268435456
 618 0026 03D0     		beq	.L70
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 619              		.loc 1 360 0 discriminator 1
 620 0028 9B68     		ldr	r3, [r3, #8]
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADVREGEN_1)   )
 621              		.loc 1 359 0 discriminator 1
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 142


 622 002a 13F0005F 		tst	r3, #536870912
 623 002e 46D0     		beq	.L66
 624              	.L70:
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 625              		.loc 1 363 0
 626 0030 636C     		ldr	r3, [r4, #68]
 627 0032 23F01203 		bic	r3, r3, #18
 628 0036 43F01003 		orr	r3, r3, #16
 629 003a 6364     		str	r3, [r4, #68]
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 630              		.loc 1 368 0
 631 003c A36C     		ldr	r3, [r4, #72]
 632 003e 43F00103 		orr	r3, r3, #1
 633 0042 A364     		str	r3, [r4, #72]
 634              	.LVL54:
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 635              		.loc 1 370 0
 636 0044 0120     		movs	r0, #1
 637 0046 3AE0     		b	.L66
 638              	.LVL55:
 639              	.L93:
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 640              		.loc 1 304 0
 641 0048 8364     		str	r3, [r0, #72]
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0U;
 642              		.loc 1 307 0
 643 004a 0365     		str	r3, [r0, #80]
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 644              		.loc 1 308 0
 645 004c C364     		str	r3, [r0, #76]
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 646              		.loc 1 311 0
 647 004e 80F84030 		strb	r3, [r0, #64]
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 648              		.loc 1 314 0
 649 0052 FFF7FEFF 		bl	HAL_ADC_MspInit
 650              	.LVL56:
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 651              		.loc 1 317 0
 652 0056 2368     		ldr	r3, [r4]
 653 0058 9B68     		ldr	r3, [r3, #8]
 654 005a 13F0805F 		tst	r3, #268435456
 655 005e 01D0     		beq	.L94
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 656              		.loc 1 254 0
 657 0060 0020     		movs	r0, #0
 658 0062 DCE7     		b	.L67
 659              	.L94:
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 660              		.loc 1 326 0
 661 0064 2046     		mov	r0, r4
 662 0066 FFF7FEFF 		bl	ADC_Disable
 663              	.LVL57:
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (tmp_hal_status == HAL_OK)                                  )
 664              		.loc 1 331 0
 665 006a 636C     		ldr	r3, [r4, #68]
 666 006c 13F0100F 		tst	r3, #16
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 143


 667 0070 D5D1     		bne	.L67
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (tmp_hal_status == HAL_OK)                                  )
 668              		.loc 1 331 0 is_stmt 0 discriminator 1
 669 0072 0028     		cmp	r0, #0
 670 0074 D3D1     		bne	.L67
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 671              		.loc 1 335 0 is_stmt 1
 672 0076 636C     		ldr	r3, [r4, #68]
 673 0078 23F48853 		bic	r3, r3, #4352
 674 007c 23F00203 		bic	r3, r3, #2
 675 0080 43F00203 		orr	r3, r3, #2
 676 0084 6364     		str	r3, [r4, #68]
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADVREGEN bits to 0x01U */
 677              		.loc 1 341 0
 678 0086 2268     		ldr	r2, [r4]
 679 0088 9368     		ldr	r3, [r2, #8]
 680 008a 23F04053 		bic	r3, r3, #805306368
 681 008e 9360     		str	r3, [r2, #8]
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 682              		.loc 1 343 0
 683 0090 2268     		ldr	r2, [r4]
 684 0092 9368     		ldr	r3, [r2, #8]
 685 0094 43F08053 		orr	r3, r3, #268435456
 686 0098 9360     		str	r3, [r2, #8]
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 687              		.loc 1 347 0
 688 009a 5B4B     		ldr	r3, .L100
 689 009c 1B68     		ldr	r3, [r3]
 690 009e 5B4A     		ldr	r2, .L100+4
 691 00a0 A2FB0323 		umull	r2, r3, r2, r3
 692 00a4 9B0C     		lsrs	r3, r3, #18
 693 00a6 03EB8303 		add	r3, r3, r3, lsl #2
 694 00aa 5A00     		lsls	r2, r3, #1
 695 00ac 0092     		str	r2, [sp]
 696              	.L68:
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 697              		.loc 1 348 0
 698 00ae 009B     		ldr	r3, [sp]
 699 00b0 002B     		cmp	r3, #0
 700 00b2 B4D0     		beq	.L67
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 701              		.loc 1 350 0
 702 00b4 009B     		ldr	r3, [sp]
 703 00b6 013B     		subs	r3, r3, #1
 704 00b8 0093     		str	r3, [sp]
 705 00ba F8E7     		b	.L68
 706              	.LVL58:
 707              	.L86:
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 708              		.loc 1 254 0
 709 00bc 0020     		movs	r0, #0
 710              	.LVL59:
 711              	.L66:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (tmp_hal_status == HAL_OK)                                &&
 712              		.loc 1 379 0
 713 00be 636C     		ldr	r3, [r4, #68]
 714 00c0 13F0100F 		tst	r3, #16
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 144


 715 00c4 40F09580 		bne	.L71
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (tmp_hal_status == HAL_OK)                                &&
 716              		.loc 1 379 0 is_stmt 0 discriminator 1
 717 00c8 0028     		cmp	r0, #0
 718 00ca 40F09280 		bne	.L71
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 719              		.loc 1 381 0 is_stmt 1
 720 00ce 2268     		ldr	r2, [r4]
 721 00d0 9368     		ldr	r3, [r2, #8]
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)          )
 722              		.loc 1 380 0
 723 00d2 13F00403 		ands	r3, r3, #4
 724 00d6 40F08C80 		bne	.L71
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 725              		.loc 1 384 0
 726 00da 616C     		ldr	r1, [r4, #68]
 727 00dc 21F48171 		bic	r1, r1, #258
 728 00e0 41F00201 		orr	r1, r1, #2
 729 00e4 6164     		str	r1, [r4, #68]
 730              	.LVL60:
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 731              		.loc 1 396 0
 732 00e6 B2F1A04F 		cmp	r2, #1342177280
 733 00ea 55D0     		beq	.L95
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 734              		.loc 1 396 0 is_stmt 0 discriminator 2
 735 00ec 4FF0A041 		mov	r1, #1342177280
 736 00f0 0191     		str	r1, [sp, #4]
 737              	.L73:
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 738              		.loc 1 402 0 is_stmt 1
 739 00f2 9168     		ldr	r1, [r2, #8]
 740 00f4 01F00301 		and	r1, r1, #3
 741 00f8 0129     		cmp	r1, #1
 742 00fa 50D0     		beq	.L96
 743 00fc 0022     		movs	r2, #0
 744              	.L74:
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 745              		.loc 1 402 0 is_stmt 0 discriminator 6
 746 00fe 72B9     		cbnz	r2, .L75
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 747              		.loc 1 403 0 is_stmt 1 discriminator 7
 748 0100 019D     		ldr	r5, [sp, #4]
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 749              		.loc 1 402 0 discriminator 7
 750 0102 2DB1     		cbz	r5, .L76
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 751              		.loc 1 404 0
 752 0104 A968     		ldr	r1, [r5, #8]
 753 0106 01F00301 		and	r1, r1, #3
 754 010a 0129     		cmp	r1, #1
 755 010c 4FD0     		beq	.L97
 756              	.L77:
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 757              		.loc 1 403 0
 758 010e 32B9     		cbnz	r2, .L75
 759              	.L76:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 145


 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_CKMODE           ,
 760              		.loc 1 419 0
 761 0110 3F49     		ldr	r1, .L100+8
 762 0112 8A68     		ldr	r2, [r1, #8]
 763 0114 22F44032 		bic	r2, r2, #196608
 764 0118 6568     		ldr	r5, [r4, #4]
 765 011a 2A43     		orrs	r2, r2, r5
 766 011c 8A60     		str	r2, [r1, #8]
 767              	.L75:
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_CFGR_OVERRUN(hadc->Init.Overrun)               |
 768              		.loc 1 433 0
 769 011e E269     		ldr	r2, [r4, #28]
 770 0120 5103     		lsls	r1, r2, #13
 771 0122 A56B     		ldr	r5, [r4, #56]
 772 0124 012D     		cmp	r5, #1
 773 0126 01D0     		beq	.L78
 774 0128 4FF48053 		mov	r3, #4096
 775              	.L78:
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_CFGR_OVERRUN(hadc->Init.Overrun)               |
 776              		.loc 1 433 0 is_stmt 0 discriminator 4
 777 012c 0B43     		orrs	r3, r3, r1
 778 012e E168     		ldr	r1, [r4, #12]
 779 0130 0B43     		orrs	r3, r3, r1
 780 0132 A168     		ldr	r1, [r4, #8]
 781 0134 0B43     		orrs	r3, r3, r1
 782              	.LVL61:
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 783              		.loc 1 439 0 is_stmt 1 discriminator 4
 784 0136 616A     		ldr	r1, [r4, #36]
 785 0138 0129     		cmp	r1, #1
 786 013a 3ED0     		beq	.L98
 787              	.L79:
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 788              		.loc 1 469 0
 789 013c E26A     		ldr	r2, [r4, #44]
 790 013e 012A     		cmp	r2, #1
 791 0140 02D0     		beq	.L81
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        hadc->Init.ExternalTrigConvEdge                         );
 792              		.loc 1 471 0
 793 0142 216B     		ldr	r1, [r4, #48]
 794 0144 0A43     		orrs	r2, r2, r1
 795 0146 1343     		orrs	r3, r3, r2
 796              	.LVL62:
 797              	.L81:
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 798              		.loc 1 480 0
 799 0148 2268     		ldr	r2, [r4]
 800 014a 9168     		ldr	r1, [r2, #8]
 801 014c 11F00C0F 		tst	r1, #12
 802 0150 0BD1     		bne	.L82
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_CFGR_DMACFG  );
 803              		.loc 1 482 0
 804 0152 D168     		ldr	r1, [r2, #12]
 805 0154 21F48041 		bic	r1, r1, #16384
 806 0158 21F00201 		bic	r1, r1, #2
 807 015c D160     		str	r1, [r2, #12]
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        ADC_CFGR_DMACONTREQ(hadc->Init.DMAContinuousRequests) );
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 146


 808              		.loc 1 485 0
 809 015e A169     		ldr	r1, [r4, #24]
 810 0160 626B     		ldr	r2, [r4, #52]
 811 0162 5200     		lsls	r2, r2, #1
 812 0164 42EA8132 		orr	r2, r2, r1, lsl #14
 813 0168 1343     		orrs	r3, r3, r2
 814              	.LVL63:
 815              	.L82:
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_DISCNUM |
 816              		.loc 1 490 0
 817 016a 2168     		ldr	r1, [r4]
 818 016c CD68     		ldr	r5, [r1, #12]
 819 016e 294A     		ldr	r2, .L100+12
 820 0170 2A40     		ands	r2, r2, r5
 821 0172 1343     		orrs	r3, r3, r2
 822              	.LVL64:
 823 0174 CB60     		str	r3, [r1, #12]
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 824              		.loc 1 510 0
 825 0176 2369     		ldr	r3, [r4, #16]
 826 0178 012B     		cmp	r3, #1
 827 017a 31D0     		beq	.L99
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 828              		.loc 1 519 0
 829 017c 2268     		ldr	r2, [r4]
 830 017e 136B     		ldr	r3, [r2, #48]
 831 0180 23F00F03 		bic	r3, r3, #15
 832 0184 1363     		str	r3, [r2, #48]
 833              	.L84:
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 834              		.loc 1 523 0
 835 0186 0023     		movs	r3, #0
 836 0188 A364     		str	r3, [r4, #72]
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 837              		.loc 1 526 0
 838 018a 636C     		ldr	r3, [r4, #68]
 839 018c 23F00303 		bic	r3, r3, #3
 840 0190 43F00103 		orr	r3, r3, #1
 841 0194 6364     		str	r3, [r4, #68]
 842 0196 33E0     		b	.L65
 843              	.LVL65:
 844              	.L95:
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 845              		.loc 1 396 0 discriminator 1
 846 0198 1F49     		ldr	r1, .L100+16
 847 019a 0191     		str	r1, [sp, #4]
 848 019c A9E7     		b	.L73
 849              	.L96:
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 850              		.loc 1 402 0 discriminator 1
 851 019e 1268     		ldr	r2, [r2]
 852 01a0 12F0010F 		tst	r2, #1
 853 01a4 01D1     		bne	.L90
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 854              		.loc 1 402 0 is_stmt 0
 855 01a6 0022     		movs	r2, #0
 856 01a8 A9E7     		b	.L74
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 147


 857              	.L90:
 858 01aa 0122     		movs	r2, #1
 859 01ac A7E7     		b	.L74
 860              	.L97:
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 861              		.loc 1 404 0 is_stmt 1 discriminator 1
 862 01ae 2968     		ldr	r1, [r5]
 863 01b0 11F0010F 		tst	r1, #1
 864 01b4 ABD0     		beq	.L77
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 865              		.loc 1 404 0 is_stmt 0
 866 01b6 0122     		movs	r2, #1
 867 01b8 A9E7     		b	.L77
 868              	.LVL66:
 869              	.L98:
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 870              		.loc 1 441 0 is_stmt 1
 871 01ba 32B9     		cbnz	r2, .L80
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                          ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 872              		.loc 1 445 0
 873 01bc A26A     		ldr	r2, [r4, #40]
 874 01be 013A     		subs	r2, r2, #1
 875 01c0 43EA4243 		orr	r3, r3, r2, lsl #17
 876              	.LVL67:
 877 01c4 43F48033 		orr	r3, r3, #65536
 878              	.LVL68:
 879 01c8 B8E7     		b	.L79
 880              	.L80:
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 881              		.loc 1 455 0
 882 01ca 626C     		ldr	r2, [r4, #68]
 883 01cc 22F02202 		bic	r2, r2, #34
 884 01d0 42F02002 		orr	r2, r2, #32
 885 01d4 6264     		str	r2, [r4, #68]
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 886              		.loc 1 460 0
 887 01d6 A26C     		ldr	r2, [r4, #72]
 888 01d8 42F00102 		orr	r2, r2, #1
 889 01dc A264     		str	r2, [r4, #72]
 890 01de ADE7     		b	.L79
 891              	.LVL69:
 892              	.L99:
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_L                               ,
 893              		.loc 1 513 0
 894 01e0 2168     		ldr	r1, [r4]
 895 01e2 0B6B     		ldr	r3, [r1, #48]
 896 01e4 23F00F03 		bic	r3, r3, #15
 897 01e8 226A     		ldr	r2, [r4, #32]
 898 01ea 013A     		subs	r2, r2, #1
 899 01ec 1343     		orrs	r3, r3, r2
 900 01ee 0B63     		str	r3, [r1, #48]
 901 01f0 C9E7     		b	.L84
 902              	.LVL70:
 903              	.L71:
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 904              		.loc 1 533 0
 905 01f2 636C     		ldr	r3, [r4, #68]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 148


 906 01f4 23F01203 		bic	r3, r3, #18
 907 01f8 43F01003 		orr	r3, r3, #16
 908 01fc 6364     		str	r3, [r4, #68]
 909              	.LVL71:
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 910              		.loc 1 537 0
 911 01fe 0120     		movs	r0, #1
 912              	.LVL72:
 913              	.L65:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 914              		.loc 1 543 0
 915 0200 17B0     		add	sp, sp, #92
 916              	.LCFI9:
 917              		.cfi_remember_state
 918              		.cfi_def_cfa_offset 12
 919              		@ sp needed
 920 0202 30BD     		pop	{r4, r5, pc}
 921              	.LVL73:
 922              	.L85:
 923              	.LCFI10:
 924              		.cfi_restore_state
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 925              		.loc 1 263 0
 926 0204 0120     		movs	r0, #1
 927              	.LVL74:
 928 0206 FBE7     		b	.L65
 929              	.L101:
 930              		.align	2
 931              	.L100:
 932 0208 00000000 		.word	SystemCoreClock
 933 020c 83DE1B43 		.word	1125899907
 934 0210 00030050 		.word	1342178048
 935 0214 07C0F0FF 		.word	-999417
 936 0218 00010050 		.word	1342177536
 937              		.cfi_endproc
 938              	.LFE124:
 940              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 941              		.align	1
 942              		.global	HAL_ADC_DeInit
 943              		.syntax unified
 944              		.thumb
 945              		.thumb_func
 946              		.fpu fpv4-sp-d16
 948              	HAL_ADC_DeInit:
 949              	.LFB125:
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 950              		.loc 1 792 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 88
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              	.LVL75:
 955 0000 30B5     		push	{r4, r5, lr}
 956              	.LCFI11:
 957              		.cfi_def_cfa_offset 12
 958              		.cfi_offset 4, -12
 959              		.cfi_offset 5, -8
 960              		.cfi_offset 14, -4
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 149


 961 0002 97B0     		sub	sp, sp, #92
 962              	.LCFI12:
 963              		.cfi_def_cfa_offset 104
 964              	.LVL76:
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 965              		.loc 1 798 0
 966 0004 0028     		cmp	r0, #0
 967 0006 00F0D180 		beq	.L112
 968 000a 0446     		mov	r4, r0
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 969              		.loc 1 807 0
 970 000c 436C     		ldr	r3, [r0, #68]
 971 000e 43F00203 		orr	r3, r3, #2
 972 0012 4364     		str	r3, [r0, #68]
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 973              		.loc 1 810 0
 974 0014 6C21     		movs	r1, #108
 975 0016 FFF7FEFF 		bl	ADC_ConversionStop
 976              	.LVL77:
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 977              		.loc 1 813 0
 978 001a 0546     		mov	r5, r0
 979 001c 0028     		cmp	r0, #0
 980 001e 00F0A580 		beq	.L118
 981              	.L104:
 982              	.LVL78:
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 983              		.loc 1 838 0
 984 0022 002D     		cmp	r5, #0
 985 0024 40F09C80 		bne	.L105
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_JQOVF | ADC_IT_OVR  |
 986              		.loc 1 842 0
 987 0028 2268     		ldr	r2, [r4]
 988 002a 5368     		ldr	r3, [r2, #4]
 989 002c 23F4FF63 		bic	r3, r3, #2040
 990 0030 23F00703 		bic	r3, r3, #7
 991 0034 5360     		str	r3, [r2, #4]
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 992              		.loc 1 849 0
 993 0036 2368     		ldr	r3, [r4]
 994 0038 40F2FF72 		movw	r2, #2047
 995 003c 1A60     		str	r2, [r3]
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Set ADVREGEN bits to 0x10U */
 996              		.loc 1 866 0
 997 003e 2268     		ldr	r2, [r4]
 998 0040 9368     		ldr	r3, [r2, #8]
 999 0042 23F0E043 		bic	r3, r3, #1879048192
 1000 0046 9360     		str	r3, [r2, #8]
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1001              		.loc 1 868 0
 1002 0048 2268     		ldr	r2, [r4]
 1003 004a 9368     		ldr	r3, [r2, #8]
 1004 004c 43F00053 		orr	r3, r3, #536870912
 1005 0050 9360     		str	r3, [r2, #8]
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_AWD1EN  | ADC_CFGR_AWD1SGL | ADC_CFGR_JQM     |     
 1006              		.loc 1 871 0
 1007 0052 2268     		ldr	r2, [r4]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 150


 1008 0054 D168     		ldr	r1, [r2, #12]
 1009 0056 564B     		ldr	r3, .L122
 1010 0058 0B40     		ands	r3, r3, r1
 1011 005a D360     		str	r3, [r2, #12]
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR1_SMP6 | ADC_SMPR1_SMP5 | ADC_SMPR1_SMP4 | 
 1012              		.loc 1 879 0
 1013 005c 2268     		ldr	r2, [r4]
 1014 005e 5369     		ldr	r3, [r2, #20]
 1015 0060 23F07F53 		bic	r3, r3, #1069547520
 1016 0064 23F47F13 		bic	r3, r3, #4177920
 1017 0068 23F47F53 		bic	r3, r3, #16320
 1018 006c 23F03803 		bic	r3, r3, #56
 1019 0070 5361     		str	r3, [r2, #20]
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 | 
 1020              		.loc 1 884 0
 1021 0072 2268     		ldr	r2, [r4]
 1022 0074 9369     		ldr	r3, [r2, #24]
 1023 0076 03F07843 		and	r3, r3, #-134217728
 1024 007a 9361     		str	r3, [r2, #24]
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1025              		.loc 1 889 0
 1026 007c 2268     		ldr	r2, [r4]
 1027 007e 136A     		ldr	r3, [r2, #32]
 1028 0080 03F0F023 		and	r3, r3, #-268374016
 1029 0084 1362     		str	r3, [r2, #32]
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1030              		.loc 1 892 0
 1031 0086 2268     		ldr	r2, [r4]
 1032 0088 536A     		ldr	r3, [r2, #36]
 1033 008a 03F0FF23 		and	r3, r3, #-16711936
 1034 008e 5362     		str	r3, [r2, #36]
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1035              		.loc 1 895 0
 1036 0090 2268     		ldr	r2, [r4]
 1037 0092 936A     		ldr	r3, [r2, #40]
 1038 0094 03F0FF23 		and	r3, r3, #-16711936
 1039 0098 9362     		str	r3, [r2, #40]
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ1 | ADC_SQR1_L);
 1040              		.loc 1 898 0
 1041 009a 2268     		ldr	r2, [r4]
 1042 009c 116B     		ldr	r1, [r2, #48]
 1043 009e 454B     		ldr	r3, .L122+4
 1044 00a0 0B40     		ands	r3, r3, r1
 1045 00a2 1363     		str	r3, [r2, #48]
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 1046              		.loc 1 902 0
 1047 00a4 2368     		ldr	r3, [r4]
 1048 00a6 5A6B     		ldr	r2, [r3, #52]
 1049 00a8 4349     		ldr	r1, .L122+8
 1050 00aa 0A40     		ands	r2, r2, r1
 1051 00ac 5A63     		str	r2, [r3, #52]
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 1052              		.loc 1 906 0
 1053 00ae 2268     		ldr	r2, [r4]
 1054 00b0 936B     		ldr	r3, [r2, #56]
 1055 00b2 0B40     		ands	r3, r3, r1
 1056 00b4 9363     		str	r3, [r2, #56]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 151


 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1057              		.loc 1 910 0
 1058 00b6 2268     		ldr	r2, [r4]
 1059 00b8 D36B     		ldr	r3, [r2, #60]
 1060 00ba 23F4FB63 		bic	r3, r3, #2008
 1061 00be 23F00703 		bic	r3, r3, #7
 1062 00c2 D363     		str	r3, [r2, #60]
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR2 */
 1063              		.loc 1 916 0
 1064 00c4 2168     		ldr	r1, [r4]
 1065 00c6 0A6E     		ldr	r2, [r1, #96]
 1066 00c8 3C4B     		ldr	r3, .L122+12
 1067 00ca 1A40     		ands	r2, r2, r3
 1068 00cc 0A66     		str	r2, [r1, #96]
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR3 */
 1069              		.loc 1 918 0
 1070 00ce 2168     		ldr	r1, [r4]
 1071 00d0 4A6E     		ldr	r2, [r1, #100]
 1072 00d2 1A40     		ands	r2, r2, r3
 1073 00d4 4A66     		str	r2, [r1, #100]
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR4 */
 1074              		.loc 1 920 0
 1075 00d6 2168     		ldr	r1, [r4]
 1076 00d8 8A6E     		ldr	r2, [r1, #104]
 1077 00da 1A40     		ands	r2, r2, r3
 1078 00dc 8A66     		str	r2, [r1, #104]
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1079              		.loc 1 922 0
 1080 00de 2168     		ldr	r1, [r4]
 1081 00e0 CA6E     		ldr	r2, [r1, #108]
 1082 00e2 1340     		ands	r3, r3, r2
 1083 00e4 CB66     		str	r3, [r1, #108]
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1084              		.loc 1 928 0
 1085 00e6 2268     		ldr	r2, [r4]
 1086 00e8 D2F8A030 		ldr	r3, [r2, #160]
 1087 00ec DB0C     		lsrs	r3, r3, #19
 1088 00ee DB04     		lsls	r3, r3, #19
 1089 00f0 C2F8A030 		str	r3, [r2, #160]
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1090              		.loc 1 931 0
 1091 00f4 2268     		ldr	r2, [r4]
 1092 00f6 D2F8A430 		ldr	r3, [r2, #164]
 1093 00fa DB0C     		lsrs	r3, r3, #19
 1094 00fc DB04     		lsls	r3, r3, #19
 1095 00fe C2F8A430 		str	r3, [r2, #164]
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1096              		.loc 1 934 0
 1097 0102 2268     		ldr	r2, [r4]
 1098 0104 D2F8B030 		ldr	r3, [r2, #176]
 1099 0108 DB0C     		lsrs	r3, r3, #19
 1100 010a DB04     		lsls	r3, r3, #19
 1101 010c C2F8B030 		str	r3, [r2, #176]
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 1102              		.loc 1 937 0
 1103 0110 2268     		ldr	r2, [r4]
 1104 0112 D2F8B430 		ldr	r3, [r2, #180]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 152


 1105 0116 23F07F13 		bic	r3, r3, #8323199
 1106 011a C2F8B430 		str	r3, [r2, #180]
 1107              	.LVL79:
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1108              		.loc 1 952 0
 1109 011e 2268     		ldr	r2, [r4]
 1110 0120 B2F1A04F 		cmp	r2, #1342177280
 1111 0124 31D0     		beq	.L119
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1112              		.loc 1 952 0 is_stmt 0 discriminator 2
 1113 0126 4FF0A043 		mov	r3, #1342177280
 1114 012a 0193     		str	r3, [sp, #4]
 1115              	.L107:
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 1116              		.loc 1 956 0 is_stmt 1
 1117 012c 9368     		ldr	r3, [r2, #8]
 1118 012e 03F00303 		and	r3, r3, #3
 1119 0132 012B     		cmp	r3, #1
 1120 0134 2CD0     		beq	.L120
 1121 0136 0023     		movs	r3, #0
 1122              	.L108:
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 1123              		.loc 1 956 0 is_stmt 0 discriminator 6
 1124 0138 63B9     		cbnz	r3, .L109
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET) )   )
 1125              		.loc 1 957 0 is_stmt 1 discriminator 7
 1126 013a 0199     		ldr	r1, [sp, #4]
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 1127              		.loc 1 956 0 discriminator 7
 1128 013c 29B1     		cbz	r1, .L110
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1129              		.loc 1 958 0
 1130 013e 8A68     		ldr	r2, [r1, #8]
 1131 0140 02F00302 		and	r2, r2, #3
 1132 0144 012A     		cmp	r2, #1
 1133 0146 2BD0     		beq	.L121
 1134              	.L111:
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET) )   )
 1135              		.loc 1 957 0
 1136 0148 23B9     		cbnz	r3, .L109
 1137              	.L110:
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_VBATEN |
 1138              		.loc 1 967 0
 1139 014a 1D4A     		ldr	r2, .L122+16
 1140 014c 9168     		ldr	r1, [r2, #8]
 1141 014e 1D4B     		ldr	r3, .L122+20
 1142 0150 0B40     		ands	r3, r3, r1
 1143 0152 9360     		str	r3, [r2, #8]
 1144              	.L109:
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1145              		.loc 1 989 0
 1146 0154 2046     		mov	r0, r4
 1147 0156 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 1148              	.LVL80:
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1149              		.loc 1 992 0
 1150 015a 0023     		movs	r3, #0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 153


 1151 015c A364     		str	r3, [r4, #72]
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1152              		.loc 1 995 0
 1153 015e 6364     		str	r3, [r4, #68]
 1154              	.LVL81:
 1155              	.L105:
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 1156              		.loc 1 999 0
 1157 0160 0023     		movs	r3, #0
 1158 0162 84F84030 		strb	r3, [r4, #64]
 1159              	.LVL82:
 1160              	.L103:
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 1161              		.loc 1 1004 0
 1162 0166 2846     		mov	r0, r5
 1163 0168 17B0     		add	sp, sp, #92
 1164              	.LCFI13:
 1165              		.cfi_remember_state
 1166              		.cfi_def_cfa_offset 12
 1167              		@ sp needed
 1168 016a 30BD     		pop	{r4, r5, pc}
 1169              	.LVL83:
 1170              	.L118:
 1171              	.LCFI14:
 1172              		.cfi_restore_state
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1173              		.loc 1 818 0
 1174 016c 2268     		ldr	r2, [r4]
 1175 016e D368     		ldr	r3, [r2, #12]
 1176 0170 43F40013 		orr	r3, r3, #2097152
 1177 0174 D360     		str	r3, [r2, #12]
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1178              		.loc 1 821 0
 1179 0176 2046     		mov	r0, r4
 1180              	.LVL84:
 1181 0178 FFF7FEFF 		bl	ADC_Disable
 1182              	.LVL85:
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1183              		.loc 1 824 0
 1184 017c 0546     		mov	r5, r0
 1185 017e 10B9     		cbnz	r0, .L113
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 1186              		.loc 1 827 0
 1187 0180 0123     		movs	r3, #1
 1188 0182 6364     		str	r3, [r4, #68]
 1189 0184 4DE7     		b	.L104
 1190              	.L113:
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 1191              		.loc 1 831 0
 1192 0186 0125     		movs	r5, #1
 1193 0188 4BE7     		b	.L104
 1194              	.LVL86:
 1195              	.L119:
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1196              		.loc 1 952 0 discriminator 1
 1197 018a 0F4B     		ldr	r3, .L122+24
 1198 018c 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 154


 1199 018e CDE7     		b	.L107
 1200              	.L120:
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 1201              		.loc 1 956 0 discriminator 1
 1202 0190 1368     		ldr	r3, [r2]
 1203 0192 13F0010F 		tst	r3, #1
 1204 0196 01D1     		bne	.L115
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 1205              		.loc 1 956 0 is_stmt 0
 1206 0198 0023     		movs	r3, #0
 1207 019a CDE7     		b	.L108
 1208              	.L115:
 1209 019c 0123     		movs	r3, #1
 1210 019e CBE7     		b	.L108
 1211              	.L121:
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1212              		.loc 1 958 0 is_stmt 1 discriminator 1
 1213 01a0 0A68     		ldr	r2, [r1]
 1214 01a2 12F0010F 		tst	r2, #1
 1215 01a6 CFD0     		beq	.L111
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1216              		.loc 1 958 0 is_stmt 0
 1217 01a8 0123     		movs	r3, #1
 1218 01aa CDE7     		b	.L111
 1219              	.LVL87:
 1220              	.L112:
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1221              		.loc 1 800 0 is_stmt 1
 1222 01ac 0125     		movs	r5, #1
 1223 01ae DAE7     		b	.L103
 1224              	.L123:
 1225              		.align	2
 1226              	.L122:
 1227 01b0 04800080 		.word	-2147450876
 1228 01b4 300882E0 		.word	-528349136
 1229 01b8 200882E0 		.word	-528349152
 1230 01bc 00F0FF03 		.word	67104768
 1231 01c0 00030050 		.word	1342178048
 1232 01c4 E0103CFE 		.word	-29617952
 1233 01c8 00010050 		.word	1342177536
 1234              		.cfi_endproc
 1235              	.LFE125:
 1237              		.section	.text.HAL_ADC_Start,"ax",%progbits
 1238              		.align	1
 1239              		.global	HAL_ADC_Start
 1240              		.syntax unified
 1241              		.thumb
 1242              		.thumb_func
 1243              		.fpu fpv4-sp-d16
 1245              	HAL_ADC_Start:
 1246              	.LFB126:
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1247              		.loc 1 1207 0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 0
 1250              		@ frame_needed = 0, uses_anonymous_args = 0
 1251              	.LVL88:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 155


1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1252              		.loc 1 1214 0
 1253 0000 0368     		ldr	r3, [r0]
 1254 0002 9B68     		ldr	r3, [r3, #8]
 1255 0004 13F0040F 		tst	r3, #4
 1256 0008 02D0     		beq	.L139
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1257              		.loc 1 1302 0
 1258 000a 0223     		movs	r3, #2
 1259              	.L136:
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 1260              		.loc 1 1307 0
 1261 000c 1846     		mov	r0, r3
 1262              	.LVL89:
 1263 000e 7047     		bx	lr
 1264              	.LVL90:
 1265              	.L139:
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1266              		.loc 1 1217 0
 1267 0010 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 1268 0014 012B     		cmp	r3, #1
 1269 0016 01D1     		bne	.L140
 1270 0018 0223     		movs	r3, #2
 1271 001a F7E7     		b	.L136
 1272              	.L140:
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1273              		.loc 1 1207 0 discriminator 2
 1274 001c 10B5     		push	{r4, lr}
 1275              	.LCFI15:
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 4, -8
 1278              		.cfi_offset 14, -4
 1279 001e 0446     		mov	r4, r0
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1280              		.loc 1 1217 0 discriminator 2
 1281 0020 0123     		movs	r3, #1
 1282 0022 80F84030 		strb	r3, [r0, #64]
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1283              		.loc 1 1220 0 discriminator 2
 1284 0026 FFF7FEFF 		bl	ADC_Enable
 1285              	.LVL91:
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1286              		.loc 1 1223 0 discriminator 2
 1287 002a 0346     		mov	r3, r0
 1288 002c 0028     		cmp	r0, #0
 1289 002e 60D1     		bne	.L126
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 1290              		.loc 1 1228 0
 1291 0030 626C     		ldr	r2, [r4, #68]
 1292 0032 22F47062 		bic	r2, r2, #3840
 1293 0036 22F00102 		bic	r2, r2, #1
 1294 003a 42F48072 		orr	r2, r2, #256
 1295 003e 6264     		str	r2, [r4, #68]
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1296              		.loc 1 1235 0
 1297 0040 2E4A     		ldr	r2, .L142
 1298 0042 9268     		ldr	r2, [r2, #8]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 156


 1299 0044 12F01F0F 		tst	r2, #31
 1300 0048 33D0     		beq	.L127
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1301              		.loc 1 1235 0 is_stmt 0 discriminator 1
 1302 004a 2168     		ldr	r1, [r4]
 1303 004c B1F1A04F 		cmp	r1, #1342177280
 1304 0050 2FD0     		beq	.L127
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1305              		.loc 1 1250 0 is_stmt 1
 1306 0052 626C     		ldr	r2, [r4, #68]
 1307 0054 42F48012 		orr	r2, r2, #1048576
 1308 0058 6264     		str	r2, [r4, #68]
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1309              		.loc 1 1254 0
 1310 005a 294A     		ldr	r2, .L142+4
 1311 005c 9142     		cmp	r1, r2
 1312 005e 38D0     		beq	.L141
 1313              	.L129:
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1314              		.loc 1 1261 0
 1315 0060 626C     		ldr	r2, [r4, #68]
 1316 0062 12F4805F 		tst	r2, #4096
 1317 0066 41D0     		beq	.L130
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1318              		.loc 1 1264 0
 1319 0068 A26C     		ldr	r2, [r4, #72]
 1320 006a 22F00602 		bic	r2, r2, #6
 1321 006e A264     		str	r2, [r4, #72]
 1322              	.L131:
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 1323              		.loc 1 1275 0
 1324 0070 0022     		movs	r2, #0
 1325 0072 84F84020 		strb	r2, [r4, #64]
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 1326              		.loc 1 1280 0
 1327 0076 2268     		ldr	r2, [r4]
 1328 0078 1C21     		movs	r1, #28
 1329 007a 1160     		str	r1, [r2]
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1330              		.loc 1 1289 0
 1331 007c 1F4A     		ldr	r2, .L142
 1332 007e 9268     		ldr	r2, [r2, #8]
 1333 0080 12F01F0F 		tst	r2, #31
 1334 0084 0FD0     		beq	.L132
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1335              		.loc 1 1289 0 is_stmt 0 discriminator 1
 1336 0086 1D4A     		ldr	r2, .L142
 1337 0088 9268     		ldr	r2, [r2, #8]
 1338 008a 02F01F02 		and	r2, r2, #31
 1339 008e 052A     		cmp	r2, #5
 1340 0090 09D0     		beq	.L132
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1341              		.loc 1 1289 0 discriminator 2
 1342 0092 1A4A     		ldr	r2, .L142
 1343 0094 9268     		ldr	r2, [r2, #8]
 1344 0096 02F01F02 		and	r2, r2, #31
 1345 009a 092A     		cmp	r2, #9
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 157


 1346 009c 03D0     		beq	.L132
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1347              		.loc 1 1289 0 discriminator 3
 1348 009e 2268     		ldr	r2, [r4]
 1349 00a0 B2F1A04F 		cmp	r2, #1342177280
 1350 00a4 28D1     		bne	.L125
 1351              	.L132:
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1352              		.loc 1 1291 0 is_stmt 1
 1353 00a6 2168     		ldr	r1, [r4]
 1354 00a8 8A68     		ldr	r2, [r1, #8]
 1355 00aa 42F00402 		orr	r2, r2, #4
 1356 00ae 8A60     		str	r2, [r1, #8]
 1357 00b0 22E0     		b	.L125
 1358              	.L127:
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1359              		.loc 1 1238 0
 1360 00b2 626C     		ldr	r2, [r4, #68]
 1361 00b4 22F48012 		bic	r2, r2, #1048576
 1362 00b8 6264     		str	r2, [r4, #68]
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1363              		.loc 1 1242 0
 1364 00ba 2268     		ldr	r2, [r4]
 1365 00bc D268     		ldr	r2, [r2, #12]
 1366 00be 12F0007F 		tst	r2, #33554432
 1367 00c2 CDD0     		beq	.L129
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 1368              		.loc 1 1244 0
 1369 00c4 626C     		ldr	r2, [r4, #68]
 1370 00c6 22F44052 		bic	r2, r2, #12288
 1371 00ca 42F48052 		orr	r2, r2, #4096
 1372 00ce 6264     		str	r2, [r4, #68]
 1373 00d0 C6E7     		b	.L129
 1374              	.L141:
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1375              		.loc 1 1254 0 discriminator 3
 1376 00d2 4FF0A042 		mov	r2, #1342177280
 1377 00d6 D268     		ldr	r2, [r2, #12]
 1378 00d8 12F0007F 		tst	r2, #33554432
 1379 00dc C0D0     		beq	.L129
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 1380              		.loc 1 1256 0
 1381 00de 626C     		ldr	r2, [r4, #68]
 1382 00e0 22F44052 		bic	r2, r2, #12288
 1383 00e4 42F48052 		orr	r2, r2, #4096
 1384 00e8 6264     		str	r2, [r4, #68]
 1385 00ea B9E7     		b	.L129
 1386              	.L130:
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1387              		.loc 1 1269 0
 1388 00ec 0022     		movs	r2, #0
 1389 00ee A264     		str	r2, [r4, #72]
 1390 00f0 BEE7     		b	.L131
 1391              	.L126:
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 1392              		.loc 1 1297 0
 1393 00f2 0022     		movs	r2, #0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 158


 1394 00f4 84F84020 		strb	r2, [r4, #64]
 1395              	.L125:
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 1396              		.loc 1 1307 0
 1397 00f8 1846     		mov	r0, r3
 1398              	.LVL92:
 1399 00fa 10BD     		pop	{r4, pc}
 1400              	.LVL93:
 1401              	.L143:
 1402              		.align	2
 1403              	.L142:
 1404 00fc 00030050 		.word	1342178048
 1405 0100 00010050 		.word	1342177536
 1406              		.cfi_endproc
 1407              	.LFE126:
 1409              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 1410              		.align	1
 1411              		.global	HAL_ADC_Stop
 1412              		.syntax unified
 1413              		.thumb
 1414              		.thumb_func
 1415              		.fpu fpv4-sp-d16
 1417              	HAL_ADC_Stop:
 1418              	.LFB127:
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1419              		.loc 1 1413 0
 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 0
 1422              		@ frame_needed = 0, uses_anonymous_args = 0
 1423              	.LVL94:
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1424              		.loc 1 1420 0
 1425 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 1426 0004 012B     		cmp	r3, #1
 1427 0006 02D1     		bne	.L152
 1428 0008 0223     		movs	r3, #2
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 1429              		.loc 1 1446 0
 1430 000a 1846     		mov	r0, r3
 1431              	.LVL95:
 1432 000c 7047     		bx	lr
 1433              	.LVL96:
 1434              	.L152:
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1435              		.loc 1 1413 0 discriminator 2
 1436 000e 10B5     		push	{r4, lr}
 1437              	.LCFI16:
 1438              		.cfi_def_cfa_offset 8
 1439              		.cfi_offset 4, -8
 1440              		.cfi_offset 14, -4
 1441 0010 0446     		mov	r4, r0
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1442              		.loc 1 1420 0 discriminator 2
 1443 0012 0123     		movs	r3, #1
 1444 0014 80F84030 		strb	r3, [r0, #64]
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1445              		.loc 1 1423 0 discriminator 2
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 159


 1446 0018 6C21     		movs	r1, #108
 1447 001a FFF7FEFF 		bl	ADC_ConversionStop
 1448              	.LVL97:
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1449              		.loc 1 1426 0 discriminator 2
 1450 001e 0346     		mov	r3, r0
 1451 0020 20B1     		cbz	r0, .L153
 1452              	.L146:
 1453              	.LVL98:
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1454              		.loc 1 1442 0
 1455 0022 0022     		movs	r2, #0
 1456 0024 84F84020 		strb	r2, [r4, #64]
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 1457              		.loc 1 1446 0
 1458 0028 1846     		mov	r0, r3
 1459 002a 10BD     		pop	{r4, pc}
 1460              	.LVL99:
 1461              	.L153:
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1462              		.loc 1 1429 0
 1463 002c 2046     		mov	r0, r4
 1464              	.LVL100:
 1465 002e FFF7FEFF 		bl	ADC_Disable
 1466              	.LVL101:
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1467              		.loc 1 1432 0
 1468 0032 0346     		mov	r3, r0
 1469 0034 0028     		cmp	r0, #0
 1470 0036 F4D1     		bne	.L146
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1471              		.loc 1 1435 0
 1472 0038 626C     		ldr	r2, [r4, #68]
 1473 003a 22F48852 		bic	r2, r2, #4352
 1474 003e 22F00102 		bic	r2, r2, #1
 1475 0042 42F00102 		orr	r2, r2, #1
 1476 0046 6264     		str	r2, [r4, #68]
 1477 0048 EBE7     		b	.L146
 1478              		.cfi_endproc
 1479              	.LFE127:
 1481              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 1482              		.align	1
 1483              		.global	HAL_ADC_PollForConversion
 1484              		.syntax unified
 1485              		.thumb
 1486              		.thumb_func
 1487              		.fpu fpv4-sp-d16
 1489              	HAL_ADC_PollForConversion:
 1490              	.LFB128:
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
 1491              		.loc 1 1518 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 0
 1494              		@ frame_needed = 0, uses_anonymous_args = 0
 1495              	.LVL102:
 1496 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1497              	.LCFI17:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 160


 1498              		.cfi_def_cfa_offset 24
 1499              		.cfi_offset 4, -24
 1500              		.cfi_offset 5, -20
 1501              		.cfi_offset 6, -16
 1502              		.cfi_offset 7, -12
 1503              		.cfi_offset 8, -8
 1504              		.cfi_offset 14, -4
 1505              	.LVL103:
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1506              		.loc 1 1528 0
 1507 0004 4669     		ldr	r6, [r0, #20]
 1508 0006 082E     		cmp	r6, #8
 1509 0008 0AD0     		beq	.L155
 1510              	.LVL104:
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1511              		.loc 1 1548 0
 1512 000a 424B     		ldr	r3, .L174
 1513 000c 9B68     		ldr	r3, [r3, #8]
 1514 000e 13F01F0F 		tst	r3, #31
 1515 0012 1CD1     		bne	.L156
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1516              		.loc 1 1550 0
 1517 0014 0368     		ldr	r3, [r0]
 1518 0016 DB68     		ldr	r3, [r3, #12]
 1519 0018 13F0010F 		tst	r3, #1
 1520 001c 0DD1     		bne	.L171
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 1521              		.loc 1 1576 0
 1522 001e 0C26     		movs	r6, #12
 1523              	.LVL105:
 1524              	.L155:
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1525              		.loc 1 1583 0
 1526 0020 3C4B     		ldr	r3, .L174
 1527 0022 9B68     		ldr	r3, [r3, #8]
 1528 0024 13F01F0F 		tst	r3, #31
 1529 0028 22D0     		beq	.L158
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1530              		.loc 1 1583 0 is_stmt 0 discriminator 1
 1531 002a 0368     		ldr	r3, [r0]
 1532 002c B3F1A04F 		cmp	r3, #1342177280
 1533 0030 1ED0     		beq	.L158
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1534              		.loc 1 1589 0 is_stmt 1
 1535 0032 4FF0A043 		mov	r3, #1342177280
 1536 0036 DF68     		ldr	r7, [r3, #12]
 1537              	.LVL106:
 1538 0038 1CE0     		b	.L160
 1539              	.LVL107:
 1540              	.L171:
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1541              		.loc 1 1553 0
 1542 003a 436C     		ldr	r3, [r0, #68]
 1543 003c 43F02003 		orr	r3, r3, #32
 1544 0040 4364     		str	r3, [r0, #68]
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1545              		.loc 1 1556 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 161


 1546 0042 0023     		movs	r3, #0
 1547 0044 80F84030 		strb	r3, [r0, #64]
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1548              		.loc 1 1558 0
 1549 0048 0120     		movs	r0, #1
 1550              	.LVL108:
 1551 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1552              	.LVL109:
 1553              	.L156:
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1554              		.loc 1 1564 0
 1555 004e 314B     		ldr	r3, .L174
 1556 0050 9B68     		ldr	r3, [r3, #8]
 1557 0052 13F4404F 		tst	r3, #49152
 1558 0056 01D1     		bne	.L172
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 1559              		.loc 1 1576 0
 1560 0058 0C26     		movs	r6, #12
 1561 005a E1E7     		b	.L155
 1562              	.L172:
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1563              		.loc 1 1567 0
 1564 005c 436C     		ldr	r3, [r0, #68]
 1565 005e 43F02003 		orr	r3, r3, #32
 1566 0062 4364     		str	r3, [r0, #68]
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1567              		.loc 1 1570 0
 1568 0064 0023     		movs	r3, #0
 1569 0066 80F84030 		strb	r3, [r0, #64]
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1570              		.loc 1 1572 0
 1571 006a 0120     		movs	r0, #1
 1572              	.LVL110:
 1573 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1574              	.LVL111:
 1575              	.L158:
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1576              		.loc 1 1585 0
 1577 0070 0368     		ldr	r3, [r0]
 1578 0072 DF68     		ldr	r7, [r3, #12]
 1579              	.LVL112:
 1580              	.L160:
 1581 0074 0D46     		mov	r5, r1
 1582 0076 0446     		mov	r4, r0
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1583              		.loc 1 1593 0
 1584 0078 FFF7FEFF 		bl	HAL_GetTick
 1585              	.LVL113:
 1586 007c 8046     		mov	r8, r0
 1587              	.LVL114:
 1588              	.L162:
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1589              		.loc 1 1596 0
 1590 007e 2368     		ldr	r3, [r4]
 1591 0080 1A68     		ldr	r2, [r3]
 1592 0082 1642     		tst	r6, r2
 1593 0084 13D1     		bne	.L173
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 162


1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1594              		.loc 1 1599 0
 1595 0086 B5F1FF3F 		cmp	r5, #-1
 1596 008a F8D0     		beq	.L162
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1597              		.loc 1 1601 0
 1598 008c 2DB1     		cbz	r5, .L163
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1599              		.loc 1 1601 0 is_stmt 0 discriminator 1
 1600 008e FFF7FEFF 		bl	HAL_GetTick
 1601              	.LVL115:
 1602 0092 A0EB0800 		sub	r0, r0, r8
 1603 0096 8542     		cmp	r5, r0
 1604 0098 F1D2     		bcs	.L162
 1605              	.L163:
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1606              		.loc 1 1604 0 is_stmt 1
 1607 009a 636C     		ldr	r3, [r4, #68]
 1608 009c 43F00403 		orr	r3, r3, #4
 1609 00a0 6364     		str	r3, [r4, #68]
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1610              		.loc 1 1607 0
 1611 00a2 0023     		movs	r3, #0
 1612 00a4 84F84030 		strb	r3, [r4, #64]
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1613              		.loc 1 1609 0
 1614 00a8 0320     		movs	r0, #3
 1615 00aa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1616              	.LVL116:
 1617              	.L173:
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1618              		.loc 1 1615 0
 1619 00ae 626C     		ldr	r2, [r4, #68]
 1620 00b0 42F40072 		orr	r2, r2, #512
 1621 00b4 6264     		str	r2, [r4, #68]
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )
 1622              		.loc 1 1619 0
 1623 00b6 DA68     		ldr	r2, [r3, #12]
 1624 00b8 12F4406F 		tst	r2, #3072
 1625 00bc 1FD1     		bne	.L165
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )
 1626              		.loc 1 1619 0 is_stmt 0 discriminator 1
 1627 00be 17F4005F 		tst	r7, #8192
 1628 00c2 1CD1     		bne	.L165
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1629              		.loc 1 1623 0 is_stmt 1
 1630 00c4 1A68     		ldr	r2, [r3]
 1631 00c6 12F0080F 		tst	r2, #8
 1632 00ca 18D0     		beq	.L165
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {        
 1633              		.loc 1 1627 0
 1634 00cc 9A68     		ldr	r2, [r3, #8]
 1635 00ce 12F0040F 		tst	r2, #4
 1636 00d2 0CD1     		bne	.L166
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1637              		.loc 1 1630 0
 1638 00d4 626C     		ldr	r2, [r4, #68]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 163


 1639 00d6 22F48072 		bic	r2, r2, #256
 1640 00da 6264     		str	r2, [r4, #68]
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1641              		.loc 1 1632 0
 1642 00dc 626C     		ldr	r2, [r4, #68]
 1643 00de 12F4805F 		tst	r2, #4096
 1644 00e2 0CD1     		bne	.L165
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 1645              		.loc 1 1634 0
 1646 00e4 626C     		ldr	r2, [r4, #68]
 1647 00e6 42F00102 		orr	r2, r2, #1
 1648 00ea 6264     		str	r2, [r4, #68]
 1649 00ec 07E0     		b	.L165
 1650              	.L166:
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1651              		.loc 1 1640 0
 1652 00ee 626C     		ldr	r2, [r4, #68]
 1653 00f0 42F02002 		orr	r2, r2, #32
 1654 00f4 6264     		str	r2, [r4, #68]
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1655              		.loc 1 1643 0
 1656 00f6 A26C     		ldr	r2, [r4, #72]
 1657 00f8 42F00102 		orr	r2, r2, #1
 1658 00fc A264     		str	r2, [r4, #72]
 1659              	.L165:
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1660              		.loc 1 1651 0
 1661 00fe 17F4804F 		tst	r7, #16384
 1662 0102 03D1     		bne	.L169
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1663              		.loc 1 1655 0
 1664 0104 1E60     		str	r6, [r3]
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1665              		.loc 1 1659 0
 1666 0106 0020     		movs	r0, #0
 1667 0108 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1668              	.LVL117:
 1669              	.L169:
 1670 010c 0020     		movs	r0, #0
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 1671              		.loc 1 1660 0
 1672 010e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1673              	.LVL118:
 1674              	.L175:
 1675 0112 00BF     		.align	2
 1676              	.L174:
 1677 0114 00030050 		.word	1342178048
 1678              		.cfi_endproc
 1679              	.LFE128:
 1681              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 1682              		.align	1
 1683              		.global	HAL_ADC_PollForEvent
 1684              		.syntax unified
 1685              		.thumb
 1686              		.thumb_func
 1687              		.fpu fpv4-sp-d16
 1689              	HAL_ADC_PollForEvent:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 164


 1690              	.LFB129:
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart; 
 1691              		.loc 1 1821 0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695              	.LVL119:
 1696 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1697              	.LCFI18:
 1698              		.cfi_def_cfa_offset 24
 1699              		.cfi_offset 3, -24
 1700              		.cfi_offset 4, -20
 1701              		.cfi_offset 5, -16
 1702              		.cfi_offset 6, -12
 1703              		.cfi_offset 7, -8
 1704              		.cfi_offset 14, -4
 1705 0002 0546     		mov	r5, r0
 1706 0004 0C46     		mov	r4, r1
 1707 0006 1646     		mov	r6, r2
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1708              		.loc 1 1829 0
 1709 0008 FFF7FEFF 		bl	HAL_GetTick
 1710              	.LVL120:
 1711 000c 0746     		mov	r7, r0
 1712              	.LVL121:
 1713              	.L178:
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1714              		.loc 1 1832 0
 1715 000e 2B68     		ldr	r3, [r5]
 1716 0010 1A68     		ldr	r2, [r3]
 1717 0012 34EA0202 		bics	r2, r4, r2
 1718 0016 11D0     		beq	.L190
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1719              		.loc 1 1835 0
 1720 0018 B6F1FF3F 		cmp	r6, #-1
 1721 001c F7D0     		beq	.L178
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1722              		.loc 1 1837 0
 1723 001e 26B1     		cbz	r6, .L179
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1724              		.loc 1 1837 0 is_stmt 0 discriminator 1
 1725 0020 FFF7FEFF 		bl	HAL_GetTick
 1726              	.LVL122:
 1727 0024 C01B     		subs	r0, r0, r7
 1728 0026 8642     		cmp	r6, r0
 1729 0028 F1D2     		bcs	.L178
 1730              	.L179:
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1731              		.loc 1 1840 0 is_stmt 1
 1732 002a 6B6C     		ldr	r3, [r5, #68]
 1733 002c 43F00403 		orr	r3, r3, #4
 1734 0030 6B64     		str	r3, [r5, #68]
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1735              		.loc 1 1843 0
 1736 0032 0023     		movs	r3, #0
 1737 0034 85F84030 		strb	r3, [r5, #64]
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 165


 1738              		.loc 1 1845 0
 1739 0038 0320     		movs	r0, #3
 1740 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1741              	.LVL123:
 1742              	.L190:
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1743              		.loc 1 1851 0
 1744 003c B4F5807F 		cmp	r4, #256
 1745 0040 1DD0     		beq	.L183
 1746 0042 12D9     		bls	.L191
 1747 0044 B4F5007F 		cmp	r4, #512
 1748 0048 22D0     		beq	.L186
 1749 004a B4F5806F 		cmp	r4, #1024
 1750 004e 28D1     		bne	.L182
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 1751              		.loc 1 1891 0
 1752 0050 6A6C     		ldr	r2, [r5, #68]
 1753 0052 42F48042 		orr	r2, r2, #16384
 1754 0056 6A64     		str	r2, [r5, #68]
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1755              		.loc 1 1894 0
 1756 0058 AA6C     		ldr	r2, [r5, #72]
 1757 005a 42F00802 		orr	r2, r2, #8
 1758 005e AA64     		str	r2, [r5, #72]
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 1759              		.loc 1 1897 0
 1760 0060 4FF48062 		mov	r2, #1024
 1761 0064 1A60     		str	r2, [r3]
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1762              		.loc 1 1921 0
 1763 0066 0020     		movs	r0, #0
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
 1764              		.loc 1 1898 0
 1765 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1766              	.LVL124:
 1767              	.L191:
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1768              		.loc 1 1851 0
 1769 006a 802C     		cmp	r4, #128
 1770 006c 19D1     		bne	.L182
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
 1771              		.loc 1 1864 0
 1772 006e 6A6C     		ldr	r2, [r5, #68]
 1773 0070 42F48032 		orr	r2, r2, #65536
 1774 0074 6A64     		str	r2, [r5, #68]
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 1775              		.loc 1 1867 0
 1776 0076 8022     		movs	r2, #128
 1777 0078 1A60     		str	r2, [r3]
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1778              		.loc 1 1921 0
 1779 007a 0020     		movs	r0, #0
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1780              		.loc 1 1868 0
 1781 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1782              	.LVL125:
 1783              	.L183:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 166


1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 1784              		.loc 1 1873 0
 1785 007e 6A6C     		ldr	r2, [r5, #68]
 1786 0080 42F40032 		orr	r2, r2, #131072
 1787 0084 6A64     		str	r2, [r5, #68]
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 1788              		.loc 1 1876 0
 1789 0086 4FF48072 		mov	r2, #256
 1790 008a 1A60     		str	r2, [r3]
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1791              		.loc 1 1921 0
 1792 008c 0020     		movs	r0, #0
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1793              		.loc 1 1877 0
 1794 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1795              	.LVL126:
 1796              	.L186:
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 1797              		.loc 1 1882 0
 1798 0090 6A6C     		ldr	r2, [r5, #68]
 1799 0092 42F48022 		orr	r2, r2, #262144
 1800 0096 6A64     		str	r2, [r5, #68]
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 1801              		.loc 1 1885 0
 1802 0098 4FF40072 		mov	r2, #512
 1803 009c 1A60     		str	r2, [r3]
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1804              		.loc 1 1921 0
 1805 009e 0020     		movs	r0, #0
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 1806              		.loc 1 1886 0
 1807 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1808              	.LVL127:
 1809              	.L182:
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1810              		.loc 1 1906 0
 1811 00a2 AA6B     		ldr	r2, [r5, #56]
 1812 00a4 012A     		cmp	r2, #1
 1813 00a6 03D0     		beq	.L192
 1814              	.L188:
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 1815              		.loc 1 1916 0
 1816 00a8 1022     		movs	r2, #16
 1817 00aa 1A60     		str	r2, [r3]
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1818              		.loc 1 1921 0
 1819 00ac 0020     		movs	r0, #0
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 1820              		.loc 1 1922 0
 1821 00ae F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1822              	.LVL128:
 1823              	.L192:
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1824              		.loc 1 1909 0
 1825 00b0 6A6C     		ldr	r2, [r5, #68]
 1826 00b2 42F48062 		orr	r2, r2, #1024
 1827 00b6 6A64     		str	r2, [r5, #68]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 167


1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 1828              		.loc 1 1912 0
 1829 00b8 AA6C     		ldr	r2, [r5, #72]
 1830 00ba 42F00202 		orr	r2, r2, #2
 1831 00be AA64     		str	r2, [r5, #72]
 1832 00c0 F2E7     		b	.L188
 1833              		.cfi_endproc
 1834              	.LFE129:
 1836              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 1837              		.align	1
 1838              		.global	HAL_ADC_Start_IT
 1839              		.syntax unified
 1840              		.thumb
 1841              		.thumb_func
 1842              		.fpu fpv4-sp-d16
 1844              	HAL_ADC_Start_IT:
 1845              	.LFB130:
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1846              		.loc 1 1999 0
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 0
 1849              		@ frame_needed = 0, uses_anonymous_args = 0
 1850              	.LVL129:
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1851              		.loc 1 2006 0
 1852 0000 0368     		ldr	r3, [r0]
 1853 0002 9B68     		ldr	r3, [r3, #8]
 1854 0004 13F0040F 		tst	r3, #4
 1855 0008 02D0     		beq	.L213
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 1856              		.loc 1 2118 0
 1857 000a 0223     		movs	r3, #2
 1858              	.L210:
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 1859              		.loc 1 2123 0
 1860 000c 1846     		mov	r0, r3
 1861              	.LVL130:
 1862 000e 7047     		bx	lr
 1863              	.LVL131:
 1864              	.L213:
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1865              		.loc 1 2009 0
 1866 0010 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 1867 0014 012B     		cmp	r3, #1
 1868 0016 01D1     		bne	.L214
 1869 0018 0223     		movs	r3, #2
 1870 001a F7E7     		b	.L210
 1871              	.L214:
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1872              		.loc 1 1999 0 discriminator 2
 1873 001c 10B5     		push	{r4, lr}
 1874              	.LCFI19:
 1875              		.cfi_def_cfa_offset 8
 1876              		.cfi_offset 4, -8
 1877              		.cfi_offset 14, -4
 1878 001e 0446     		mov	r4, r0
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 168


 1879              		.loc 1 2009 0 discriminator 2
 1880 0020 0123     		movs	r3, #1
 1881 0022 80F84030 		strb	r3, [r0, #64]
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 1882              		.loc 1 2012 0 discriminator 2
 1883 0026 FFF7FEFF 		bl	ADC_Enable
 1884              	.LVL132:
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 1885              		.loc 1 2015 0 discriminator 2
 1886 002a 0346     		mov	r3, r0
 1887 002c 0028     		cmp	r0, #0
 1888 002e 7CD1     		bne	.L195
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 1889              		.loc 1 2020 0
 1890 0030 626C     		ldr	r2, [r4, #68]
 1891 0032 22F47062 		bic	r2, r2, #3840
 1892 0036 22F00102 		bic	r2, r2, #1
 1893 003a 42F48072 		orr	r2, r2, #256
 1894 003e 6264     		str	r2, [r4, #68]
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1895              		.loc 1 2027 0
 1896 0040 3C4A     		ldr	r2, .L217
 1897 0042 9268     		ldr	r2, [r2, #8]
 1898 0044 12F01F0F 		tst	r2, #31
 1899 0048 43D0     		beq	.L196
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1900              		.loc 1 2027 0 is_stmt 0 discriminator 1
 1901 004a 2168     		ldr	r1, [r4]
 1902 004c B1F1A04F 		cmp	r1, #1342177280
 1903 0050 3FD0     		beq	.L196
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1904              		.loc 1 2042 0 is_stmt 1
 1905 0052 626C     		ldr	r2, [r4, #68]
 1906 0054 42F48012 		orr	r2, r2, #1048576
 1907 0058 6264     		str	r2, [r4, #68]
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1908              		.loc 1 2046 0
 1909 005a 374A     		ldr	r2, .L217+4
 1910 005c 9142     		cmp	r1, r2
 1911 005e 48D0     		beq	.L215
 1912              	.L198:
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1913              		.loc 1 2053 0
 1914 0060 626C     		ldr	r2, [r4, #68]
 1915 0062 12F4805F 		tst	r2, #4096
 1916 0066 51D0     		beq	.L199
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1917              		.loc 1 2056 0
 1918 0068 A26C     		ldr	r2, [r4, #72]
 1919 006a 22F00602 		bic	r2, r2, #6
 1920 006e A264     		str	r2, [r4, #72]
 1921              	.L200:
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 1922              		.loc 1 2067 0
 1923 0070 0022     		movs	r2, #0
 1924 0072 84F84020 		strb	r2, [r4, #64]
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 169


 1925              		.loc 1 2072 0
 1926 0076 2268     		ldr	r2, [r4]
 1927 0078 1C21     		movs	r1, #28
 1928 007a 1160     		str	r1, [r2]
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1929              		.loc 1 2076 0
 1930 007c 6269     		ldr	r2, [r4, #20]
 1931 007e 082A     		cmp	r2, #8
 1932 0080 47D1     		bne	.L208
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOS));
 1933              		.loc 1 2079 0
 1934 0082 2168     		ldr	r1, [r4]
 1935 0084 4A68     		ldr	r2, [r1, #4]
 1936 0086 22F00402 		bic	r2, r2, #4
 1937 008a 4A60     		str	r2, [r1, #4]
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
 1938              		.loc 1 2080 0
 1939 008c 2168     		ldr	r1, [r4]
 1940 008e 4A68     		ldr	r2, [r1, #4]
 1941 0090 42F00802 		orr	r2, r2, #8
 1942 0094 4A60     		str	r2, [r1, #4]
 1943              	.L203:
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1944              		.loc 1 2093 0
 1945 0096 A26B     		ldr	r2, [r4, #56]
 1946 0098 012A     		cmp	r2, #1
 1947 009a 40D0     		beq	.L216
 1948              	.L204:
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1949              		.loc 1 2105 0
 1950 009c 254A     		ldr	r2, .L217
 1951 009e 9268     		ldr	r2, [r2, #8]
 1952 00a0 12F01F0F 		tst	r2, #31
 1953 00a4 0FD0     		beq	.L205
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1954              		.loc 1 2105 0 is_stmt 0 discriminator 1
 1955 00a6 234A     		ldr	r2, .L217
 1956 00a8 9268     		ldr	r2, [r2, #8]
 1957 00aa 02F01F02 		and	r2, r2, #31
 1958 00ae 052A     		cmp	r2, #5
 1959 00b0 09D0     		beq	.L205
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1960              		.loc 1 2105 0 discriminator 2
 1961 00b2 204A     		ldr	r2, .L217
 1962 00b4 9268     		ldr	r2, [r2, #8]
 1963 00b6 02F01F02 		and	r2, r2, #31
 1964 00ba 092A     		cmp	r2, #9
 1965 00bc 03D0     		beq	.L205
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 1966              		.loc 1 2105 0 discriminator 3
 1967 00be 2268     		ldr	r2, [r4]
 1968 00c0 B2F1A04F 		cmp	r2, #1342177280
 1969 00c4 34D1     		bne	.L194
 1970              	.L205:
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 1971              		.loc 1 2107 0 is_stmt 1
 1972 00c6 2168     		ldr	r1, [r4]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 170


 1973 00c8 8A68     		ldr	r2, [r1, #8]
 1974 00ca 42F00402 		orr	r2, r2, #4
 1975 00ce 8A60     		str	r2, [r1, #8]
 1976 00d0 2EE0     		b	.L194
 1977              	.L196:
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 1978              		.loc 1 2030 0
 1979 00d2 626C     		ldr	r2, [r4, #68]
 1980 00d4 22F48012 		bic	r2, r2, #1048576
 1981 00d8 6264     		str	r2, [r4, #68]
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1982              		.loc 1 2034 0
 1983 00da 2268     		ldr	r2, [r4]
 1984 00dc D268     		ldr	r2, [r2, #12]
 1985 00de 12F0007F 		tst	r2, #33554432
 1986 00e2 BDD0     		beq	.L198
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 1987              		.loc 1 2036 0
 1988 00e4 626C     		ldr	r2, [r4, #68]
 1989 00e6 22F44052 		bic	r2, r2, #12288
 1990 00ea 42F48052 		orr	r2, r2, #4096
 1991 00ee 6264     		str	r2, [r4, #68]
 1992 00f0 B6E7     		b	.L198
 1993              	.L215:
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 1994              		.loc 1 2046 0 discriminator 3
 1995 00f2 4FF0A042 		mov	r2, #1342177280
 1996 00f6 D268     		ldr	r2, [r2, #12]
 1997 00f8 12F0007F 		tst	r2, #33554432
 1998 00fc B0D0     		beq	.L198
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 1999              		.loc 1 2048 0
 2000 00fe 626C     		ldr	r2, [r4, #68]
 2001 0100 22F44052 		bic	r2, r2, #12288
 2002 0104 42F48052 		orr	r2, r2, #4096
 2003 0108 6264     		str	r2, [r4, #68]
 2004 010a A9E7     		b	.L198
 2005              	.L199:
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2006              		.loc 1 2061 0
 2007 010c 0022     		movs	r2, #0
 2008 010e A264     		str	r2, [r4, #72]
 2009 0110 AEE7     		b	.L200
 2010              	.L208:
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
 2011              		.loc 1 2084 0
 2012 0112 2168     		ldr	r1, [r4]
 2013 0114 4A68     		ldr	r2, [r1, #4]
 2014 0116 42F00C02 		orr	r2, r2, #12
 2015 011a 4A60     		str	r2, [r1, #4]
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2016              		.loc 1 2085 0
 2017 011c BBE7     		b	.L203
 2018              	.L216:
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2019              		.loc 1 2095 0
 2020 011e 2168     		ldr	r1, [r4]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 171


 2021 0120 4A68     		ldr	r2, [r1, #4]
 2022 0122 22F01002 		bic	r2, r2, #16
 2023 0126 4A60     		str	r2, [r1, #4]
 2024 0128 B8E7     		b	.L204
 2025              	.L195:
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2026              		.loc 1 2113 0
 2027 012a 0022     		movs	r2, #0
 2028 012c 84F84020 		strb	r2, [r4, #64]
 2029              	.L194:
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2030              		.loc 1 2123 0
 2031 0130 1846     		mov	r0, r3
 2032              	.LVL133:
 2033 0132 10BD     		pop	{r4, pc}
 2034              	.LVL134:
 2035              	.L218:
 2036              		.align	2
 2037              	.L217:
 2038 0134 00030050 		.word	1342178048
 2039 0138 00010050 		.word	1342177536
 2040              		.cfi_endproc
 2041              	.LFE130:
 2043              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 2044              		.align	1
 2045              		.global	HAL_ADC_Stop_IT
 2046              		.syntax unified
 2047              		.thumb
 2048              		.thumb_func
 2049              		.fpu fpv4-sp-d16
 2051              	HAL_ADC_Stop_IT:
 2052              	.LFB131:
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2053              		.loc 1 2236 0
 2054              		.cfi_startproc
 2055              		@ args = 0, pretend = 0, frame = 0
 2056              		@ frame_needed = 0, uses_anonymous_args = 0
 2057              	.LVL135:
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2058              		.loc 1 2243 0
 2059 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2060 0004 012B     		cmp	r3, #1
 2061 0006 02D1     		bne	.L227
 2062 0008 0223     		movs	r3, #2
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2063              		.loc 1 2273 0
 2064 000a 1846     		mov	r0, r3
 2065              	.LVL136:
 2066 000c 7047     		bx	lr
 2067              	.LVL137:
 2068              	.L227:
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2069              		.loc 1 2236 0 discriminator 2
 2070 000e 10B5     		push	{r4, lr}
 2071              	.LCFI20:
 2072              		.cfi_def_cfa_offset 8
 2073              		.cfi_offset 4, -8
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 172


 2074              		.cfi_offset 14, -4
 2075 0010 0446     		mov	r4, r0
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2076              		.loc 1 2243 0 discriminator 2
 2077 0012 0123     		movs	r3, #1
 2078 0014 80F84030 		strb	r3, [r0, #64]
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2079              		.loc 1 2246 0 discriminator 2
 2080 0018 6C21     		movs	r1, #108
 2081 001a FFF7FEFF 		bl	ADC_ConversionStop
 2082              	.LVL138:
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2083              		.loc 1 2249 0 discriminator 2
 2084 001e 0346     		mov	r3, r0
 2085 0020 20B1     		cbz	r0, .L228
 2086              	.L221:
 2087              	.LVL139:
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2088              		.loc 1 2269 0
 2089 0022 0022     		movs	r2, #0
 2090 0024 84F84020 		strb	r2, [r4, #64]
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2091              		.loc 1 2273 0
 2092 0028 1846     		mov	r0, r3
 2093 002a 10BD     		pop	{r4, pc}
 2094              	.LVL140:
 2095              	.L228:
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2096              		.loc 1 2253 0
 2097 002c 2268     		ldr	r2, [r4]
 2098 002e 5368     		ldr	r3, [r2, #4]
 2099 0030 23F01C03 		bic	r3, r3, #28
 2100 0034 5360     		str	r3, [r2, #4]
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2101              		.loc 1 2256 0
 2102 0036 2046     		mov	r0, r4
 2103              	.LVL141:
 2104 0038 FFF7FEFF 		bl	ADC_Disable
 2105              	.LVL142:
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2106              		.loc 1 2259 0
 2107 003c 0346     		mov	r3, r0
 2108 003e 0028     		cmp	r0, #0
 2109 0040 EFD1     		bne	.L221
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2110              		.loc 1 2262 0
 2111 0042 626C     		ldr	r2, [r4, #68]
 2112 0044 22F48852 		bic	r2, r2, #4352
 2113 0048 22F00102 		bic	r2, r2, #1
 2114 004c 42F00102 		orr	r2, r2, #1
 2115 0050 6264     		str	r2, [r4, #68]
 2116 0052 E6E7     		b	.L221
 2117              		.cfi_endproc
 2118              	.LFE131:
 2120              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 2121              		.align	1
 2122              		.global	HAL_ADC_Start_DMA
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 173


 2123              		.syntax unified
 2124              		.thumb
 2125              		.thumb_func
 2126              		.fpu fpv4-sp-d16
 2128              	HAL_ADC_Start_DMA:
 2129              	.LFB132:
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2130              		.loc 1 2342 0
 2131              		.cfi_startproc
 2132              		@ args = 0, pretend = 0, frame = 0
 2133              		@ frame_needed = 0, uses_anonymous_args = 0
 2134              	.LVL143:
 2135 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2136              	.LCFI21:
 2137              		.cfi_def_cfa_offset 24
 2138              		.cfi_offset 3, -24
 2139              		.cfi_offset 4, -20
 2140              		.cfi_offset 5, -16
 2141              		.cfi_offset 6, -12
 2142              		.cfi_offset 7, -8
 2143              		.cfi_offset 14, -4
 2144              	.LVL144:
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2145              		.loc 1 2349 0
 2146 0002 0468     		ldr	r4, [r0]
 2147 0004 A468     		ldr	r4, [r4, #8]
 2148 0006 14F0040F 		tst	r4, #4
 2149 000a 02D0     		beq	.L241
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 2150              		.loc 1 2468 0
 2151 000c 0225     		movs	r5, #2
 2152              	.LVL145:
 2153              	.L230:
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2154              		.loc 1 2473 0
 2155 000e 2846     		mov	r0, r5
 2156 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2157              	.LVL146:
 2158              	.L241:
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2159              		.loc 1 2352 0
 2160 0012 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2161 0016 012B     		cmp	r3, #1
 2162 0018 7ED0     		beq	.L239
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2163              		.loc 1 2352 0 is_stmt 0 discriminator 2
 2164 001a 0123     		movs	r3, #1
 2165 001c 80F84030 		strb	r3, [r0, #64]
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2166              		.loc 1 2357 0 is_stmt 1 discriminator 2
 2167 0020 3E4B     		ldr	r3, .L244
 2168 0022 9B68     		ldr	r3, [r3, #8]
 2169 0024 13F01F0F 		tst	r3, #31
 2170 0028 04D0     		beq	.L242
 2171              	.LVL147:
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2172              		.loc 1 2463 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 174


 2173 002a 0023     		movs	r3, #0
 2174 002c 80F84030 		strb	r3, [r0, #64]
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2175              		.loc 1 2460 0
 2176 0030 0125     		movs	r5, #1
 2177 0032 ECE7     		b	.L230
 2178              	.LVL148:
 2179              	.L242:
 2180 0034 1746     		mov	r7, r2
 2181 0036 0E46     		mov	r6, r1
 2182 0038 0446     		mov	r4, r0
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2183              		.loc 1 2360 0
 2184 003a FFF7FEFF 		bl	ADC_Enable
 2185              	.LVL149:
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2186              		.loc 1 2363 0
 2187 003e 0546     		mov	r5, r0
 2188 0040 0028     		cmp	r0, #0
 2189 0042 65D1     		bne	.L232
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 2190              		.loc 1 2368 0
 2191 0044 636C     		ldr	r3, [r4, #68]
 2192 0046 23F47063 		bic	r3, r3, #3840
 2193 004a 23F00103 		bic	r3, r3, #1
 2194 004e 43F48073 		orr	r3, r3, #256
 2195 0052 6364     		str	r3, [r4, #68]
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2196              		.loc 1 2375 0
 2197 0054 314B     		ldr	r3, .L244
 2198 0056 9B68     		ldr	r3, [r3, #8]
 2199 0058 13F01F0F 		tst	r3, #31
 2200 005c 38D0     		beq	.L233
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2201              		.loc 1 2375 0 is_stmt 0 discriminator 1
 2202 005e 2268     		ldr	r2, [r4]
 2203 0060 B2F1A04F 		cmp	r2, #1342177280
 2204 0064 34D0     		beq	.L233
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 2205              		.loc 1 2390 0 is_stmt 1
 2206 0066 636C     		ldr	r3, [r4, #68]
 2207 0068 43F48013 		orr	r3, r3, #1048576
 2208 006c 6364     		str	r3, [r4, #68]
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 2209              		.loc 1 2394 0
 2210 006e 2C4B     		ldr	r3, .L244+4
 2211 0070 9A42     		cmp	r2, r3
 2212 0072 3DD0     		beq	.L243
 2213              	.L235:
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2214              		.loc 1 2401 0
 2215 0074 636C     		ldr	r3, [r4, #68]
 2216 0076 13F4805F 		tst	r3, #4096
 2217 007a 46D0     		beq	.L236
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 2218              		.loc 1 2404 0
 2219 007c A36C     		ldr	r3, [r4, #72]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 175


 2220 007e 23F00603 		bic	r3, r3, #6
 2221 0082 A364     		str	r3, [r4, #72]
 2222              	.L237:
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2223              		.loc 1 2415 0
 2224 0084 0023     		movs	r3, #0
 2225 0086 84F84030 		strb	r3, [r4, #64]
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 2226              		.loc 1 2419 0
 2227 008a E36B     		ldr	r3, [r4, #60]
 2228 008c 254A     		ldr	r2, .L244+8
 2229 008e 9A62     		str	r2, [r3, #40]
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2230              		.loc 1 2422 0
 2231 0090 E36B     		ldr	r3, [r4, #60]
 2232 0092 254A     		ldr	r2, .L244+12
 2233 0094 DA62     		str	r2, [r3, #44]
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 2234              		.loc 1 2425 0
 2235 0096 E36B     		ldr	r3, [r4, #60]
 2236 0098 244A     		ldr	r2, .L244+16
 2237 009a 1A63     		str	r2, [r3, #48]
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2238              		.loc 1 2434 0
 2239 009c 2368     		ldr	r3, [r4]
 2240 009e 1C22     		movs	r2, #28
 2241 00a0 1A60     		str	r2, [r3]
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2242              		.loc 1 2437 0
 2243 00a2 2268     		ldr	r2, [r4]
 2244 00a4 5368     		ldr	r3, [r2, #4]
 2245 00a6 43F01003 		orr	r3, r3, #16
 2246 00aa 5360     		str	r3, [r2, #4]
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2247              		.loc 1 2440 0
 2248 00ac 2268     		ldr	r2, [r4]
 2249 00ae D368     		ldr	r3, [r2, #12]
 2250 00b0 43F00103 		orr	r3, r3, #1
 2251 00b4 D360     		str	r3, [r2, #12]
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
 2252              		.loc 1 2443 0
 2253 00b6 2168     		ldr	r1, [r4]
 2254 00b8 3B46     		mov	r3, r7
 2255 00ba 3246     		mov	r2, r6
 2256 00bc 4031     		adds	r1, r1, #64
 2257 00be E06B     		ldr	r0, [r4, #60]
 2258              	.LVL150:
 2259 00c0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2260              	.LVL151:
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2261              		.loc 1 2449 0
 2262 00c4 2268     		ldr	r2, [r4]
 2263 00c6 9368     		ldr	r3, [r2, #8]
 2264 00c8 43F00403 		orr	r3, r3, #4
 2265 00cc 9360     		str	r3, [r2, #8]
 2266 00ce 9EE7     		b	.L230
 2267              	.LVL152:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 176


 2268              	.L233:
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 2269              		.loc 1 2378 0
 2270 00d0 636C     		ldr	r3, [r4, #68]
 2271 00d2 23F48013 		bic	r3, r3, #1048576
 2272 00d6 6364     		str	r3, [r4, #68]
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 2273              		.loc 1 2382 0
 2274 00d8 2368     		ldr	r3, [r4]
 2275 00da DB68     		ldr	r3, [r3, #12]
 2276 00dc 13F0007F 		tst	r3, #33554432
 2277 00e0 C8D0     		beq	.L235
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 2278              		.loc 1 2384 0
 2279 00e2 636C     		ldr	r3, [r4, #68]
 2280 00e4 23F44053 		bic	r3, r3, #12288
 2281 00e8 43F48053 		orr	r3, r3, #4096
 2282 00ec 6364     		str	r3, [r4, #68]
 2283 00ee C1E7     		b	.L235
 2284              	.L243:
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 2285              		.loc 1 2394 0 discriminator 3
 2286 00f0 4FF0A043 		mov	r3, #1342177280
 2287 00f4 DB68     		ldr	r3, [r3, #12]
 2288 00f6 13F0007F 		tst	r3, #33554432
 2289 00fa BBD0     		beq	.L235
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 2290              		.loc 1 2396 0
 2291 00fc 636C     		ldr	r3, [r4, #68]
 2292 00fe 23F44053 		bic	r3, r3, #12288
 2293 0102 43F48053 		orr	r3, r3, #4096
 2294 0106 6364     		str	r3, [r4, #68]
 2295 0108 B4E7     		b	.L235
 2296              	.L236:
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 2297              		.loc 1 2409 0
 2298 010a 0023     		movs	r3, #0
 2299 010c A364     		str	r3, [r4, #72]
 2300 010e B9E7     		b	.L237
 2301              	.L232:
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2302              		.loc 1 2455 0
 2303 0110 0023     		movs	r3, #0
 2304 0112 84F84030 		strb	r3, [r4, #64]
 2305 0116 7AE7     		b	.L230
 2306              	.LVL153:
 2307              	.L239:
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2308              		.loc 1 2352 0
 2309 0118 0225     		movs	r5, #2
 2310 011a 78E7     		b	.L230
 2311              	.L245:
 2312              		.align	2
 2313              	.L244:
 2314 011c 00030050 		.word	1342178048
 2315 0120 00010050 		.word	1342177536
 2316 0124 00000000 		.word	ADC_DMAConvCplt
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 177


 2317 0128 00000000 		.word	ADC_DMAHalfConvCplt
 2318 012c 00000000 		.word	ADC_DMAError
 2319              		.cfi_endproc
 2320              	.LFE132:
 2322              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 2323              		.align	1
 2324              		.global	HAL_ADC_Stop_DMA
 2325              		.syntax unified
 2326              		.thumb
 2327              		.thumb_func
 2328              		.fpu fpv4-sp-d16
 2330              	HAL_ADC_Stop_DMA:
 2331              	.LFB133:
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2332              		.loc 1 2613 0
 2333              		.cfi_startproc
 2334              		@ args = 0, pretend = 0, frame = 0
 2335              		@ frame_needed = 0, uses_anonymous_args = 0
 2336              	.LVL154:
 2337 0000 38B5     		push	{r3, r4, r5, lr}
 2338              	.LCFI22:
 2339              		.cfi_def_cfa_offset 16
 2340              		.cfi_offset 3, -16
 2341              		.cfi_offset 4, -12
 2342              		.cfi_offset 5, -8
 2343              		.cfi_offset 14, -4
 2344              	.LVL155:
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2345              		.loc 1 2620 0
 2346 0002 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2347 0006 012B     		cmp	r3, #1
 2348 0008 02D1     		bne	.L254
 2349 000a 0224     		movs	r4, #2
 2350              	.LVL156:
 2351              	.L247:
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2352              		.loc 1 2673 0
 2353 000c 2046     		mov	r0, r4
 2354 000e 38BD     		pop	{r3, r4, r5, pc}
 2355              	.LVL157:
 2356              	.L254:
 2357 0010 0546     		mov	r5, r0
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2358              		.loc 1 2620 0 discriminator 2
 2359 0012 0123     		movs	r3, #1
 2360 0014 80F84030 		strb	r3, [r0, #64]
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2361              		.loc 1 2623 0 discriminator 2
 2362 0018 6C21     		movs	r1, #108
 2363 001a FFF7FEFF 		bl	ADC_ConversionStop
 2364              	.LVL158:
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2365              		.loc 1 2626 0 discriminator 2
 2366 001e 0446     		mov	r4, r0
 2367 0020 18B1     		cbz	r0, .L255
 2368              	.LVL159:
 2369              	.L248:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 178


2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2370              		.loc 1 2669 0
 2371 0022 0023     		movs	r3, #0
 2372 0024 85F84030 		strb	r3, [r5, #64]
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2373              		.loc 1 2672 0
 2374 0028 F0E7     		b	.L247
 2375              	.LVL160:
 2376              	.L255:
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2377              		.loc 1 2629 0
 2378 002a 2A68     		ldr	r2, [r5]
 2379 002c D368     		ldr	r3, [r2, #12]
 2380 002e 23F00103 		bic	r3, r3, #1
 2381 0032 D360     		str	r3, [r2, #12]
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2382              		.loc 1 2633 0
 2383 0034 E86B     		ldr	r0, [r5, #60]
 2384              	.LVL161:
 2385 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 2386              	.LVL162:
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2387              		.loc 1 2636 0
 2388 003a 0446     		mov	r4, r0
 2389 003c 18B1     		cbz	r0, .L249
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2390              		.loc 1 2639 0
 2391 003e 6B6C     		ldr	r3, [r5, #68]
 2392 0040 43F04003 		orr	r3, r3, #64
 2393 0044 6B64     		str	r3, [r5, #68]
 2394              	.L249:
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2395              		.loc 1 2643 0
 2396 0046 2A68     		ldr	r2, [r5]
 2397 0048 5368     		ldr	r3, [r2, #4]
 2398 004a 23F01003 		bic	r3, r3, #16
 2399 004e 5360     		str	r3, [r2, #4]
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2400              		.loc 1 2648 0
 2401 0050 74B9     		cbnz	r4, .L250
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2402              		.loc 1 2650 0
 2403 0052 2846     		mov	r0, r5
 2404              	.LVL163:
 2405 0054 FFF7FEFF 		bl	ADC_Disable
 2406              	.LVL164:
 2407 0058 0446     		mov	r4, r0
 2408              	.LVL165:
 2409              	.L251:
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2410              		.loc 1 2658 0
 2411 005a 002C     		cmp	r4, #0
 2412 005c E1D1     		bne	.L248
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2413              		.loc 1 2661 0
 2414 005e 6B6C     		ldr	r3, [r5, #68]
 2415 0060 23F48853 		bic	r3, r3, #4352
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 179


 2416 0064 23F00103 		bic	r3, r3, #1
 2417 0068 43F00103 		orr	r3, r3, #1
 2418 006c 6B64     		str	r3, [r5, #68]
 2419 006e D8E7     		b	.L248
 2420              	.LVL166:
 2421              	.L250:
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2422              		.loc 1 2654 0
 2423 0070 2846     		mov	r0, r5
 2424              	.LVL167:
 2425 0072 FFF7FEFF 		bl	ADC_Disable
 2426              	.LVL168:
 2427 0076 F0E7     		b	.L251
 2428              		.cfi_endproc
 2429              	.LFE133:
 2431              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 2432              		.align	1
 2433              		.global	HAL_ADC_GetValue
 2434              		.syntax unified
 2435              		.thumb
 2436              		.thumb_func
 2437              		.fpu fpv4-sp-d16
 2439              	HAL_ADC_GetValue:
 2440              	.LFB134:
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 2441              		.loc 1 2763 0
 2442              		.cfi_startproc
 2443              		@ args = 0, pretend = 0, frame = 0
 2444              		@ frame_needed = 0, uses_anonymous_args = 0
 2445              		@ link register save eliminated.
 2446              	.LVL169:
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2447              		.loc 1 2771 0
 2448 0000 0368     		ldr	r3, [r0]
 2449 0002 186C     		ldr	r0, [r3, #64]
 2450              	.LVL170:
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2451              		.loc 1 2772 0
 2452 0004 7047     		bx	lr
 2453              		.cfi_endproc
 2454              	.LFE134:
 2456              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
 2457              		.align	1
 2458              		.global	HAL_ADCEx_Calibration_Start
 2459              		.syntax unified
 2460              		.thumb
 2461              		.thumb_func
 2462              		.fpu fpv4-sp-d16
 2464              	HAL_ADCEx_Calibration_Start:
 2465              	.LFB136:
3248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2466              		.loc 1 3248 0
 2467              		.cfi_startproc
 2468              		@ args = 0, pretend = 0, frame = 0
 2469              		@ frame_needed = 0, uses_anonymous_args = 0
 2470              	.LVL171:
 2471 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 180


 2472              	.LCFI23:
 2473              		.cfi_def_cfa_offset 16
 2474              		.cfi_offset 4, -16
 2475              		.cfi_offset 5, -12
 2476              		.cfi_offset 6, -8
 2477              		.cfi_offset 14, -4
 2478              	.LVL172:
3257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
 2479              		.loc 1 3257 0
 2480 0002 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2481 0006 012B     		cmp	r3, #1
 2482 0008 02D1     		bne	.L266
 2483 000a 0225     		movs	r5, #2
 2484              	.LVL173:
 2485              	.L258:
3315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2486              		.loc 1 3315 0
 2487 000c 2846     		mov	r0, r5
 2488 000e 70BD     		pop	{r4, r5, r6, pc}
 2489              	.LVL174:
 2490              	.L266:
 2491 0010 0E46     		mov	r6, r1
 2492 0012 0446     		mov	r4, r0
3257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
 2493              		.loc 1 3257 0 discriminator 2
 2494 0014 0123     		movs	r3, #1
 2495 0016 80F84030 		strb	r3, [r0, #64]
3262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2496              		.loc 1 3262 0 discriminator 2
 2497 001a FFF7FEFF 		bl	ADC_Disable
 2498              	.LVL175:
3265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2499              		.loc 1 3265 0 discriminator 2
 2500 001e 0546     		mov	r5, r0
 2501 0020 0028     		cmp	r0, #0
 2502 0022 31D1     		bne	.L264
3268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2503              		.loc 1 3268 0
 2504 0024 0123     		movs	r3, #1
 2505 0026 6364     		str	r3, [r4, #68]
3271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
 2506              		.loc 1 3271 0
 2507 0028 2268     		ldr	r2, [r4]
 2508 002a 9368     		ldr	r3, [r2, #8]
 2509 002c 23F08043 		bic	r3, r3, #1073741824
 2510 0030 9360     		str	r3, [r2, #8]
3272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2511              		.loc 1 3272 0
 2512 0032 012E     		cmp	r6, #1
 2513 0034 1BD0     		beq	.L267
 2514              	.L260:
3278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 2515              		.loc 1 3278 0
 2516 0036 2268     		ldr	r2, [r4]
 2517 0038 9368     		ldr	r3, [r2, #8]
 2518 003a 43F00043 		orr	r3, r3, #-2147483648
 2519 003e 9360     		str	r3, [r2, #8]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 181


3280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 2520              		.loc 1 3280 0
 2521 0040 FFF7FEFF 		bl	HAL_GetTick
 2522              	.LVL176:
 2523 0044 0646     		mov	r6, r0
 2524              	.LVL177:
 2525              	.L261:
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2526              		.loc 1 3283 0
 2527 0046 2368     		ldr	r3, [r4]
 2528 0048 9B68     		ldr	r3, [r3, #8]
 2529 004a 002B     		cmp	r3, #0
 2530 004c 15DA     		bge	.L268
3285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2531              		.loc 1 3285 0
 2532 004e FFF7FEFF 		bl	HAL_GetTick
 2533              	.LVL178:
 2534 0052 801B     		subs	r0, r0, r6
 2535 0054 0A28     		cmp	r0, #10
 2536 0056 F6D9     		bls	.L261
3288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 2537              		.loc 1 3288 0
 2538 0058 636C     		ldr	r3, [r4, #68]
 2539 005a 23F01203 		bic	r3, r3, #18
 2540 005e 43F01003 		orr	r3, r3, #16
 2541 0062 6364     		str	r3, [r4, #68]
3293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2542              		.loc 1 3293 0
 2543 0064 0023     		movs	r3, #0
 2544 0066 84F84030 		strb	r3, [r4, #64]
3295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2545              		.loc 1 3295 0
 2546 006a 0125     		movs	r5, #1
 2547 006c CEE7     		b	.L258
 2548              	.LVL179:
 2549              	.L267:
3274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2550              		.loc 1 3274 0
 2551 006e 2268     		ldr	r2, [r4]
 2552 0070 9368     		ldr	r3, [r2, #8]
 2553 0072 43F08043 		orr	r3, r3, #1073741824
 2554 0076 9360     		str	r3, [r2, #8]
 2555 0078 DDE7     		b	.L260
 2556              	.LVL180:
 2557              	.L268:
3300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 2558              		.loc 1 3300 0
 2559 007a 636C     		ldr	r3, [r4, #68]
 2560 007c 23F00303 		bic	r3, r3, #3
 2561 0080 43F00103 		orr	r3, r3, #1
 2562 0084 6364     		str	r3, [r4, #68]
 2563 0086 00E0     		b	.L259
 2564              	.LVL181:
 2565              	.L264:
3307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 2566              		.loc 1 3307 0
 2567 0088 0125     		movs	r5, #1
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 182


 2568              	.LVL182:
 2569              	.L259:
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2570              		.loc 1 3311 0
 2571 008a 0023     		movs	r3, #0
 2572 008c 84F84030 		strb	r3, [r4, #64]
3314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2573              		.loc 1 3314 0
 2574 0090 BCE7     		b	.L258
 2575              		.cfi_endproc
 2576              	.LFE136:
 2578              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 2579              		.align	1
 2580              		.global	HAL_ADCEx_Calibration_GetValue
 2581              		.syntax unified
 2582              		.thumb
 2583              		.thumb_func
 2584              		.fpu fpv4-sp-d16
 2586              	HAL_ADCEx_Calibration_GetValue:
 2587              	.LFB137:
3442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 2588              		.loc 1 3442 0
 2589              		.cfi_startproc
 2590              		@ args = 0, pretend = 0, frame = 0
 2591              		@ frame_needed = 0, uses_anonymous_args = 0
 2592              		@ link register save eliminated.
 2593              	.LVL183:
3448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2594              		.loc 1 3448 0
 2595 0000 0129     		cmp	r1, #1
 2596 0002 05D0     		beq	.L272
3454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 2597              		.loc 1 3454 0
 2598 0004 0368     		ldr	r3, [r0]
 2599 0006 D3F8B400 		ldr	r0, [r3, #180]
 2600              	.LVL184:
 2601 000a 00F07F00 		and	r0, r0, #127
3456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2602              		.loc 1 3456 0
 2603 000e 7047     		bx	lr
 2604              	.LVL185:
 2605              	.L272:
3450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 2606              		.loc 1 3450 0
 2607 0010 0368     		ldr	r3, [r0]
 2608 0012 D3F8B400 		ldr	r0, [r3, #180]
 2609              	.LVL186:
 2610 0016 000C     		lsrs	r0, r0, #16
 2611 0018 7047     		bx	lr
 2612              		.cfi_endproc
 2613              	.LFE137:
 2615              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 2616              		.align	1
 2617              		.global	HAL_ADCEx_Calibration_SetValue
 2618              		.syntax unified
 2619              		.thumb
 2620              		.thumb_func
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 183


 2621              		.fpu fpv4-sp-d16
 2623              	HAL_ADCEx_Calibration_SetValue:
 2624              	.LFB138:
3477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2625              		.loc 1 3477 0
 2626              		.cfi_startproc
 2627              		@ args = 0, pretend = 0, frame = 0
 2628              		@ frame_needed = 0, uses_anonymous_args = 0
 2629              		@ link register save eliminated.
 2630              	.LVL187:
3486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2631              		.loc 1 3486 0
 2632 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2633 0004 012B     		cmp	r3, #1
 2634 0006 39D0     		beq	.L279
3477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2635              		.loc 1 3477 0 discriminator 2
 2636 0008 10B4     		push	{r4}
 2637              	.LCFI24:
 2638              		.cfi_def_cfa_offset 4
 2639              		.cfi_offset 4, -4
3486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2640              		.loc 1 3486 0 discriminator 2
 2641 000a 0123     		movs	r3, #1
 2642 000c 80F84030 		strb	r3, [r0, #64]
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 2643              		.loc 1 3490 0 discriminator 2
 2644 0010 0468     		ldr	r4, [r0]
 2645 0012 A368     		ldr	r3, [r4, #8]
 2646 0014 03F00303 		and	r3, r3, #3
 2647 0018 012B     		cmp	r3, #1
 2648 001a 0FD0     		beq	.L286
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 2649              		.loc 1 3490 0 is_stmt 0
 2650 001c 0023     		movs	r3, #0
 2651              	.L275:
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 2652              		.loc 1 3490 0 discriminator 6
 2653 001e F3B1     		cbz	r3, .L276
3491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2654              		.loc 1 3491 0 is_stmt 1 discriminator 7
 2655 0020 A368     		ldr	r3, [r4, #8]
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 2656              		.loc 1 3490 0 discriminator 7
 2657 0022 13F00C0F 		tst	r3, #12
 2658 0026 1AD1     		bne	.L276
3494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2659              		.loc 1 3494 0
 2660 0028 0129     		cmp	r1, #1
 2661 002a 0FD0     		beq	.L287
3502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_CALFACT_S  ,
 2662              		.loc 1 3502 0
 2663 002c D4F8B430 		ldr	r3, [r4, #180]
 2664 0030 23F07F03 		bic	r3, r3, #127
 2665 0034 1A43     		orrs	r2, r2, r3
 2666              	.LVL188:
 2667 0036 C4F8B420 		str	r2, [r4, #180]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 184


 2668 003a 18E0     		b	.L278
 2669              	.LVL189:
 2670              	.L286:
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 2671              		.loc 1 3490 0 discriminator 1
 2672 003c 2368     		ldr	r3, [r4]
 2673 003e 13F0010F 		tst	r3, #1
 2674 0042 01D1     		bne	.L281
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 2675              		.loc 1 3490 0 is_stmt 0
 2676 0044 0023     		movs	r3, #0
 2677 0046 EAE7     		b	.L275
 2678              	.L281:
 2679 0048 0123     		movs	r3, #1
 2680 004a E8E7     		b	.L275
 2681              	.L287:
3496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_CALFACT_D                  ,
 2682              		.loc 1 3496 0 is_stmt 1
 2683 004c D4F8B430 		ldr	r3, [r4, #180]
 2684 0050 23F4FE03 		bic	r3, r3, #8323072
 2685 0054 43EA0242 		orr	r2, r3, r2, lsl #16
 2686              	.LVL190:
 2687 0058 C4F8B420 		str	r2, [r4, #180]
 2688 005c 07E0     		b	.L278
 2689              	.LVL191:
 2690              	.L276:
3510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2691              		.loc 1 3510 0
 2692 005e 436C     		ldr	r3, [r0, #68]
 2693 0060 43F02003 		orr	r3, r3, #32
 2694 0064 4364     		str	r3, [r0, #68]
3513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 2695              		.loc 1 3513 0
 2696 0066 836C     		ldr	r3, [r0, #72]
 2697 0068 43F00103 		orr	r3, r3, #1
 2698 006c 8364     		str	r3, [r0, #72]
 2699              	.LVL192:
 2700              	.L278:
3517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2701              		.loc 1 3517 0
 2702 006e 0023     		movs	r3, #0
 2703 0070 80F84030 		strb	r3, [r0, #64]
3520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2704              		.loc 1 3520 0
 2705 0074 1846     		mov	r0, r3
 2706              	.LVL193:
3521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2707              		.loc 1 3521 0
 2708 0076 5DF8044B 		ldr	r4, [sp], #4
 2709              	.LCFI25:
 2710              		.cfi_restore 4
 2711              		.cfi_def_cfa_offset 0
 2712 007a 7047     		bx	lr
 2713              	.LVL194:
 2714              	.L279:
3486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2715              		.loc 1 3486 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 185


 2716 007c 0220     		movs	r0, #2
 2717              	.LVL195:
 2718 007e 7047     		bx	lr
 2719              		.cfi_endproc
 2720              	.LFE138:
 2722              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 2723              		.align	1
 2724              		.global	HAL_ADCEx_InjectedStart
 2725              		.syntax unified
 2726              		.thumb
 2727              		.thumb_func
 2728              		.fpu fpv4-sp-d16
 2730              	HAL_ADCEx_InjectedStart:
 2731              	.LFB139:
3542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2732              		.loc 1 3542 0
 2733              		.cfi_startproc
 2734              		@ args = 0, pretend = 0, frame = 0
 2735              		@ frame_needed = 0, uses_anonymous_args = 0
 2736              	.LVL196:
3549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2737              		.loc 1 3549 0
 2738 0000 0368     		ldr	r3, [r0]
 2739 0002 9B68     		ldr	r3, [r3, #8]
 2740 0004 13F0080F 		tst	r3, #8
 2741 0008 02D0     		beq	.L302
3620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 2742              		.loc 1 3620 0
 2743 000a 0223     		movs	r3, #2
 2744              	.L299:
3625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2745              		.loc 1 3625 0
 2746 000c 1846     		mov	r0, r3
 2747              	.LVL197:
 2748 000e 7047     		bx	lr
 2749              	.LVL198:
 2750              	.L302:
3552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2751              		.loc 1 3552 0
 2752 0010 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2753 0014 012B     		cmp	r3, #1
 2754 0016 01D1     		bne	.L303
 2755 0018 0223     		movs	r3, #2
 2756 001a F7E7     		b	.L299
 2757              	.L303:
3542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2758              		.loc 1 3542 0 discriminator 2
 2759 001c 10B5     		push	{r4, lr}
 2760              	.LCFI26:
 2761              		.cfi_def_cfa_offset 8
 2762              		.cfi_offset 4, -8
 2763              		.cfi_offset 14, -4
 2764 001e 0446     		mov	r4, r0
3552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2765              		.loc 1 3552 0 discriminator 2
 2766 0020 0123     		movs	r3, #1
 2767 0022 80F84030 		strb	r3, [r0, #64]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 186


3555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2768              		.loc 1 3555 0 discriminator 2
 2769 0026 FFF7FEFF 		bl	ADC_Enable
 2770              	.LVL199:
3558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2771              		.loc 1 3558 0 discriminator 2
 2772 002a 0346     		mov	r3, r0
 2773 002c 0028     		cmp	r0, #0
 2774 002e 43D1     		bne	.L290
3563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 2775              		.loc 1 3563 0
 2776 0030 626C     		ldr	r2, [r4, #68]
 2777 0032 22F44052 		bic	r2, r2, #12288
 2778 0036 22F00102 		bic	r2, r2, #1
 2779 003a 42F48052 		orr	r2, r2, #4096
 2780 003e 6264     		str	r2, [r4, #68]
3569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2781              		.loc 1 3569 0
 2782 0040 204A     		ldr	r2, .L304
 2783 0042 9268     		ldr	r2, [r2, #8]
 2784 0044 12F01F0F 		tst	r2, #31
 2785 0048 08D0     		beq	.L291
3569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2786              		.loc 1 3569 0 is_stmt 0 discriminator 1
 2787 004a 2268     		ldr	r2, [r4]
 2788 004c B2F1A04F 		cmp	r2, #1342177280
 2789 0050 04D0     		beq	.L291
3575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2790              		.loc 1 3575 0 is_stmt 1
 2791 0052 626C     		ldr	r2, [r4, #68]
 2792 0054 42F48012 		orr	r2, r2, #1048576
 2793 0058 6264     		str	r2, [r4, #68]
 2794 005a 03E0     		b	.L293
 2795              	.L291:
3571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2796              		.loc 1 3571 0
 2797 005c 626C     		ldr	r2, [r4, #68]
 2798 005e 22F48012 		bic	r2, r2, #1048576
 2799 0062 6264     		str	r2, [r4, #68]
 2800              	.L293:
3582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2801              		.loc 1 3582 0
 2802 0064 626C     		ldr	r2, [r4, #68]
 2803 0066 12F4807F 		tst	r2, #256
 2804 006a 01D1     		bne	.L294
3585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2805              		.loc 1 3585 0
 2806 006c 0022     		movs	r2, #0
 2807 006e A264     		str	r2, [r4, #72]
 2808              	.L294:
3591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2809              		.loc 1 3591 0
 2810 0070 0022     		movs	r2, #0
 2811 0072 84F84020 		strb	r2, [r4, #64]
3596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2812              		.loc 1 3596 0
 2813 0076 2268     		ldr	r2, [r4]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 187


 2814 0078 6021     		movs	r1, #96
 2815 007a 1160     		str	r1, [r2]
3606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 2816              		.loc 1 3606 0
 2817 007c 2268     		ldr	r2, [r4]
 2818 007e D168     		ldr	r1, [r2, #12]
 2819 0080 11F0007F 		tst	r1, #33554432
 2820 0084 1BD1     		bne	.L289
3607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2821              		.loc 1 3607 0 discriminator 1
 2822 0086 0F49     		ldr	r1, .L304
 2823 0088 8968     		ldr	r1, [r1, #8]
3606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 2824              		.loc 1 3606 0 discriminator 1
 2825 008a 11F01F0F 		tst	r1, #31
 2826 008e 0ED0     		beq	.L295
3607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2827              		.loc 1 3607 0
 2828 0090 0C49     		ldr	r1, .L304
 2829 0092 8968     		ldr	r1, [r1, #8]
 2830 0094 01F01F01 		and	r1, r1, #31
 2831 0098 0629     		cmp	r1, #6
 2832 009a 08D0     		beq	.L295
3607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2833              		.loc 1 3607 0 is_stmt 0 discriminator 1
 2834 009c 0949     		ldr	r1, .L304
 2835 009e 8968     		ldr	r1, [r1, #8]
 2836 00a0 01F01F01 		and	r1, r1, #31
 2837 00a4 0729     		cmp	r1, #7
 2838 00a6 02D0     		beq	.L295
3607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2839              		.loc 1 3607 0 discriminator 2
 2840 00a8 B2F1A04F 		cmp	r2, #1342177280
 2841 00ac 07D1     		bne	.L289
 2842              	.L295:
3609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2843              		.loc 1 3609 0 is_stmt 1
 2844 00ae 9168     		ldr	r1, [r2, #8]
 2845 00b0 41F00801 		orr	r1, r1, #8
 2846 00b4 9160     		str	r1, [r2, #8]
 2847 00b6 02E0     		b	.L289
 2848              	.L290:
3615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 2849              		.loc 1 3615 0
 2850 00b8 0022     		movs	r2, #0
 2851 00ba 84F84020 		strb	r2, [r4, #64]
 2852              	.L289:
3625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2853              		.loc 1 3625 0
 2854 00be 1846     		mov	r0, r3
 2855              	.LVL200:
 2856 00c0 10BD     		pop	{r4, pc}
 2857              	.LVL201:
 2858              	.L305:
 2859 00c2 00BF     		.align	2
 2860              	.L304:
 2861 00c4 00030050 		.word	1342178048
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 188


 2862              		.cfi_endproc
 2863              	.LFE139:
 2865              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 2866              		.align	1
 2867              		.global	HAL_ADCEx_InjectedStop
 2868              		.syntax unified
 2869              		.thumb
 2870              		.thumb_func
 2871              		.fpu fpv4-sp-d16
 2873              	HAL_ADCEx_InjectedStop:
 2874              	.LFB140:
3730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2875              		.loc 1 3730 0
 2876              		.cfi_startproc
 2877              		@ args = 0, pretend = 0, frame = 0
 2878              		@ frame_needed = 0, uses_anonymous_args = 0
 2879              	.LVL202:
3737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2880              		.loc 1 3737 0
 2881 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2882 0004 012B     		cmp	r3, #1
 2883 0006 36D0     		beq	.L311
3730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2884              		.loc 1 3730 0 discriminator 2
 2885 0008 10B5     		push	{r4, lr}
 2886              	.LCFI27:
 2887              		.cfi_def_cfa_offset 8
 2888              		.cfi_offset 4, -8
 2889              		.cfi_offset 14, -4
 2890 000a 0446     		mov	r4, r0
3737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2891              		.loc 1 3737 0 discriminator 2
 2892 000c 0123     		movs	r3, #1
 2893 000e 80F84030 		strb	r3, [r0, #64]
3750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2894              		.loc 1 3750 0 discriminator 2
 2895 0012 0368     		ldr	r3, [r0]
 2896 0014 DB68     		ldr	r3, [r3, #12]
 2897 0016 13F0007F 		tst	r3, #33554432
 2898 001a 09D0     		beq	.L316
3787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 2899              		.loc 1 3787 0
 2900 001c 436C     		ldr	r3, [r0, #68]
 2901 001e 43F02003 		orr	r3, r3, #32
 2902 0022 4364     		str	r3, [r0, #68]
 2903              	.LVL203:
3789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 2904              		.loc 1 3789 0
 2905 0024 0123     		movs	r3, #1
 2906              	.LVL204:
 2907              	.L309:
3793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2908              		.loc 1 3793 0
 2909 0026 0022     		movs	r2, #0
 2910 0028 84F84020 		strb	r2, [r4, #64]
3797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2911              		.loc 1 3797 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 189


 2912 002c 1846     		mov	r0, r3
 2913 002e 10BD     		pop	{r4, pc}
 2914              	.LVL205:
 2915              	.L316:
3753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 2916              		.loc 1 3753 0
 2917 0030 6021     		movs	r1, #96
 2918 0032 FFF7FEFF 		bl	ADC_ConversionStop
 2919              	.LVL206:
3758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {      
 2920              		.loc 1 3758 0
 2921 0036 0346     		mov	r3, r0
 2922 0038 0028     		cmp	r0, #0
 2923 003a F4D1     		bne	.L309
3760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
 2924              		.loc 1 3760 0
 2925 003c 2268     		ldr	r2, [r4]
 2926 003e 9268     		ldr	r2, [r2, #8]
 2927 0040 12F0040F 		tst	r2, #4
 2928 0044 03D1     		bne	.L310
3761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 2929              		.loc 1 3761 0 discriminator 1
 2930 0046 626C     		ldr	r2, [r4, #68]
3760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
 2931              		.loc 1 3760 0 discriminator 1
 2932 0048 12F4807F 		tst	r2, #256
 2933 004c 04D0     		beq	.L317
 2934              	.L310:
3780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 2935              		.loc 1 3780 0
 2936 004e 626C     		ldr	r2, [r4, #68]
 2937 0050 22F48052 		bic	r2, r2, #4096
 2938 0054 6264     		str	r2, [r4, #68]
 2939 0056 E6E7     		b	.L309
 2940              	.L317:
3764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 2941              		.loc 1 3764 0
 2942 0058 2046     		mov	r0, r4
 2943              	.LVL207:
 2944 005a FFF7FEFF 		bl	ADC_Disable
 2945              	.LVL208:
3767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 2946              		.loc 1 3767 0
 2947 005e 0346     		mov	r3, r0
 2948 0060 0028     		cmp	r0, #0
 2949 0062 E0D1     		bne	.L309
3770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 2950              		.loc 1 3770 0
 2951 0064 626C     		ldr	r2, [r4, #68]
 2952 0066 22F48852 		bic	r2, r2, #4352
 2953 006a 22F00102 		bic	r2, r2, #1
 2954 006e 42F00102 		orr	r2, r2, #1
 2955 0072 6264     		str	r2, [r4, #68]
 2956 0074 D7E7     		b	.L309
 2957              	.LVL209:
 2958              	.L311:
 2959              	.LCFI28:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 190


 2960              		.cfi_def_cfa_offset 0
 2961              		.cfi_restore 4
 2962              		.cfi_restore 14
3737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 2963              		.loc 1 3737 0
 2964 0076 0223     		movs	r3, #2
3797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 2965              		.loc 1 3797 0
 2966 0078 1846     		mov	r0, r3
 2967              	.LVL210:
 2968 007a 7047     		bx	lr
 2969              		.cfi_endproc
 2970              	.LFE140:
 2972              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 2973              		.align	1
 2974              		.global	HAL_ADCEx_InjectedPollForConversion
 2975              		.syntax unified
 2976              		.thumb
 2977              		.thumb_func
 2978              		.fpu fpv4-sp-d16
 2980              	HAL_ADCEx_InjectedPollForConversion:
 2981              	.LFB141:
3873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
 2982              		.loc 1 3873 0
 2983              		.cfi_startproc
 2984              		@ args = 0, pretend = 0, frame = 0
 2985              		@ frame_needed = 0, uses_anonymous_args = 0
 2986              	.LVL211:
 2987 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2988              	.LCFI29:
 2989              		.cfi_def_cfa_offset 24
 2990              		.cfi_offset 4, -24
 2991              		.cfi_offset 5, -20
 2992              		.cfi_offset 6, -16
 2993              		.cfi_offset 7, -12
 2994              		.cfi_offset 8, -8
 2995              		.cfi_offset 14, -4
 2996 0004 0446     		mov	r4, r0
 2997 0006 0D46     		mov	r5, r1
 2998              	.LVL212:
3882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 2999              		.loc 1 3882 0
 3000 0008 4369     		ldr	r3, [r0, #20]
 3001 000a 082B     		cmp	r3, #8
 3002 000c 0DD0     		beq	.L333
3889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3003              		.loc 1 3889 0
 3004 000e 6026     		movs	r6, #96
 3005              	.L319:
 3006              	.LVL213:
3895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3007              		.loc 1 3895 0
 3008 0010 294B     		ldr	r3, .L335
 3009 0012 9B68     		ldr	r3, [r3, #8]
 3010 0014 13F01F0F 		tst	r3, #31
 3011 0018 09D0     		beq	.L320
3895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 191


 3012              		.loc 1 3895 0 is_stmt 0 discriminator 1
 3013 001a 2368     		ldr	r3, [r4]
 3014 001c B3F1A04F 		cmp	r3, #1342177280
 3015 0020 05D0     		beq	.L320
3901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3016              		.loc 1 3901 0 is_stmt 1
 3017 0022 4FF0A043 		mov	r3, #1342177280
 3018 0026 DF68     		ldr	r7, [r3, #12]
 3019              	.LVL214:
 3020 0028 03E0     		b	.L322
 3021              	.LVL215:
 3022              	.L333:
3884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3023              		.loc 1 3884 0
 3024 002a 4026     		movs	r6, #64
 3025 002c F0E7     		b	.L319
 3026              	.LVL216:
 3027              	.L320:
3897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3028              		.loc 1 3897 0
 3029 002e 2368     		ldr	r3, [r4]
 3030 0030 DF68     		ldr	r7, [r3, #12]
 3031              	.LVL217:
 3032              	.L322:
3905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
 3033              		.loc 1 3905 0
 3034 0032 FFF7FEFF 		bl	HAL_GetTick
 3035              	.LVL218:
 3036 0036 8046     		mov	r8, r0
 3037              	.LVL219:
 3038              	.L324:
3908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3039              		.loc 1 3908 0
 3040 0038 2368     		ldr	r3, [r4]
 3041 003a 1A68     		ldr	r2, [r3]
 3042 003c 1642     		tst	r6, r2
 3043 003e 13D1     		bne	.L334
3911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3044              		.loc 1 3911 0
 3045 0040 B5F1FF3F 		cmp	r5, #-1
 3046 0044 F8D0     		beq	.L324
3913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3047              		.loc 1 3913 0
 3048 0046 2DB1     		cbz	r5, .L325
3913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3049              		.loc 1 3913 0 is_stmt 0 discriminator 1
 3050 0048 FFF7FEFF 		bl	HAL_GetTick
 3051              	.LVL220:
 3052 004c A0EB0800 		sub	r0, r0, r8
 3053 0050 8542     		cmp	r5, r0
 3054 0052 F1D2     		bcs	.L324
 3055              	.L325:
3916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 3056              		.loc 1 3916 0 is_stmt 1
 3057 0054 636C     		ldr	r3, [r4, #68]
 3058 0056 43F00403 		orr	r3, r3, #4
 3059 005a 6364     		str	r3, [r4, #68]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 192


3919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 3060              		.loc 1 3919 0
 3061 005c 0023     		movs	r3, #0
 3062 005e 84F84030 		strb	r3, [r4, #64]
3921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3063              		.loc 1 3921 0
 3064 0062 0320     		movs	r0, #3
 3065 0064 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3066              	.LVL221:
 3067              	.L334:
3927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3068              		.loc 1 3927 0
 3069 0068 626C     		ldr	r2, [r4, #68]
 3070 006a 42F40052 		orr	r2, r2, #8192
 3071 006e 6264     		str	r2, [r4, #68]
3932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 3072              		.loc 1 3932 0
 3073 0070 DA6C     		ldr	r2, [r3, #76]
 3074 0072 12F0C00F 		tst	r2, #192
 3075 0076 09D0     		beq	.L328
3932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 3076              		.loc 1 3932 0 is_stmt 0 discriminator 1
 3077 0078 17F0007F 		tst	r7, #33554432
 3078 007c 12D1     		bne	.L329
3934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
 3079              		.loc 1 3934 0 is_stmt 1
 3080 007e DA68     		ldr	r2, [r3, #12]
3933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
 3081              		.loc 1 3933 0
 3082 0080 12F4406F 		tst	r2, #3072
 3083 0084 0ED1     		bne	.L329
3934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
 3084              		.loc 1 3934 0
 3085 0086 17F4005F 		tst	r7, #8192
 3086 008a 0BD1     		bne	.L329
 3087              	.L328:
3938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3088              		.loc 1 3938 0
 3089 008c 626C     		ldr	r2, [r4, #68]
 3090 008e 22F48052 		bic	r2, r2, #4096
 3091 0092 6264     		str	r2, [r4, #68]
3940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3092              		.loc 1 3940 0
 3093 0094 626C     		ldr	r2, [r4, #68]
 3094 0096 12F4807F 		tst	r2, #256
 3095 009a 03D1     		bne	.L329
3942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 3096              		.loc 1 3942 0
 3097 009c 626C     		ldr	r2, [r4, #68]
 3098 009e 42F00102 		orr	r2, r2, #1
 3099 00a2 6264     		str	r2, [r4, #68]
 3100              	.L329:
3949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3101              		.loc 1 3949 0
 3102 00a4 17F4804F 		tst	r7, #16384
 3103 00a8 03D1     		bne	.L331
3953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 193


 3104              		.loc 1 3953 0
 3105 00aa 1E60     		str	r6, [r3]
3957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3106              		.loc 1 3957 0
 3107 00ac 0020     		movs	r0, #0
 3108 00ae BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3109              	.LVL222:
 3110              	.L331:
 3111 00b2 0020     		movs	r0, #0
3958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3112              		.loc 1 3958 0
 3113 00b4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3114              	.LVL223:
 3115              	.L336:
 3116              		.align	2
 3117              	.L335:
 3118 00b8 00030050 		.word	1342178048
 3119              		.cfi_endproc
 3120              	.LFE141:
 3122              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 3123              		.align	1
 3124              		.global	HAL_ADCEx_InjectedStart_IT
 3125              		.syntax unified
 3126              		.thumb
 3127              		.thumb_func
 3128              		.fpu fpv4-sp-d16
 3130              	HAL_ADCEx_InjectedStart_IT:
 3131              	.LFB142:
4100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3132              		.loc 1 4100 0
 3133              		.cfi_startproc
 3134              		@ args = 0, pretend = 0, frame = 0
 3135              		@ frame_needed = 0, uses_anonymous_args = 0
 3136              	.LVL224:
4107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3137              		.loc 1 4107 0
 3138 0000 0368     		ldr	r3, [r0]
 3139 0002 9B68     		ldr	r3, [r3, #8]
 3140 0004 13F0080F 		tst	r3, #8
 3141 0008 02D0     		beq	.L356
4199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3142              		.loc 1 4199 0
 3143 000a 0223     		movs	r3, #2
 3144              	.L353:
4204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3145              		.loc 1 4204 0
 3146 000c 1846     		mov	r0, r3
 3147              	.LVL225:
 3148 000e 7047     		bx	lr
 3149              	.LVL226:
 3150              	.L356:
4110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3151              		.loc 1 4110 0
 3152 0010 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3153 0014 012B     		cmp	r3, #1
 3154 0016 01D1     		bne	.L357
 3155 0018 0223     		movs	r3, #2
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 194


 3156 001a F7E7     		b	.L353
 3157              	.L357:
4100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3158              		.loc 1 4100 0 discriminator 2
 3159 001c 10B5     		push	{r4, lr}
 3160              	.LCFI30:
 3161              		.cfi_def_cfa_offset 8
 3162              		.cfi_offset 4, -8
 3163              		.cfi_offset 14, -4
 3164 001e 0446     		mov	r4, r0
4110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3165              		.loc 1 4110 0 discriminator 2
 3166 0020 0123     		movs	r3, #1
 3167 0022 80F84030 		strb	r3, [r0, #64]
4113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3168              		.loc 1 4113 0 discriminator 2
 3169 0026 FFF7FEFF 		bl	ADC_Enable
 3170              	.LVL227:
4117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3171              		.loc 1 4117 0 discriminator 2
 3172 002a 0346     		mov	r3, r0
 3173 002c 0028     		cmp	r0, #0
 3174 002e 5FD1     		bne	.L339
4122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 3175              		.loc 1 4122 0
 3176 0030 626C     		ldr	r2, [r4, #68]
 3177 0032 22F44052 		bic	r2, r2, #12288
 3178 0036 22F00102 		bic	r2, r2, #1
 3179 003a 42F48052 		orr	r2, r2, #4096
 3180 003e 6264     		str	r2, [r4, #68]
4128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3181              		.loc 1 4128 0
 3182 0040 2E4A     		ldr	r2, .L358
 3183 0042 9268     		ldr	r2, [r2, #8]
 3184 0044 12F01F0F 		tst	r2, #31
 3185 0048 08D0     		beq	.L340
4128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3186              		.loc 1 4128 0 is_stmt 0 discriminator 1
 3187 004a 2268     		ldr	r2, [r4]
 3188 004c B2F1A04F 		cmp	r2, #1342177280
 3189 0050 04D0     		beq	.L340
4134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3190              		.loc 1 4134 0 is_stmt 1
 3191 0052 626C     		ldr	r2, [r4, #68]
 3192 0054 42F48012 		orr	r2, r2, #1048576
 3193 0058 6264     		str	r2, [r4, #68]
 3194 005a 03E0     		b	.L342
 3195              	.L340:
4130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3196              		.loc 1 4130 0
 3197 005c 626C     		ldr	r2, [r4, #68]
 3198 005e 22F48012 		bic	r2, r2, #1048576
 3199 0062 6264     		str	r2, [r4, #68]
 3200              	.L342:
4141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3201              		.loc 1 4141 0
 3202 0064 626C     		ldr	r2, [r4, #68]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 195


 3203 0066 12F4807F 		tst	r2, #256
 3204 006a 01D1     		bne	.L343
4144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3205              		.loc 1 4144 0
 3206 006c 0022     		movs	r2, #0
 3207 006e A264     		str	r2, [r4, #72]
 3208              	.L343:
4150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3209              		.loc 1 4150 0
 3210 0070 0022     		movs	r2, #0
 3211 0072 84F84020 		strb	r2, [r4, #64]
4155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3212              		.loc 1 4155 0
 3213 0076 2268     		ldr	r2, [r4]
 3214 0078 6021     		movs	r1, #96
 3215 007a 1160     		str	r1, [r2]
4159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3216              		.loc 1 4159 0
 3217 007c 2268     		ldr	r2, [r4]
 3218 007e D168     		ldr	r1, [r2, #12]
 3219 0080 11F4001F 		tst	r1, #2097152
 3220 0084 03D0     		beq	.L344
4161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3221              		.loc 1 4161 0
 3222 0086 5168     		ldr	r1, [r2, #4]
 3223 0088 41F48061 		orr	r1, r1, #1024
 3224 008c 5160     		str	r1, [r2, #4]
 3225              	.L344:
4165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3226              		.loc 1 4165 0
 3227 008e 6269     		ldr	r2, [r4, #20]
 3228 0090 082A     		cmp	r2, #8
 3229 0092 27D1     		bne	.L351
4168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 3230              		.loc 1 4168 0
 3231 0094 2168     		ldr	r1, [r4]
 3232 0096 4A68     		ldr	r2, [r1, #4]
 3233 0098 22F02002 		bic	r2, r2, #32
 3234 009c 4A60     		str	r2, [r1, #4]
4169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
 3235              		.loc 1 4169 0
 3236 009e 2168     		ldr	r1, [r4]
 3237 00a0 4A68     		ldr	r2, [r1, #4]
 3238 00a2 42F04002 		orr	r2, r2, #64
 3239 00a6 4A60     		str	r2, [r1, #4]
 3240              	.L347:
4185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
 3241              		.loc 1 4185 0
 3242 00a8 2268     		ldr	r2, [r4]
 3243 00aa D168     		ldr	r1, [r2, #12]
 3244 00ac 11F0007F 		tst	r1, #33554432
 3245 00b0 21D1     		bne	.L338
4186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3246              		.loc 1 4186 0 discriminator 1
 3247 00b2 1249     		ldr	r1, .L358
 3248 00b4 8968     		ldr	r1, [r1, #8]
4185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 196


 3249              		.loc 1 4185 0 discriminator 1
 3250 00b6 11F01F0F 		tst	r1, #31
 3251 00ba 0ED0     		beq	.L348
4186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3252              		.loc 1 4186 0
 3253 00bc 0F49     		ldr	r1, .L358
 3254 00be 8968     		ldr	r1, [r1, #8]
 3255 00c0 01F01F01 		and	r1, r1, #31
 3256 00c4 0629     		cmp	r1, #6
 3257 00c6 08D0     		beq	.L348
4186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3258              		.loc 1 4186 0 is_stmt 0 discriminator 1
 3259 00c8 0C49     		ldr	r1, .L358
 3260 00ca 8968     		ldr	r1, [r1, #8]
 3261 00cc 01F01F01 		and	r1, r1, #31
 3262 00d0 0729     		cmp	r1, #7
 3263 00d2 02D0     		beq	.L348
4186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3264              		.loc 1 4186 0 discriminator 2
 3265 00d4 B2F1A04F 		cmp	r2, #1342177280
 3266 00d8 0DD1     		bne	.L338
 3267              	.L348:
4188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3268              		.loc 1 4188 0 is_stmt 1
 3269 00da 9168     		ldr	r1, [r2, #8]
 3270 00dc 41F00801 		orr	r1, r1, #8
 3271 00e0 9160     		str	r1, [r2, #8]
 3272 00e2 08E0     		b	.L338
 3273              	.L351:
4173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
 3274              		.loc 1 4173 0
 3275 00e4 2168     		ldr	r1, [r4]
 3276 00e6 4A68     		ldr	r2, [r1, #4]
 3277 00e8 42F06002 		orr	r2, r2, #96
 3278 00ec 4A60     		str	r2, [r1, #4]
4174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3279              		.loc 1 4174 0
 3280 00ee DBE7     		b	.L347
 3281              	.L339:
4194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 3282              		.loc 1 4194 0
 3283 00f0 0022     		movs	r2, #0
 3284 00f2 84F84020 		strb	r2, [r4, #64]
 3285              	.L338:
4204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3286              		.loc 1 4204 0
 3287 00f6 1846     		mov	r0, r3
 3288              	.LVL228:
 3289 00f8 10BD     		pop	{r4, pc}
 3290              	.LVL229:
 3291              	.L359:
 3292 00fa 00BF     		.align	2
 3293              	.L358:
 3294 00fc 00030050 		.word	1342178048
 3295              		.cfi_endproc
 3296              	.LFE142:
 3298              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 197


 3299              		.align	1
 3300              		.global	HAL_ADCEx_InjectedStop_IT
 3301              		.syntax unified
 3302              		.thumb
 3303              		.thumb_func
 3304              		.fpu fpv4-sp-d16
 3306              	HAL_ADCEx_InjectedStop_IT:
 3307              	.LFB143:
4320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3308              		.loc 1 4320 0
 3309              		.cfi_startproc
 3310              		@ args = 0, pretend = 0, frame = 0
 3311              		@ frame_needed = 0, uses_anonymous_args = 0
 3312              	.LVL230:
4327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3313              		.loc 1 4327 0
 3314 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3315 0004 012B     		cmp	r3, #1
 3316 0006 3BD0     		beq	.L365
4320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3317              		.loc 1 4320 0 discriminator 2
 3318 0008 10B5     		push	{r4, lr}
 3319              	.LCFI31:
 3320              		.cfi_def_cfa_offset 8
 3321              		.cfi_offset 4, -8
 3322              		.cfi_offset 14, -4
 3323 000a 0446     		mov	r4, r0
4327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3324              		.loc 1 4327 0 discriminator 2
 3325 000c 0123     		movs	r3, #1
 3326 000e 80F84030 		strb	r3, [r0, #64]
4340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3327              		.loc 1 4340 0 discriminator 2
 3328 0012 0368     		ldr	r3, [r0]
 3329 0014 DB68     		ldr	r3, [r3, #12]
 3330 0016 13F0007F 		tst	r3, #33554432
 3331 001a 09D0     		beq	.L370
4380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3332              		.loc 1 4380 0
 3333 001c 436C     		ldr	r3, [r0, #68]
 3334 001e 43F02003 		orr	r3, r3, #32
 3335 0022 4364     		str	r3, [r0, #68]
 3336              	.LVL231:
4382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3337              		.loc 1 4382 0
 3338 0024 0123     		movs	r3, #1
 3339              	.LVL232:
 3340              	.L363:
4386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3341              		.loc 1 4386 0
 3342 0026 0022     		movs	r2, #0
 3343 0028 84F84020 		strb	r2, [r4, #64]
4390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3344              		.loc 1 4390 0
 3345 002c 1846     		mov	r0, r3
 3346 002e 10BD     		pop	{r4, pc}
 3347              	.LVL233:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 198


 3348              	.L370:
4343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3349              		.loc 1 4343 0
 3350 0030 6021     		movs	r1, #96
 3351 0032 FFF7FEFF 		bl	ADC_ConversionStop
 3352              	.LVL234:
4348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3353              		.loc 1 4348 0
 3354 0036 0346     		mov	r3, r0
 3355 0038 0028     		cmp	r0, #0
 3356 003a F4D1     		bne	.L363
4351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3357              		.loc 1 4351 0
 3358 003c 2168     		ldr	r1, [r4]
 3359 003e 4A68     		ldr	r2, [r1, #4]
 3360 0040 22F48C62 		bic	r2, r2, #1120
 3361 0044 4A60     		str	r2, [r1, #4]
4353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
 3362              		.loc 1 4353 0
 3363 0046 2268     		ldr	r2, [r4]
 3364 0048 9268     		ldr	r2, [r2, #8]
 3365 004a 12F0040F 		tst	r2, #4
 3366 004e 03D1     		bne	.L364
4354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3367              		.loc 1 4354 0 discriminator 1
 3368 0050 626C     		ldr	r2, [r4, #68]
4353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
 3369              		.loc 1 4353 0 discriminator 1
 3370 0052 12F4807F 		tst	r2, #256
 3371 0056 04D0     		beq	.L371
 3372              	.L364:
4373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3373              		.loc 1 4373 0
 3374 0058 626C     		ldr	r2, [r4, #68]
 3375 005a 22F48052 		bic	r2, r2, #4096
 3376 005e 6264     		str	r2, [r4, #68]
 3377 0060 E1E7     		b	.L363
 3378              	.L371:
4357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 3379              		.loc 1 4357 0
 3380 0062 2046     		mov	r0, r4
 3381              	.LVL235:
 3382 0064 FFF7FEFF 		bl	ADC_Disable
 3383              	.LVL236:
4360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 3384              		.loc 1 4360 0
 3385 0068 0346     		mov	r3, r0
 3386 006a 0028     		cmp	r0, #0
 3387 006c DBD1     		bne	.L363
4363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 3388              		.loc 1 4363 0
 3389 006e 626C     		ldr	r2, [r4, #68]
 3390 0070 22F48852 		bic	r2, r2, #4352
 3391 0074 22F00102 		bic	r2, r2, #1
 3392 0078 42F00102 		orr	r2, r2, #1
 3393 007c 6264     		str	r2, [r4, #68]
 3394 007e D2E7     		b	.L363
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 199


 3395              	.LVL237:
 3396              	.L365:
 3397              	.LCFI32:
 3398              		.cfi_def_cfa_offset 0
 3399              		.cfi_restore 4
 3400              		.cfi_restore 14
4327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3401              		.loc 1 4327 0
 3402 0080 0223     		movs	r3, #2
4390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3403              		.loc 1 4390 0
 3404 0082 1846     		mov	r0, r3
 3405              	.LVL238:
 3406 0084 7047     		bx	lr
 3407              		.cfi_endproc
 3408              	.LFE143:
 3410              		.section	.text.HAL_ADCEx_MultiModeStart_DMA,"ax",%progbits
 3411              		.align	1
 3412              		.global	HAL_ADCEx_MultiModeStart_DMA
 3413              		.syntax unified
 3414              		.thumb
 3415              		.thumb_func
 3416              		.fpu fpv4-sp-d16
 3418              	HAL_ADCEx_MultiModeStart_DMA:
 3419              	.LFB144:
4480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3420              		.loc 1 4480 0
 3421              		.cfi_startproc
 3422              		@ args = 0, pretend = 0, frame = 88
 3423              		@ frame_needed = 0, uses_anonymous_args = 0
 3424              	.LVL239:
 3425 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3426              	.LCFI33:
 3427              		.cfi_def_cfa_offset 20
 3428              		.cfi_offset 4, -20
 3429              		.cfi_offset 5, -16
 3430              		.cfi_offset 6, -12
 3431              		.cfi_offset 7, -8
 3432              		.cfi_offset 14, -4
 3433 0002 97B0     		sub	sp, sp, #92
 3434              	.LCFI34:
 3435              		.cfi_def_cfa_offset 112
 3436              	.LVL240:
4492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 3437              		.loc 1 4492 0
 3438 0004 90F84040 		ldrb	r4, [r0, #64]	@ zero_extendqisi2
 3439 0008 012C     		cmp	r4, #1
 3440 000a 60D0     		beq	.L379
4492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 3441              		.loc 1 4492 0 is_stmt 0 discriminator 2
 3442 000c 0123     		movs	r3, #1
 3443 000e 80F84030 		strb	r3, [r0, #64]
4496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3444              		.loc 1 4496 0 is_stmt 1 discriminator 2
 3445 0012 0468     		ldr	r4, [r0]
 3446 0014 A368     		ldr	r3, [r4, #8]
 3447 0016 13F0040F 		tst	r3, #4
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 200


 3448 001a 01D0     		beq	.L382
4591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3449              		.loc 1 4591 0
 3450 001c 0225     		movs	r5, #2
 3451 001e 57E0     		b	.L373
 3452              	.L382:
4500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3453              		.loc 1 4500 0
 3454 0020 B4F1A04F 		cmp	r4, #1342177280
 3455 0024 3ED0     		beq	.L383
 3456              	.L374:
4502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3457              		.loc 1 4502 0
 3458 0026 019B     		ldr	r3, [sp, #4]
 3459 0028 002B     		cmp	r3, #0
 3460 002a 3ED0     		beq	.L384
 3461 002c 1746     		mov	r7, r2
 3462 002e 0E46     		mov	r6, r1
 3463 0030 0446     		mov	r4, r0
4516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 3464              		.loc 1 4516 0
 3465 0032 FFF7FEFF 		bl	ADC_Enable
 3466              	.LVL241:
4517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3467              		.loc 1 4517 0
 3468 0036 0546     		mov	r5, r0
 3469 0038 0028     		cmp	r0, #0
 3470 003a 3FD0     		beq	.L385
 3471              	.LVL242:
 3472              	.L376:
4523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3473              		.loc 1 4523 0
 3474 003c 002D     		cmp	r5, #0
 3475 003e 42D1     		bne	.L377
4528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3476              		.loc 1 4528 0
 3477 0040 626C     		ldr	r2, [r4, #68]
 3478 0042 254B     		ldr	r3, .L386
 3479 0044 1340     		ands	r3, r3, r2
 3480 0046 43F48073 		orr	r3, r3, #256
 3481 004a 6364     		str	r3, [r4, #68]
4534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3482              		.loc 1 4534 0
 3483 004c 2368     		ldr	r3, [r4]
 3484 004e DB68     		ldr	r3, [r3, #12]
 3485 0050 13F0007F 		tst	r3, #33554432
 3486 0054 05D0     		beq	.L378
4536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3487              		.loc 1 4536 0
 3488 0056 636C     		ldr	r3, [r4, #68]
 3489 0058 23F44053 		bic	r3, r3, #12288
 3490 005c 43F48053 		orr	r3, r3, #4096
 3491 0060 6364     		str	r3, [r4, #68]
 3492              	.L378:
4542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3493              		.loc 1 4542 0
 3494 0062 0023     		movs	r3, #0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 201


 3495 0064 84F84030 		strb	r3, [r4, #64]
4545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3496              		.loc 1 4545 0
 3497 0068 A364     		str	r3, [r4, #72]
4549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          
 3498              		.loc 1 4549 0
 3499 006a E36B     		ldr	r3, [r4, #60]
 3500 006c 1B4A     		ldr	r2, .L386+4
 3501 006e 9A62     		str	r2, [r3, #40]
4552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3502              		.loc 1 4552 0
 3503 0070 E36B     		ldr	r3, [r4, #60]
 3504 0072 1B4A     		ldr	r2, .L386+8
 3505 0074 DA62     		str	r2, [r3, #44]
4555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3506              		.loc 1 4555 0
 3507 0076 E36B     		ldr	r3, [r4, #60]
 3508 0078 1A4A     		ldr	r2, .L386+12
 3509 007a 1A63     		str	r2, [r3, #48]
 3510              	.LVL243:
4568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3511              		.loc 1 4568 0
 3512 007c 2368     		ldr	r3, [r4]
 3513 007e 1C22     		movs	r2, #28
 3514 0080 1A60     		str	r2, [r3]
4571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 3515              		.loc 1 4571 0
 3516 0082 2268     		ldr	r2, [r4]
 3517 0084 5368     		ldr	r3, [r2, #4]
 3518 0086 43F01003 		orr	r3, r3, #16
 3519 008a 5360     		str	r3, [r2, #4]
4574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 3520              		.loc 1 4574 0
 3521 008c 3B46     		mov	r3, r7
 3522 008e 3246     		mov	r2, r6
 3523 0090 1549     		ldr	r1, .L386+16
 3524 0092 E06B     		ldr	r0, [r4, #60]
 3525 0094 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3526              	.LVL244:
4580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 3527              		.loc 1 4580 0
 3528 0098 2268     		ldr	r2, [r4]
 3529 009a 9368     		ldr	r3, [r2, #8]
 3530 009c 43F00403 		orr	r3, r3, #4
 3531 00a0 9360     		str	r3, [r2, #8]
 3532 00a2 15E0     		b	.L373
 3533              	.LVL245:
 3534              	.L383:
4500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3535              		.loc 1 4500 0 discriminator 1
 3536 00a4 114B     		ldr	r3, .L386+20
 3537 00a6 0193     		str	r3, [sp, #4]
 3538 00a8 BDE7     		b	.L374
 3539              	.L384:
4505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3540              		.loc 1 4505 0
 3541 00aa 436C     		ldr	r3, [r0, #68]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 202


 3542 00ac 43F02003 		orr	r3, r3, #32
 3543 00b0 4364     		str	r3, [r0, #68]
4508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3544              		.loc 1 4508 0
 3545 00b2 0023     		movs	r3, #0
 3546 00b4 80F84030 		strb	r3, [r0, #64]
4510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 3547              		.loc 1 4510 0
 3548 00b8 0125     		movs	r5, #1
 3549 00ba 09E0     		b	.L373
 3550              	.LVL246:
 3551              	.L385:
4519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 3552              		.loc 1 4519 0
 3553 00bc 01A8     		add	r0, sp, #4
 3554              	.LVL247:
 3555 00be FFF7FEFF 		bl	ADC_Enable
 3556              	.LVL248:
 3557 00c2 0546     		mov	r5, r0
 3558              	.LVL249:
 3559 00c4 BAE7     		b	.L376
 3560              	.L377:
4586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 3561              		.loc 1 4586 0
 3562 00c6 0023     		movs	r3, #0
 3563 00c8 84F84030 		strb	r3, [r4, #64]
 3564 00cc 00E0     		b	.L373
 3565              	.LVL250:
 3566              	.L379:
4492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 3567              		.loc 1 4492 0
 3568 00ce 0225     		movs	r5, #2
 3569              	.LVL251:
 3570              	.L373:
4596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 3571              		.loc 1 4596 0
 3572 00d0 2846     		mov	r0, r5
 3573 00d2 17B0     		add	sp, sp, #92
 3574              	.LCFI35:
 3575              		.cfi_def_cfa_offset 20
 3576              		@ sp needed
 3577 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 3578              	.L387:
 3579 00d6 00BF     		.align	2
 3580              	.L386:
 3581 00d8 FEF0EFFF 		.word	-1052418
 3582 00dc 00000000 		.word	ADC_DMAConvCplt
 3583 00e0 00000000 		.word	ADC_DMAHalfConvCplt
 3584 00e4 00000000 		.word	ADC_DMAError
 3585 00e8 0C030050 		.word	1342178060
 3586 00ec 00010050 		.word	1342177536
 3587              		.cfi_endproc
 3588              	.LFE144:
 3590              		.section	.text.HAL_ADCEx_MultiModeStop_DMA,"ax",%progbits
 3591              		.align	1
 3592              		.global	HAL_ADCEx_MultiModeStop_DMA
 3593              		.syntax unified
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 203


 3594              		.thumb
 3595              		.thumb_func
 3596              		.fpu fpv4-sp-d16
 3598              	HAL_ADCEx_MultiModeStop_DMA:
 3599              	.LFB145:
4620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3600              		.loc 1 4620 0
 3601              		.cfi_startproc
 3602              		@ args = 0, pretend = 0, frame = 88
 3603              		@ frame_needed = 0, uses_anonymous_args = 0
 3604              	.LVL252:
 3605 0000 30B5     		push	{r4, r5, lr}
 3606              	.LCFI36:
 3607              		.cfi_def_cfa_offset 12
 3608              		.cfi_offset 4, -12
 3609              		.cfi_offset 5, -8
 3610              		.cfi_offset 14, -4
 3611 0002 97B0     		sub	sp, sp, #92
 3612              	.LCFI37:
 3613              		.cfi_def_cfa_offset 104
 3614              	.LVL253:
4629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3615              		.loc 1 4629 0
 3616 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3617 0008 012B     		cmp	r3, #1
 3618 000a 03D1     		bne	.L399
 3619 000c 0225     		movs	r5, #2
 3620              	.LVL254:
 3621              	.L389:
4728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 3622              		.loc 1 4728 0
 3623 000e 2846     		mov	r0, r5
 3624 0010 17B0     		add	sp, sp, #92
 3625              	.LCFI38:
 3626              		.cfi_remember_state
 3627              		.cfi_def_cfa_offset 12
 3628              		@ sp needed
 3629 0012 30BD     		pop	{r4, r5, pc}
 3630              	.LVL255:
 3631              	.L399:
 3632              	.LCFI39:
 3633              		.cfi_restore_state
 3634 0014 0446     		mov	r4, r0
4629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3635              		.loc 1 4629 0 discriminator 2
 3636 0016 0123     		movs	r3, #1
 3637 0018 80F84030 		strb	r3, [r0, #64]
4633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 3638              		.loc 1 4633 0 discriminator 2
 3639 001c 6C21     		movs	r1, #108
 3640 001e FFF7FEFF 		bl	ADC_ConversionStop
 3641              	.LVL256:
4636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3642              		.loc 1 4636 0 discriminator 2
 3643 0022 0546     		mov	r5, r0
 3644 0024 0028     		cmp	r0, #0
 3645 0026 5AD1     		bne	.L390
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 204


4640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3646              		.loc 1 4640 0
 3647 0028 2368     		ldr	r3, [r4]
 3648 002a B3F1A04F 		cmp	r3, #1342177280
 3649 002e 05D0     		beq	.L400
 3650              	.L391:
4642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3651              		.loc 1 4642 0
 3652 0030 019B     		ldr	r3, [sp, #4]
 3653 0032 3BB1     		cbz	r3, .L401
4657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 3654              		.loc 1 4657 0
 3655 0034 FFF7FEFF 		bl	HAL_GetTick
 3656              	.LVL257:
 3657 0038 0546     		mov	r5, r0
 3658              	.LVL258:
4659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 3659              		.loc 1 4659 0
 3660 003a 11E0     		b	.L393
 3661              	.LVL259:
 3662              	.L400:
4640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3663              		.loc 1 4640 0 discriminator 1
 3664 003c 03F58073 		add	r3, r3, #256
 3665 0040 0193     		str	r3, [sp, #4]
 3666 0042 F5E7     		b	.L391
 3667              	.L401:
4645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3668              		.loc 1 4645 0
 3669 0044 636C     		ldr	r3, [r4, #68]
 3670 0046 43F04003 		orr	r3, r3, #64
 3671 004a 6364     		str	r3, [r4, #68]
4648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3672              		.loc 1 4648 0
 3673 004c 0023     		movs	r3, #0
 3674 004e 84F84030 		strb	r3, [r4, #64]
4650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 3675              		.loc 1 4650 0
 3676 0052 0125     		movs	r5, #1
 3677 0054 DBE7     		b	.L389
 3678              	.LVL260:
 3679              	.L394:
4662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3680              		.loc 1 4662 0
 3681 0056 FFF7FEFF 		bl	HAL_GetTick
 3682              	.LVL261:
 3683 005a 401B     		subs	r0, r0, r5
 3684 005c 0B28     		cmp	r0, #11
 3685 005e 2BD8     		bhi	.L402
 3686              	.L393:
4659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 3687              		.loc 1 4659 0
 3688 0060 2368     		ldr	r3, [r4]
 3689 0062 9B68     		ldr	r3, [r3, #8]
 3690 0064 13F0040F 		tst	r3, #4
 3691 0068 F5D1     		bne	.L394
4660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 205


 3692              		.loc 1 4660 0 discriminator 1
 3693 006a 019B     		ldr	r3, [sp, #4]
 3694 006c 9B68     		ldr	r3, [r3, #8]
4659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 3695              		.loc 1 4659 0 discriminator 1
 3696 006e 13F0040F 		tst	r3, #4
 3697 0072 F0D1     		bne	.L394
4680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3698              		.loc 1 4680 0
 3699 0074 E06B     		ldr	r0, [r4, #60]
 3700 0076 FFF7FEFF 		bl	HAL_DMA_Abort
 3701              	.LVL262:
4683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3702              		.loc 1 4683 0
 3703 007a 0546     		mov	r5, r0
 3704              	.LVL263:
 3705 007c 18B1     		cbz	r0, .L395
4686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 3706              		.loc 1 4686 0
 3707 007e 636C     		ldr	r3, [r4, #68]
 3708 0080 43F04003 		orr	r3, r3, #64
 3709 0084 6364     		str	r3, [r4, #68]
 3710              	.L395:
4690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3711              		.loc 1 4690 0
 3712 0086 2268     		ldr	r2, [r4]
 3713 0088 5368     		ldr	r3, [r2, #4]
 3714 008a 23F01003 		bic	r3, r3, #16
 3715 008e 5360     		str	r3, [r2, #4]
4697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3716              		.loc 1 4697 0
 3717 0090 DDB9     		cbnz	r5, .L396
4700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
 3718              		.loc 1 4700 0
 3719 0092 2046     		mov	r0, r4
 3720              	.LVL264:
 3721 0094 FFF7FEFF 		bl	ADC_Disable
 3722              	.LVL265:
 3723 0098 0128     		cmp	r0, #1
 3724 009a 20D0     		beq	.L390
4701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 3725              		.loc 1 4701 0 discriminator 1
 3726 009c 01A8     		add	r0, sp, #4
 3727 009e FFF7FEFF 		bl	ADC_Disable
 3728              	.LVL266:
4700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
 3729              		.loc 1 4700 0 discriminator 1
 3730 00a2 0128     		cmp	r0, #1
 3731 00a4 1BD0     		beq	.L390
 3732              	.LVL267:
4706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 3733              		.loc 1 4706 0
 3734 00a6 636C     		ldr	r3, [r4, #68]
 3735 00a8 23F48853 		bic	r3, r3, #4352
 3736 00ac 23F00103 		bic	r3, r3, #1
 3737 00b0 43F00103 		orr	r3, r3, #1
 3738 00b4 6364     		str	r3, [r4, #68]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 206


 3739 00b6 12E0     		b	.L390
 3740              	.LVL268:
 3741              	.L402:
4665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 3742              		.loc 1 4665 0
 3743 00b8 636C     		ldr	r3, [r4, #68]
 3744 00ba 43F01003 		orr	r3, r3, #16
 3745 00be 6364     		str	r3, [r4, #68]
4668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 3746              		.loc 1 4668 0
 3747 00c0 0023     		movs	r3, #0
 3748 00c2 84F84030 		strb	r3, [r4, #64]
4670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 3749              		.loc 1 4670 0
 3750 00c6 0125     		movs	r5, #1
 3751              	.LVL269:
 3752 00c8 A1E7     		b	.L389
 3753              	.LVL270:
 3754              	.L396:
4714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(&tmphadcSlave);
 3755              		.loc 1 4714 0
 3756 00ca 2046     		mov	r0, r4
 3757              	.LVL271:
 3758 00cc FFF7FEFF 		bl	ADC_Disable
 3759              	.LVL272:
4715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 3760              		.loc 1 4715 0
 3761 00d0 01A8     		add	r0, sp, #4
 3762 00d2 FFF7FEFF 		bl	ADC_Disable
 3763              	.LVL273:
4718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 3764              		.loc 1 4718 0
 3765 00d6 636C     		ldr	r3, [r4, #68]
 3766 00d8 43F01003 		orr	r3, r3, #16
 3767 00dc 6364     		str	r3, [r4, #68]
 3768              	.L390:
 3769              	.LVL274:
4724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3770              		.loc 1 4724 0
 3771 00de 0023     		movs	r3, #0
 3772 00e0 84F84030 		strb	r3, [r4, #64]
4727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3773              		.loc 1 4727 0
 3774 00e4 93E7     		b	.L389
 3775              		.cfi_endproc
 3776              	.LFE145:
 3778              		.section	.text.HAL_ADCEx_MultiModeGetValue,"ax",%progbits
 3779              		.align	1
 3780              		.global	HAL_ADCEx_MultiModeGetValue
 3781              		.syntax unified
 3782              		.thumb
 3783              		.thumb_func
 3784              		.fpu fpv4-sp-d16
 3786              	HAL_ADCEx_MultiModeGetValue:
 3787              	.LFB146:
4740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 3788              		.loc 1 4740 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 207


 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 0
 3791              		@ frame_needed = 0, uses_anonymous_args = 0
 3792              		@ link register save eliminated.
 3793              	.LVL275:
4752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3794              		.loc 1 4752 0
 3795 0000 014B     		ldr	r3, .L404
 3796 0002 D868     		ldr	r0, [r3, #12]
 3797              	.LVL276:
4753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3798              		.loc 1 4753 0
 3799 0004 7047     		bx	lr
 3800              	.L405:
 3801 0006 00BF     		.align	2
 3802              	.L404:
 3803 0008 00030050 		.word	1342178048
 3804              		.cfi_endproc
 3805              	.LFE146:
 3807              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 3808              		.align	1
 3809              		.global	HAL_ADCEx_InjectedGetValue
 3810              		.syntax unified
 3811              		.thumb
 3812              		.thumb_func
 3813              		.fpu fpv4-sp-d16
 3815              	HAL_ADCEx_InjectedGetValue:
 3816              	.LFB147:
4791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0U;
 3817              		.loc 1 4791 0
 3818              		.cfi_startproc
 3819              		@ args = 0, pretend = 0, frame = 0
 3820              		@ frame_needed = 0, uses_anonymous_args = 0
 3821              		@ link register save eliminated.
 3822              	.LVL277:
4802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {  
 3823              		.loc 1 4802 0
 3824 0000 0329     		cmp	r1, #3
 3825 0002 0BD0     		beq	.L408
 3826 0004 0429     		cmp	r1, #4
 3827 0006 05D0     		beq	.L409
 3828 0008 0229     		cmp	r1, #2
 3829 000a 0BD0     		beq	.L413
4815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 3830              		.loc 1 4815 0
 3831 000c 0368     		ldr	r3, [r0]
 3832 000e D3F88000 		ldr	r0, [r3, #128]
 3833              	.LVL278:
4821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 3834              		.loc 1 4821 0
 3835 0012 7047     		bx	lr
 3836              	.LVL279:
 3837              	.L409:
4805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 3838              		.loc 1 4805 0
 3839 0014 0368     		ldr	r3, [r0]
 3840 0016 D3F88C00 		ldr	r0, [r3, #140]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 208


 3841              	.LVL280:
4806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
 3842              		.loc 1 4806 0
 3843 001a 7047     		bx	lr
 3844              	.LVL281:
 3845              	.L408:
4808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 3846              		.loc 1 4808 0
 3847 001c 0368     		ldr	r3, [r0]
 3848 001e D3F88800 		ldr	r0, [r3, #136]
 3849              	.LVL282:
4809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
 3850              		.loc 1 4809 0
 3851 0022 7047     		bx	lr
 3852              	.LVL283:
 3853              	.L413:
4811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 3854              		.loc 1 4811 0
 3855 0024 0368     		ldr	r3, [r0]
 3856 0026 D3F88400 		ldr	r0, [r3, #132]
 3857              	.LVL284:
4812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 3858              		.loc 1 4812 0
 3859 002a 7047     		bx	lr
 3860              		.cfi_endproc
 3861              	.LFE147:
 3863              		.section	.text.HAL_ADCEx_RegularStop,"ax",%progbits
 3864              		.align	1
 3865              		.global	HAL_ADCEx_RegularStop
 3866              		.syntax unified
 3867              		.thumb
 3868              		.thumb_func
 3869              		.fpu fpv4-sp-d16
 3871              	HAL_ADCEx_RegularStop:
 3872              	.LFB148:
4905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3873              		.loc 1 4905 0
 3874              		.cfi_startproc
 3875              		@ args = 0, pretend = 0, frame = 0
 3876              		@ frame_needed = 0, uses_anonymous_args = 0
 3877              	.LVL285:
4912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3878              		.loc 1 4912 0
 3879 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3880 0004 012B     		cmp	r3, #1
 3881 0006 02D1     		bne	.L423
 3882 0008 0223     		movs	r3, #2
4959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 3883              		.loc 1 4959 0
 3884 000a 1846     		mov	r0, r3
 3885              	.LVL286:
 3886 000c 7047     		bx	lr
 3887              	.LVL287:
 3888              	.L423:
4905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3889              		.loc 1 4905 0 discriminator 2
 3890 000e 10B5     		push	{r4, lr}
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 209


 3891              	.LCFI40:
 3892              		.cfi_def_cfa_offset 8
 3893              		.cfi_offset 4, -8
 3894              		.cfi_offset 14, -4
 3895 0010 0446     		mov	r4, r0
4912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3896              		.loc 1 4912 0 discriminator 2
 3897 0012 0123     		movs	r3, #1
 3898 0014 80F84030 		strb	r3, [r0, #64]
4926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3899              		.loc 1 4926 0 discriminator 2
 3900 0018 0C21     		movs	r1, #12
 3901 001a FFF7FEFF 		bl	ADC_ConversionStop
 3902              	.LVL288:
 3903 001e 0346     		mov	r3, r0
 3904              	.LVL289:
4931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 3905              		.loc 1 4931 0 discriminator 2
 3906 0020 2268     		ldr	r2, [r4]
 3907 0022 9268     		ldr	r2, [r2, #8]
 3908 0024 12F0080F 		tst	r2, #8
 3909 0028 03D1     		bne	.L416
4932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3910              		.loc 1 4932 0 discriminator 1
 3911 002a 626C     		ldr	r2, [r4, #68]
4931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 3912              		.loc 1 4931 0 discriminator 1
 3913 002c 12F4805F 		tst	r2, #4096
 3914 0030 08D0     		beq	.L424
 3915              	.L416:
4951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 3916              		.loc 1 4951 0
 3917 0032 626C     		ldr	r2, [r4, #68]
 3918 0034 22F48072 		bic	r2, r2, #256
 3919 0038 6264     		str	r2, [r4, #68]
 3920              	.LVL290:
 3921              	.L417:
4955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3922              		.loc 1 4955 0
 3923 003a 0022     		movs	r2, #0
 3924 003c 84F84020 		strb	r2, [r4, #64]
4959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 3925              		.loc 1 4959 0
 3926 0040 1846     		mov	r0, r3
 3927 0042 10BD     		pop	{r4, pc}
 3928              	.LVL291:
 3929              	.L424:
4935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 3930              		.loc 1 4935 0
 3931 0044 2046     		mov	r0, r4
 3932 0046 FFF7FEFF 		bl	ADC_Disable
 3933              	.LVL292:
4938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3934              		.loc 1 4938 0
 3935 004a 0346     		mov	r3, r0
 3936 004c 0028     		cmp	r0, #0
 3937 004e F4D1     		bne	.L417
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 210


4941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 3938              		.loc 1 4941 0
 3939 0050 626C     		ldr	r2, [r4, #68]
 3940 0052 22F48852 		bic	r2, r2, #4352
 3941 0056 22F00102 		bic	r2, r2, #1
 3942 005a 42F00102 		orr	r2, r2, #1
 3943 005e 6264     		str	r2, [r4, #68]
 3944 0060 EBE7     		b	.L417
 3945              		.cfi_endproc
 3946              	.LFE148:
 3948              		.section	.text.HAL_ADCEx_RegularStop_IT,"ax",%progbits
 3949              		.align	1
 3950              		.global	HAL_ADCEx_RegularStop_IT
 3951              		.syntax unified
 3952              		.thumb
 3953              		.thumb_func
 3954              		.fpu fpv4-sp-d16
 3956              	HAL_ADCEx_RegularStop_IT:
 3957              	.LFB149:
4979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3958              		.loc 1 4979 0
 3959              		.cfi_startproc
 3960              		@ args = 0, pretend = 0, frame = 0
 3961              		@ frame_needed = 0, uses_anonymous_args = 0
 3962              	.LVL293:
4986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3963              		.loc 1 4986 0
 3964 0000 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3965 0004 012B     		cmp	r3, #1
 3966 0006 02D1     		bne	.L434
 3967 0008 0223     		movs	r3, #2
5037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 3968              		.loc 1 5037 0
 3969 000a 1846     		mov	r0, r3
 3970              	.LVL294:
 3971 000c 7047     		bx	lr
 3972              	.LVL295:
 3973              	.L434:
4979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3974              		.loc 1 4979 0 discriminator 2
 3975 000e 10B5     		push	{r4, lr}
 3976              	.LCFI41:
 3977              		.cfi_def_cfa_offset 8
 3978              		.cfi_offset 4, -8
 3979              		.cfi_offset 14, -4
 3980 0010 0446     		mov	r4, r0
4986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3981              		.loc 1 4986 0 discriminator 2
 3982 0012 0123     		movs	r3, #1
 3983 0014 80F84030 		strb	r3, [r0, #64]
5000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 3984              		.loc 1 5000 0 discriminator 2
 3985 0018 0C21     		movs	r1, #12
 3986 001a FFF7FEFF 		bl	ADC_ConversionStop
 3987              	.LVL296:
 3988 001e 0346     		mov	r3, r0
 3989              	.LVL297:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 211


5005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 3990              		.loc 1 5005 0 discriminator 2
 3991 0020 2268     		ldr	r2, [r4]
 3992 0022 9168     		ldr	r1, [r2, #8]
 3993 0024 11F0080F 		tst	r1, #8
 3994 0028 03D1     		bne	.L427
5006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3995              		.loc 1 5006 0 discriminator 1
 3996 002a 616C     		ldr	r1, [r4, #68]
5005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 3997              		.loc 1 5005 0 discriminator 1
 3998 002c 11F4805F 		tst	r1, #4096
 3999 0030 08D0     		beq	.L435
 4000              	.L427:
5029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4001              		.loc 1 5029 0
 4002 0032 626C     		ldr	r2, [r4, #68]
 4003 0034 22F48072 		bic	r2, r2, #256
 4004 0038 6264     		str	r2, [r4, #68]
 4005              	.LVL298:
 4006              	.L428:
5033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4007              		.loc 1 5033 0
 4008 003a 0022     		movs	r2, #0
 4009 003c 84F84020 		strb	r2, [r4, #64]
5037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4010              		.loc 1 5037 0
 4011 0040 1846     		mov	r0, r3
 4012 0042 10BD     		pop	{r4, pc}
 4013              	.LVL299:
 4014              	.L435:
5010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4015              		.loc 1 5010 0
 4016 0044 5368     		ldr	r3, [r2, #4]
 4017              	.LVL300:
 4018 0046 23F01C03 		bic	r3, r3, #28
 4019 004a 5360     		str	r3, [r2, #4]
5013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4020              		.loc 1 5013 0
 4021 004c 2046     		mov	r0, r4
 4022 004e FFF7FEFF 		bl	ADC_Disable
 4023              	.LVL301:
5016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4024              		.loc 1 5016 0
 4025 0052 0346     		mov	r3, r0
 4026 0054 0028     		cmp	r0, #0
 4027 0056 F0D1     		bne	.L428
5019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 4028              		.loc 1 5019 0
 4029 0058 626C     		ldr	r2, [r4, #68]
 4030 005a 22F48852 		bic	r2, r2, #4352
 4031 005e 22F00102 		bic	r2, r2, #1
 4032 0062 42F00102 		orr	r2, r2, #1
 4033 0066 6264     		str	r2, [r4, #68]
 4034 0068 E7E7     		b	.L428
 4035              		.cfi_endproc
 4036              	.LFE149:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 212


 4038              		.section	.text.HAL_ADCEx_RegularStop_DMA,"ax",%progbits
 4039              		.align	1
 4040              		.global	HAL_ADCEx_RegularStop_DMA
 4041              		.syntax unified
 4042              		.thumb
 4043              		.thumb_func
 4044              		.fpu fpv4-sp-d16
 4046              	HAL_ADCEx_RegularStop_DMA:
 4047              	.LFB150:
5059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4048              		.loc 1 5059 0
 4049              		.cfi_startproc
 4050              		@ args = 0, pretend = 0, frame = 0
 4051              		@ frame_needed = 0, uses_anonymous_args = 0
 4052              	.LVL302:
 4053 0000 38B5     		push	{r3, r4, r5, lr}
 4054              	.LCFI42:
 4055              		.cfi_def_cfa_offset 16
 4056              		.cfi_offset 3, -16
 4057              		.cfi_offset 4, -12
 4058              		.cfi_offset 5, -8
 4059              		.cfi_offset 14, -4
 4060              	.LVL303:
5066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4061              		.loc 1 5066 0
 4062 0002 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 4063 0006 012B     		cmp	r3, #1
 4064 0008 02D1     		bne	.L445
 4065 000a 0225     		movs	r5, #2
 4066              	.LVL304:
 4067              	.L437:
5139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4068              		.loc 1 5139 0
 4069 000c 2846     		mov	r0, r5
 4070 000e 38BD     		pop	{r3, r4, r5, pc}
 4071              	.LVL305:
 4072              	.L445:
 4073 0010 0446     		mov	r4, r0
5066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4074              		.loc 1 5066 0 discriminator 2
 4075 0012 0123     		movs	r3, #1
 4076 0014 80F84030 		strb	r3, [r0, #64]
5080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4077              		.loc 1 5080 0 discriminator 2
 4078 0018 0C21     		movs	r1, #12
 4079 001a FFF7FEFF 		bl	ADC_ConversionStop
 4080              	.LVL306:
 4081 001e 0546     		mov	r5, r0
 4082              	.LVL307:
5085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4083              		.loc 1 5085 0 discriminator 2
 4084 0020 2368     		ldr	r3, [r4]
 4085 0022 9A68     		ldr	r2, [r3, #8]
 4086 0024 12F0080F 		tst	r2, #8
 4087 0028 03D1     		bne	.L438
5086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4088              		.loc 1 5086 0 discriminator 1
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 213


 4089 002a 626C     		ldr	r2, [r4, #68]
5085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4090              		.loc 1 5085 0 discriminator 1
 4091 002c 12F4805F 		tst	r2, #4096
 4092 0030 07D0     		beq	.L446
 4093              	.L438:
5131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4094              		.loc 1 5131 0
 4095 0032 636C     		ldr	r3, [r4, #68]
 4096 0034 23F48073 		bic	r3, r3, #256
 4097 0038 6364     		str	r3, [r4, #68]
 4098              	.L442:
5135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4099              		.loc 1 5135 0
 4100 003a 0023     		movs	r3, #0
 4101 003c 84F84030 		strb	r3, [r4, #64]
5138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4102              		.loc 1 5138 0
 4103 0040 E4E7     		b	.L437
 4104              	.L446:
5089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4105              		.loc 1 5089 0
 4106 0042 DA68     		ldr	r2, [r3, #12]
 4107 0044 22F00102 		bic	r2, r2, #1
 4108 0048 DA60     		str	r2, [r3, #12]
5093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4109              		.loc 1 5093 0
 4110 004a E06B     		ldr	r0, [r4, #60]
 4111 004c FFF7FEFF 		bl	HAL_DMA_Abort
 4112              	.LVL308:
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4113              		.loc 1 5096 0
 4114 0050 0546     		mov	r5, r0
 4115 0052 18B1     		cbz	r0, .L439
5099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4116              		.loc 1 5099 0
 4117 0054 636C     		ldr	r3, [r4, #68]
 4118 0056 43F04003 		orr	r3, r3, #64
 4119 005a 6364     		str	r3, [r4, #68]
 4120              	.L439:
5103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4121              		.loc 1 5103 0
 4122 005c 2268     		ldr	r2, [r4]
 4123 005e 5368     		ldr	r3, [r2, #4]
 4124 0060 23F01003 		bic	r3, r3, #16
 4125 0064 5360     		str	r3, [r2, #4]
5108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4126              		.loc 1 5108 0
 4127 0066 75B9     		cbnz	r5, .L440
5110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4128              		.loc 1 5110 0
 4129 0068 2046     		mov	r0, r4
 4130              	.LVL309:
 4131 006a FFF7FEFF 		bl	ADC_Disable
 4132              	.LVL310:
 4133 006e 0546     		mov	r5, r0
 4134              	.LVL311:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 214


 4135              	.L441:
5118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4136              		.loc 1 5118 0
 4137 0070 002D     		cmp	r5, #0
 4138 0072 E2D1     		bne	.L442
5121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 4139              		.loc 1 5121 0
 4140 0074 636C     		ldr	r3, [r4, #68]
 4141 0076 23F48853 		bic	r3, r3, #4352
 4142 007a 23F00103 		bic	r3, r3, #1
 4143 007e 43F00103 		orr	r3, r3, #1
 4144 0082 6364     		str	r3, [r4, #68]
 4145 0084 D9E7     		b	.L442
 4146              	.LVL312:
 4147              	.L440:
5114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4148              		.loc 1 5114 0
 4149 0086 2046     		mov	r0, r4
 4150              	.LVL313:
 4151 0088 FFF7FEFF 		bl	ADC_Disable
 4152              	.LVL314:
 4153 008c F0E7     		b	.L441
 4154              		.cfi_endproc
 4155              	.LFE150:
 4157              		.section	.text.HAL_ADCEx_RegularMultiModeStop_DMA,"ax",%progbits
 4158              		.align	1
 4159              		.global	HAL_ADCEx_RegularMultiModeStop_DMA
 4160              		.syntax unified
 4161              		.thumb
 4162              		.thumb_func
 4163              		.fpu fpv4-sp-d16
 4165              	HAL_ADCEx_RegularMultiModeStop_DMA:
 4166              	.LFB151:
5171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4167              		.loc 1 5171 0
 4168              		.cfi_startproc
 4169              		@ args = 0, pretend = 0, frame = 88
 4170              		@ frame_needed = 0, uses_anonymous_args = 0
 4171              	.LVL315:
 4172 0000 30B5     		push	{r4, r5, lr}
 4173              	.LCFI43:
 4174              		.cfi_def_cfa_offset 12
 4175              		.cfi_offset 4, -12
 4176              		.cfi_offset 5, -8
 4177              		.cfi_offset 14, -4
 4178 0002 97B0     		sub	sp, sp, #92
 4179              	.LCFI44:
 4180              		.cfi_def_cfa_offset 104
 4181              	.LVL316:
5180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4182              		.loc 1 5180 0
 4183 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 4184 0008 012B     		cmp	r3, #1
 4185 000a 03D1     		bne	.L459
 4186 000c 0225     		movs	r5, #2
 4187              	.LVL317:
 4188              	.L448:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 215


5299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 4189              		.loc 1 5299 0
 4190 000e 2846     		mov	r0, r5
 4191 0010 17B0     		add	sp, sp, #92
 4192              	.LCFI45:
 4193              		.cfi_remember_state
 4194              		.cfi_def_cfa_offset 12
 4195              		@ sp needed
 4196 0012 30BD     		pop	{r4, r5, pc}
 4197              	.LVL318:
 4198              	.L459:
 4199              	.LCFI46:
 4200              		.cfi_restore_state
 4201 0014 0446     		mov	r4, r0
5180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4202              		.loc 1 5180 0 discriminator 2
 4203 0016 0123     		movs	r3, #1
 4204 0018 80F84030 		strb	r3, [r0, #64]
5194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4205              		.loc 1 5194 0 discriminator 2
 4206 001c 0C21     		movs	r1, #12
 4207 001e FFF7FEFF 		bl	ADC_ConversionStop
 4208              	.LVL319:
 4209 0022 0546     		mov	r5, r0
 4210              	.LVL320:
5199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4211              		.loc 1 5199 0 discriminator 2
 4212 0024 2368     		ldr	r3, [r4]
 4213 0026 9A68     		ldr	r2, [r3, #8]
 4214 0028 12F0080F 		tst	r2, #8
 4215 002c 5ED1     		bne	.L449
5200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4216              		.loc 1 5200 0 discriminator 1
 4217 002e 626C     		ldr	r2, [r4, #68]
5199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4218              		.loc 1 5199 0 discriminator 1
 4219 0030 12F4805F 		tst	r2, #4096
 4220 0034 5AD1     		bne	.L449
5204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4221              		.loc 1 5204 0
 4222 0036 B3F1A04F 		cmp	r3, #1342177280
 4223 003a 05D0     		beq	.L460
 4224              	.L450:
5206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4225              		.loc 1 5206 0
 4226 003c 019B     		ldr	r3, [sp, #4]
 4227 003e 3BB1     		cbz	r3, .L461
5221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4228              		.loc 1 5221 0
 4229 0040 FFF7FEFF 		bl	HAL_GetTick
 4230              	.LVL321:
 4231 0044 0546     		mov	r5, r0
 4232              	.LVL322:
5223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 4233              		.loc 1 5223 0
 4234 0046 11E0     		b	.L452
 4235              	.LVL323:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 216


 4236              	.L460:
5204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4237              		.loc 1 5204 0 discriminator 1
 4238 0048 03F58073 		add	r3, r3, #256
 4239 004c 0193     		str	r3, [sp, #4]
 4240 004e F5E7     		b	.L450
 4241              	.L461:
5209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4242              		.loc 1 5209 0
 4243 0050 636C     		ldr	r3, [r4, #68]
 4244 0052 43F04003 		orr	r3, r3, #64
 4245 0056 6364     		str	r3, [r4, #68]
5212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4246              		.loc 1 5212 0
 4247 0058 0023     		movs	r3, #0
 4248 005a 84F84030 		strb	r3, [r4, #64]
5214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4249              		.loc 1 5214 0
 4250 005e 0125     		movs	r5, #1
 4251              	.LVL324:
 4252 0060 D5E7     		b	.L448
 4253              	.LVL325:
 4254              	.L453:
5226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 4255              		.loc 1 5226 0
 4256 0062 FFF7FEFF 		bl	HAL_GetTick
 4257              	.LVL326:
 4258 0066 401B     		subs	r0, r0, r5
 4259 0068 0B28     		cmp	r0, #11
 4260 006a 2BD8     		bhi	.L462
 4261              	.L452:
5223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 4262              		.loc 1 5223 0
 4263 006c 2368     		ldr	r3, [r4]
 4264 006e 9B68     		ldr	r3, [r3, #8]
 4265 0070 13F0040F 		tst	r3, #4
 4266 0074 F5D1     		bne	.L453
5224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4267              		.loc 1 5224 0 discriminator 1
 4268 0076 019B     		ldr	r3, [sp, #4]
 4269 0078 9B68     		ldr	r3, [r3, #8]
5223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
 4270              		.loc 1 5223 0 discriminator 1
 4271 007a 13F0040F 		tst	r3, #4
 4272 007e F0D1     		bne	.L453
5244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4273              		.loc 1 5244 0
 4274 0080 E06B     		ldr	r0, [r4, #60]
 4275 0082 FFF7FEFF 		bl	HAL_DMA_Abort
 4276              	.LVL327:
5247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4277              		.loc 1 5247 0
 4278 0086 0546     		mov	r5, r0
 4279              	.LVL328:
 4280 0088 18B1     		cbz	r0, .L454
5250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4281              		.loc 1 5250 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 217


 4282 008a 636C     		ldr	r3, [r4, #68]
 4283 008c 43F04003 		orr	r3, r3, #64
 4284 0090 6364     		str	r3, [r4, #68]
 4285              	.L454:
5254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4286              		.loc 1 5254 0
 4287 0092 2268     		ldr	r2, [r4]
 4288 0094 5368     		ldr	r3, [r2, #4]
 4289 0096 23F01003 		bic	r3, r3, #16
 4290 009a 5360     		str	r3, [r2, #4]
5261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4291              		.loc 1 5261 0
 4292 009c DDB9     		cbnz	r5, .L455
5264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
 4293              		.loc 1 5264 0
 4294 009e 2046     		mov	r0, r4
 4295              	.LVL329:
 4296 00a0 FFF7FEFF 		bl	ADC_Disable
 4297              	.LVL330:
 4298 00a4 0128     		cmp	r0, #1
 4299 00a6 25D0     		beq	.L456
5265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 4300              		.loc 1 5265 0 discriminator 1
 4301 00a8 01A8     		add	r0, sp, #4
 4302 00aa FFF7FEFF 		bl	ADC_Disable
 4303              	.LVL331:
5264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
 4304              		.loc 1 5264 0 discriminator 1
 4305 00ae 0128     		cmp	r0, #1
 4306 00b0 20D0     		beq	.L456
 4307              	.LVL332:
5270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 4308              		.loc 1 5270 0
 4309 00b2 636C     		ldr	r3, [r4, #68]
 4310 00b4 23F48853 		bic	r3, r3, #4352
 4311 00b8 23F00103 		bic	r3, r3, #1
 4312 00bc 43F00103 		orr	r3, r3, #1
 4313 00c0 6364     		str	r3, [r4, #68]
 4314 00c2 17E0     		b	.L456
 4315              	.LVL333:
 4316              	.L462:
5229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 4317              		.loc 1 5229 0
 4318 00c4 636C     		ldr	r3, [r4, #68]
 4319 00c6 43F01003 		orr	r3, r3, #16
 4320 00ca 6364     		str	r3, [r4, #68]
5232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 4321              		.loc 1 5232 0
 4322 00cc 0023     		movs	r3, #0
 4323 00ce 84F84030 		strb	r3, [r4, #64]
5234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 4324              		.loc 1 5234 0
 4325 00d2 0125     		movs	r5, #1
 4326              	.LVL334:
 4327 00d4 9BE7     		b	.L448
 4328              	.LVL335:
 4329              	.L455:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 218


5278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(&tmphadcSlave);
 4330              		.loc 1 5278 0
 4331 00d6 2046     		mov	r0, r4
 4332              	.LVL336:
 4333 00d8 FFF7FEFF 		bl	ADC_Disable
 4334              	.LVL337:
5279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4335              		.loc 1 5279 0
 4336 00dc 01A8     		add	r0, sp, #4
 4337 00de FFF7FEFF 		bl	ADC_Disable
 4338              	.LVL338:
5282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4339              		.loc 1 5282 0
 4340 00e2 636C     		ldr	r3, [r4, #68]
 4341 00e4 43F01003 		orr	r3, r3, #16
 4342 00e8 6364     		str	r3, [r4, #68]
 4343 00ea 03E0     		b	.L456
 4344              	.LVL339:
 4345              	.L449:
5291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4346              		.loc 1 5291 0
 4347 00ec 636C     		ldr	r3, [r4, #68]
 4348 00ee 23F48073 		bic	r3, r3, #256
 4349 00f2 6364     		str	r3, [r4, #68]
 4350              	.LVL340:
 4351              	.L456:
5295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4352              		.loc 1 5295 0
 4353 00f4 0023     		movs	r3, #0
 4354 00f6 84F84030 		strb	r3, [r4, #64]
5298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4355              		.loc 1 5298 0
 4356 00fa 88E7     		b	.L448
 4357              		.cfi_endproc
 4358              	.LFE151:
 4360              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 4361              		.align	1
 4362              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 4363              		.syntax unified
 4364              		.thumb
 4365              		.thumb_func
 4366              		.fpu fpv4-sp-d16
 4368              	HAL_ADCEx_InjectedConvCpltCallback:
 4369              	.LFB152:
5316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 4370              		.loc 1 5316 0
 4371              		.cfi_startproc
 4372              		@ args = 0, pretend = 0, frame = 0
 4373              		@ frame_needed = 0, uses_anonymous_args = 0
 4374              		@ link register save eliminated.
 4375              	.LVL341:
 4376 0000 7047     		bx	lr
 4377              		.cfi_endproc
 4378              	.LFE152:
 4380              		.section	.text.HAL_ADCEx_InjectedQueueOverflowCallback,"ax",%progbits
 4381              		.align	1
 4382              		.weak	HAL_ADCEx_InjectedQueueOverflowCallback
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 219


 4383              		.syntax unified
 4384              		.thumb
 4385              		.thumb_func
 4386              		.fpu fpv4-sp-d16
 4388              	HAL_ADCEx_InjectedQueueOverflowCallback:
 4389              	.LFB153:
5339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 4390              		.loc 1 5339 0
 4391              		.cfi_startproc
 4392              		@ args = 0, pretend = 0, frame = 0
 4393              		@ frame_needed = 0, uses_anonymous_args = 0
 4394              		@ link register save eliminated.
 4395              	.LVL342:
 4396 0000 7047     		bx	lr
 4397              		.cfi_endproc
 4398              	.LFE153:
 4400              		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 4401              		.align	1
 4402              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 4403              		.syntax unified
 4404              		.thumb
 4405              		.thumb_func
 4406              		.fpu fpv4-sp-d16
 4408              	HAL_ADCEx_LevelOutOfWindow2Callback:
 4409              	.LFB154:
5355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 4410              		.loc 1 5355 0
 4411              		.cfi_startproc
 4412              		@ args = 0, pretend = 0, frame = 0
 4413              		@ frame_needed = 0, uses_anonymous_args = 0
 4414              		@ link register save eliminated.
 4415              	.LVL343:
 4416 0000 7047     		bx	lr
 4417              		.cfi_endproc
 4418              	.LFE154:
 4420              		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 4421              		.align	1
 4422              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 4423              		.syntax unified
 4424              		.thumb
 4425              		.thumb_func
 4426              		.fpu fpv4-sp-d16
 4428              	HAL_ADCEx_LevelOutOfWindow3Callback:
 4429              	.LFB155:
5370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 4430              		.loc 1 5370 0
 4431              		.cfi_startproc
 4432              		@ args = 0, pretend = 0, frame = 0
 4433              		@ frame_needed = 0, uses_anonymous_args = 0
 4434              		@ link register save eliminated.
 4435              	.LVL344:
 4436 0000 7047     		bx	lr
 4437              		.cfi_endproc
 4438              	.LFE155:
 4440              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 4441              		.align	1
 4442              		.global	HAL_ADC_IRQHandler
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 220


 4443              		.syntax unified
 4444              		.thumb
 4445              		.thumb_func
 4446              		.fpu fpv4-sp-d16
 4448              	HAL_ADC_IRQHandler:
 4449              	.LFB135:
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t overrun_error = 0U; /* flag set if overrun occurrence has to be considered as an error *
 4450              		.loc 1 2821 0
 4451              		.cfi_startproc
 4452              		@ args = 0, pretend = 0, frame = 0
 4453              		@ frame_needed = 0, uses_anonymous_args = 0
 4454              	.LVL345:
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t overrun_error = 0U; /* flag set if overrun occurrence has to be considered as an error *
 4455              		.loc 1 2821 0
 4456 0000 10B5     		push	{r4, lr}
 4457              	.LCFI47:
 4458              		.cfi_def_cfa_offset 8
 4459              		.cfi_offset 4, -8
 4460              		.cfi_offset 14, -4
 4461 0002 0446     		mov	r4, r0
 4462              	.LVL346:
2833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
 4463              		.loc 1 2833 0
 4464 0004 0368     		ldr	r3, [r0]
 4465 0006 1A68     		ldr	r2, [r3]
 4466 0008 12F0040F 		tst	r2, #4
 4467 000c 03D0     		beq	.L468
2833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
 4468              		.loc 1 2833 0 is_stmt 0 discriminator 1
 4469 000e 5A68     		ldr	r2, [r3, #4]
 4470 0010 12F0040F 		tst	r2, #4
 4471 0014 07D1     		bne	.L469
 4472              	.L468:
2834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4473              		.loc 1 2834 0 is_stmt 1 discriminator 3
 4474 0016 1A68     		ldr	r2, [r3]
2833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
 4475              		.loc 1 2833 0 discriminator 3
 4476 0018 12F0080F 		tst	r2, #8
 4477 001c 52D0     		beq	.L470
2834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4478              		.loc 1 2834 0
 4479 001e 5A68     		ldr	r2, [r3, #4]
 4480 0020 12F0080F 		tst	r2, #8
 4481 0024 4ED0     		beq	.L470
 4482              	.L469:
2837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4483              		.loc 1 2837 0
 4484 0026 626C     		ldr	r2, [r4, #68]
 4485 0028 12F0100F 		tst	r2, #16
 4486 002c 03D1     		bne	.L471
2840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4487              		.loc 1 2840 0
 4488 002e 626C     		ldr	r2, [r4, #68]
 4489 0030 42F40072 		orr	r2, r2, #512
 4490 0034 6264     		str	r2, [r4, #68]
 4491              	.L471:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 221


2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4492              		.loc 1 2846 0
 4493 0036 A74A     		ldr	r2, .L505
 4494 0038 9268     		ldr	r2, [r2, #8]
 4495 003a 12F01F0F 		tst	r2, #31
 4496 003e 12D0     		beq	.L472
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4497              		.loc 1 2846 0 is_stmt 0 discriminator 1
 4498 0040 A44A     		ldr	r2, .L505
 4499 0042 9268     		ldr	r2, [r2, #8]
 4500 0044 02F01F02 		and	r2, r2, #31
 4501 0048 052A     		cmp	r2, #5
 4502 004a 0CD0     		beq	.L472
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4503              		.loc 1 2846 0 discriminator 2
 4504 004c A14A     		ldr	r2, .L505
 4505 004e 9268     		ldr	r2, [r2, #8]
 4506 0050 02F01F02 		and	r2, r2, #31
 4507 0054 092A     		cmp	r2, #9
 4508 0056 06D0     		beq	.L472
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4509              		.loc 1 2846 0 discriminator 3
 4510 0058 B3F1A04F 		cmp	r3, #1342177280
 4511 005c 03D0     		beq	.L472
2852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4512              		.loc 1 2852 0 is_stmt 1
 4513 005e 4FF0A042 		mov	r2, #1342177280
 4514 0062 D168     		ldr	r1, [r2, #12]
 4515              	.LVL347:
 4516 0064 00E0     		b	.L474
 4517              	.LVL348:
 4518              	.L472:
2848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4519              		.loc 1 2848 0
 4520 0066 D968     		ldr	r1, [r3, #12]
 4521              	.LVL349:
 4522              	.L474:
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == RESET)  )
 4523              		.loc 1 2858 0
 4524 0068 DA68     		ldr	r2, [r3, #12]
 4525 006a 12F4406F 		tst	r2, #3072
 4526 006e 23D1     		bne	.L475
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == RESET)  )
 4527              		.loc 1 2858 0 is_stmt 0 discriminator 1
 4528 0070 11F4005F 		tst	r1, #8192
 4529 0074 20D1     		bne	.L475
2862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 4530              		.loc 1 2862 0 is_stmt 1
 4531 0076 1A68     		ldr	r2, [r3]
 4532 0078 12F0080F 		tst	r2, #8
 4533 007c 1CD0     		beq	.L475
2866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 4534              		.loc 1 2866 0
 4535 007e 9A68     		ldr	r2, [r3, #8]
 4536 0080 12F0040F 		tst	r2, #4
 4537 0084 10D1     		bne	.L476
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 222


 4538              		.loc 1 2872 0
 4539 0086 5A68     		ldr	r2, [r3, #4]
 4540 0088 22F00C02 		bic	r2, r2, #12
 4541 008c 5A60     		str	r2, [r3, #4]
2875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 4542              		.loc 1 2875 0
 4543 008e 636C     		ldr	r3, [r4, #68]
 4544 0090 23F48073 		bic	r3, r3, #256
 4545 0094 6364     		str	r3, [r4, #68]
2877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 4546              		.loc 1 2877 0
 4547 0096 636C     		ldr	r3, [r4, #68]
 4548 0098 13F4805F 		tst	r3, #4096
 4549 009c 0CD1     		bne	.L475
2879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 4550              		.loc 1 2879 0
 4551 009e 636C     		ldr	r3, [r4, #68]
 4552 00a0 43F00103 		orr	r3, r3, #1
 4553 00a4 6364     		str	r3, [r4, #68]
 4554 00a6 07E0     		b	.L475
 4555              	.L476:
2885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 4556              		.loc 1 2885 0
 4557 00a8 636C     		ldr	r3, [r4, #68]
 4558 00aa 43F01003 		orr	r3, r3, #16
 4559 00ae 6364     		str	r3, [r4, #68]
2888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 4560              		.loc 1 2888 0
 4561 00b0 A36C     		ldr	r3, [r4, #72]
 4562 00b2 43F00103 		orr	r3, r3, #1
 4563 00b6 A364     		str	r3, [r4, #72]
 4564              	.L475:
2897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4565              		.loc 1 2897 0
 4566 00b8 2046     		mov	r0, r4
 4567              	.LVL350:
 4568 00ba FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 4569              	.LVL351:
2906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4570              		.loc 1 2906 0
 4571 00be 2368     		ldr	r3, [r4]
 4572 00c0 0C22     		movs	r2, #12
 4573 00c2 1A60     		str	r2, [r3]
 4574              	.L470:
2911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOS))   )
 4575              		.loc 1 2911 0
 4576 00c4 2368     		ldr	r3, [r4]
 4577 00c6 1A68     		ldr	r2, [r3]
 4578 00c8 12F0200F 		tst	r2, #32
 4579 00cc 03D0     		beq	.L477
2911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOS))   )
 4580              		.loc 1 2911 0 is_stmt 0 discriminator 1
 4581 00ce 5A68     		ldr	r2, [r3, #4]
 4582 00d0 12F0200F 		tst	r2, #32
 4583 00d4 07D1     		bne	.L478
 4584              	.L477:
2912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 223


 4585              		.loc 1 2912 0 is_stmt 1 discriminator 3
 4586 00d6 1A68     		ldr	r2, [r3]
2911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOS))   )
 4587              		.loc 1 2911 0 discriminator 3
 4588 00d8 12F0400F 		tst	r2, #64
 4589 00dc 71D0     		beq	.L479
2912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4590              		.loc 1 2912 0
 4591 00de 5A68     		ldr	r2, [r3, #4]
 4592 00e0 12F0400F 		tst	r2, #64
 4593 00e4 6DD0     		beq	.L479
 4594              	.L478:
2915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 4595              		.loc 1 2915 0
 4596 00e6 626C     		ldr	r2, [r4, #68]
 4597 00e8 42F40052 		orr	r2, r2, #8192
 4598 00ec 6264     		str	r2, [r4, #68]
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4599              		.loc 1 2920 0
 4600 00ee 794A     		ldr	r2, .L505
 4601 00f0 9268     		ldr	r2, [r2, #8]
 4602 00f2 12F01F0F 		tst	r2, #31
 4603 00f6 12D0     		beq	.L480
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4604              		.loc 1 2920 0 is_stmt 0 discriminator 1
 4605 00f8 764A     		ldr	r2, .L505
 4606 00fa 9268     		ldr	r2, [r2, #8]
 4607 00fc 02F01F02 		and	r2, r2, #31
 4608 0100 052A     		cmp	r2, #5
 4609 0102 0CD0     		beq	.L480
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4610              		.loc 1 2920 0 discriminator 2
 4611 0104 734A     		ldr	r2, .L505
 4612 0106 9268     		ldr	r2, [r2, #8]
 4613 0108 02F01F02 		and	r2, r2, #31
 4614 010c 092A     		cmp	r2, #9
 4615 010e 06D0     		beq	.L480
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4616              		.loc 1 2920 0 discriminator 3
 4617 0110 B3F1A04F 		cmp	r3, #1342177280
 4618 0114 03D0     		beq	.L480
2926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4619              		.loc 1 2926 0 is_stmt 1
 4620 0116 4FF0A042 		mov	r2, #1342177280
 4621 011a D168     		ldr	r1, [r2, #12]
 4622              	.LVL352:
 4623 011c 00E0     		b	.L482
 4624              	.LVL353:
 4625              	.L480:
2922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4626              		.loc 1 2922 0
 4627 011e D968     		ldr	r1, [r3, #12]
 4628              	.LVL354:
 4629              	.L482:
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 4630              		.loc 1 2934 0
 4631 0120 DA6C     		ldr	r2, [r3, #76]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 224


 4632 0122 12F0C00F 		tst	r2, #192
 4633 0126 09D0     		beq	.L483
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 4634              		.loc 1 2934 0 is_stmt 0 discriminator 1
 4635 0128 11F0007F 		tst	r1, #33554432
 4636 012c 43D1     		bne	.L484
2936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
 4637              		.loc 1 2936 0 is_stmt 1
 4638 012e DA68     		ldr	r2, [r3, #12]
2935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
 4639              		.loc 1 2935 0
 4640 0130 12F4406F 		tst	r2, #3072
 4641 0134 3FD1     		bne	.L484
2936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
 4642              		.loc 1 2936 0
 4643 0136 11F4005F 		tst	r1, #8192
 4644 013a 3CD1     		bne	.L484
 4645              	.L483:
2940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 4646              		.loc 1 2940 0
 4647 013c 1A68     		ldr	r2, [r3]
 4648 013e 12F0400F 		tst	r2, #64
 4649 0142 38D0     		beq	.L484
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 4650              		.loc 1 2946 0
 4651 0144 634A     		ldr	r2, .L505
 4652 0146 9268     		ldr	r2, [r2, #8]
 4653 0148 12F01F0F 		tst	r2, #31
 4654 014c 12D0     		beq	.L485
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 4655              		.loc 1 2946 0 is_stmt 0 discriminator 1
 4656 014e 614A     		ldr	r2, .L505
 4657 0150 9268     		ldr	r2, [r2, #8]
 4658 0152 02F01F02 		and	r2, r2, #31
 4659 0156 062A     		cmp	r2, #6
 4660 0158 0CD0     		beq	.L485
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 4661              		.loc 1 2946 0 discriminator 2
 4662 015a 5E4A     		ldr	r2, .L505
 4663 015c 9268     		ldr	r2, [r2, #8]
 4664 015e 02F01F02 		and	r2, r2, #31
 4665 0162 072A     		cmp	r2, #7
 4666 0164 06D0     		beq	.L485
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 4667              		.loc 1 2946 0 discriminator 3
 4668 0166 B3F1A04F 		cmp	r3, #1342177280
 4669 016a 03D0     		beq	.L485
2952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 4670              		.loc 1 2952 0 is_stmt 1
 4671 016c 4FF0A042 		mov	r2, #1342177280
 4672 0170 D268     		ldr	r2, [r2, #12]
 4673              	.LVL355:
 4674 0172 00E0     		b	.L487
 4675              	.LVL356:
 4676              	.L485:
2948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 4677              		.loc 1 2948 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 225


 4678 0174 DA68     		ldr	r2, [r3, #12]
 4679              	.LVL357:
 4680              	.L487:
2961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 4681              		.loc 1 2961 0
 4682 0176 12F4001F 		tst	r2, #2097152
 4683 017a 1CD1     		bne	.L484
2965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 4684              		.loc 1 2965 0
 4685 017c 9A68     		ldr	r2, [r3, #8]
 4686              	.LVL358:
 4687 017e 12F0080F 		tst	r2, #8
 4688 0182 10D1     		bne	.L488
2968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             
 4689              		.loc 1 2968 0
 4690 0184 5A68     		ldr	r2, [r3, #4]
 4691 0186 22F06002 		bic	r2, r2, #96
 4692 018a 5A60     		str	r2, [r3, #4]
2971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4693              		.loc 1 2971 0
 4694 018c 636C     		ldr	r3, [r4, #68]
 4695 018e 23F48053 		bic	r3, r3, #4096
 4696 0192 6364     		str	r3, [r4, #68]
2973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             { 
 4697              		.loc 1 2973 0
 4698 0194 636C     		ldr	r3, [r4, #68]
 4699 0196 13F4807F 		tst	r3, #256
 4700 019a 0CD1     		bne	.L484
2975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             }
 4701              		.loc 1 2975 0
 4702 019c 636C     		ldr	r3, [r4, #68]
 4703 019e 43F00103 		orr	r3, r3, #1
 4704 01a2 6364     		str	r3, [r4, #68]
 4705 01a4 07E0     		b	.L484
 4706              	.L488:
2981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 4707              		.loc 1 2981 0
 4708 01a6 636C     		ldr	r3, [r4, #68]
 4709 01a8 43F01003 		orr	r3, r3, #16
 4710 01ac 6364     		str	r3, [r4, #68]
2984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 4711              		.loc 1 2984 0
 4712 01ae A36C     		ldr	r3, [r4, #72]
 4713 01b0 43F00103 		orr	r3, r3, #1
 4714 01b4 A364     		str	r3, [r4, #72]
 4715              	.L484:
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4716              		.loc 1 2994 0
 4717 01b6 2046     		mov	r0, r4
 4718 01b8 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 4719              	.LVL359:
2997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4720              		.loc 1 2997 0
 4721 01bc 2368     		ldr	r3, [r4]
 4722 01be 6022     		movs	r2, #96
 4723 01c0 1A60     		str	r2, [r3]
 4724              	.L479:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 226


3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4725              		.loc 1 3001 0
 4726 01c2 2368     		ldr	r3, [r4]
 4727 01c4 1A68     		ldr	r2, [r3]
 4728 01c6 12F0800F 		tst	r2, #128
 4729 01ca 03D0     		beq	.L489
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4730              		.loc 1 3001 0 is_stmt 0 discriminator 1
 4731 01cc 5B68     		ldr	r3, [r3, #4]
 4732 01ce 13F0800F 		tst	r3, #128
 4733 01d2 36D1     		bne	.L500
 4734              	.L489:
3013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4735              		.loc 1 3013 0 is_stmt 1
 4736 01d4 2368     		ldr	r3, [r4]
 4737 01d6 1A68     		ldr	r2, [r3]
 4738 01d8 12F4807F 		tst	r2, #256
 4739 01dc 03D0     		beq	.L490
3013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4740              		.loc 1 3013 0 is_stmt 0 discriminator 1
 4741 01de 5B68     		ldr	r3, [r3, #4]
 4742 01e0 13F4807F 		tst	r3, #256
 4743 01e4 38D1     		bne	.L501
 4744              	.L490:
3025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4745              		.loc 1 3025 0 is_stmt 1
 4746 01e6 2368     		ldr	r3, [r4]
 4747 01e8 1A68     		ldr	r2, [r3]
 4748 01ea 12F4007F 		tst	r2, #512
 4749 01ee 03D0     		beq	.L491
3025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4750              		.loc 1 3025 0 is_stmt 0 discriminator 1
 4751 01f0 5B68     		ldr	r3, [r3, #4]
 4752 01f2 13F4007F 		tst	r3, #512
 4753 01f6 3BD1     		bne	.L502
 4754              	.L491:
3037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4755              		.loc 1 3037 0 is_stmt 1
 4756 01f8 2368     		ldr	r3, [r4]
 4757 01fa 1A68     		ldr	r2, [r3]
 4758 01fc 12F0100F 		tst	r2, #16
 4759 0200 15D0     		beq	.L492
3037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4760              		.loc 1 3037 0 is_stmt 0 discriminator 1
 4761 0202 5A68     		ldr	r2, [r3, #4]
 4762 0204 12F0100F 		tst	r2, #16
 4763 0208 11D0     		beq	.L492
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4764              		.loc 1 3045 0 is_stmt 1
 4765 020a A26B     		ldr	r2, [r4, #56]
 4766 020c 012A     		cmp	r2, #1
 4767 020e 09D0     		beq	.L493
 4768              	.LVL360:
3057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 4769              		.loc 1 3057 0
 4770 0210 304A     		ldr	r2, .L505
 4771 0212 9268     		ldr	r2, [r2, #8]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 227


 4772 0214 12F01F0F 		tst	r2, #31
 4773 0218 36D1     		bne	.L494
3059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 4774              		.loc 1 3059 0
 4775 021a DB68     		ldr	r3, [r3, #12]
 4776 021c 13F0010F 		tst	r3, #1
 4777 0220 39D1     		bne	.L497
2822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 4778              		.loc 1 2822 0
 4779 0222 0022     		movs	r2, #0
 4780              	.LVL361:
 4781              	.L493:
3074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4782              		.loc 1 3074 0
 4783 0224 012A     		cmp	r2, #1
 4784 0226 3AD0     		beq	.L503
 4785              	.LVL362:
 4786              	.L495:
3087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 4787              		.loc 1 3087 0
 4788 0228 2368     		ldr	r3, [r4]
 4789 022a 1022     		movs	r2, #16
 4790 022c 1A60     		str	r2, [r3]
 4791              	.L492:
3093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4792              		.loc 1 3093 0
 4793 022e 2368     		ldr	r3, [r4]
 4794 0230 1A68     		ldr	r2, [r3]
 4795 0232 12F4806F 		tst	r2, #1024
 4796 0236 03D0     		beq	.L467
3093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4797              		.loc 1 3093 0 is_stmt 0 discriminator 1
 4798 0238 5A68     		ldr	r2, [r3, #4]
 4799 023a 12F4806F 		tst	r2, #1024
 4800 023e 3AD1     		bne	.L504
 4801              	.L467:
 4802 0240 10BD     		pop	{r4, pc}
 4803              	.LVL363:
 4804              	.L500:
3004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4805              		.loc 1 3004 0 is_stmt 1
 4806 0242 636C     		ldr	r3, [r4, #68]
 4807 0244 43F48033 		orr	r3, r3, #65536
 4808 0248 6364     		str	r3, [r4, #68]
3007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
 4809              		.loc 1 3007 0
 4810 024a 2046     		mov	r0, r4
 4811 024c FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 4812              	.LVL364:
3009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4813              		.loc 1 3009 0
 4814 0250 2368     		ldr	r3, [r4]
 4815 0252 8022     		movs	r2, #128
 4816 0254 1A60     		str	r2, [r3]
 4817 0256 BDE7     		b	.L489
 4818              	.L501:
3016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 228


 4819              		.loc 1 3016 0
 4820 0258 636C     		ldr	r3, [r4, #68]
 4821 025a 43F40033 		orr	r3, r3, #131072
 4822 025e 6364     		str	r3, [r4, #68]
3019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
 4823              		.loc 1 3019 0
 4824 0260 2046     		mov	r0, r4
 4825 0262 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 4826              	.LVL365:
3021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   } 
 4827              		.loc 1 3021 0
 4828 0266 2368     		ldr	r3, [r4]
 4829 0268 4FF48072 		mov	r2, #256
 4830 026c 1A60     		str	r2, [r3]
 4831 026e BAE7     		b	.L490
 4832              	.L502:
3028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4833              		.loc 1 3028 0
 4834 0270 636C     		ldr	r3, [r4, #68]
 4835 0272 43F48023 		orr	r3, r3, #262144
 4836 0276 6364     		str	r3, [r4, #68]
3031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
 4837              		.loc 1 3031 0
 4838 0278 2046     		mov	r0, r4
 4839 027a FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 4840              	.LVL366:
3033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4841              		.loc 1 3033 0
 4842 027e 2368     		ldr	r3, [r4]
 4843 0280 4FF40072 		mov	r2, #512
 4844 0284 1A60     		str	r2, [r3]
 4845 0286 B7E7     		b	.L491
 4846              	.LVL367:
 4847              	.L494:
3067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 4848              		.loc 1 3067 0
 4849 0288 124B     		ldr	r3, .L505
 4850 028a 9B68     		ldr	r3, [r3, #8]
 4851 028c 13F4404F 		tst	r3, #49152
 4852 0290 03D1     		bne	.L498
2822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 4853              		.loc 1 2822 0
 4854 0292 0022     		movs	r2, #0
 4855 0294 C6E7     		b	.L493
 4856              	.L497:
3061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 4857              		.loc 1 3061 0
 4858 0296 0122     		movs	r2, #1
 4859 0298 C4E7     		b	.L493
 4860              	.L498:
3069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 4861              		.loc 1 3069 0
 4862 029a 0122     		movs	r2, #1
 4863 029c C2E7     		b	.L493
 4864              	.LVL368:
 4865              	.L503:
3077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 229


 4866              		.loc 1 3077 0
 4867 029e 636C     		ldr	r3, [r4, #68]
 4868 02a0 43F48063 		orr	r3, r3, #1024
 4869 02a4 6364     		str	r3, [r4, #68]
3080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 4870              		.loc 1 3080 0
 4871 02a6 A36C     		ldr	r3, [r4, #72]
 4872 02a8 43F00203 		orr	r3, r3, #2
 4873 02ac A364     		str	r3, [r4, #72]
3083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 4874              		.loc 1 3083 0
 4875 02ae 2046     		mov	r0, r4
 4876 02b0 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 4877              	.LVL369:
 4878 02b4 B8E7     		b	.L495
 4879              	.L504:
3096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4880              		.loc 1 3096 0
 4881 02b6 626C     		ldr	r2, [r4, #68]
 4882 02b8 42F48042 		orr	r2, r2, #16384
 4883 02bc 6264     		str	r2, [r4, #68]
3099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4884              		.loc 1 3099 0
 4885 02be A26C     		ldr	r2, [r4, #72]
 4886 02c0 42F00802 		orr	r2, r2, #8
 4887 02c4 A264     		str	r2, [r4, #72]
3102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4888              		.loc 1 3102 0
 4889 02c6 4FF48062 		mov	r2, #1024
 4890 02ca 1A60     		str	r2, [r3]
3105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 4891              		.loc 1 3105 0
 4892 02cc 2046     		mov	r0, r4
 4893 02ce FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 4894              	.LVL370:
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 4895              		.loc 1 3108 0
 4896 02d2 B5E7     		b	.L467
 4897              	.L506:
 4898              		.align	2
 4899              	.L505:
 4900 02d4 00030050 		.word	1342178048
 4901              		.cfi_endproc
 4902              	.LFE135:
 4904              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 4905              		.align	1
 4906              		.global	HAL_ADC_ConfigChannel
 4907              		.syntax unified
 4908              		.thumb
 4909              		.thumb_func
 4910              		.fpu fpv4-sp-d16
 4912              	HAL_ADC_ConfigChannel:
 4913              	.LFB156:
5433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4914              		.loc 1 5433 0
 4915              		.cfi_startproc
 4916              		@ args = 0, pretend = 0, frame = 88
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 230


 4917              		@ frame_needed = 0, uses_anonymous_args = 0
 4918              		@ link register save eliminated.
 4919              	.LVL371:
 4920 0000 70B4     		push	{r4, r5, r6}
 4921              	.LCFI48:
 4922              		.cfi_def_cfa_offset 12
 4923              		.cfi_offset 4, -12
 4924              		.cfi_offset 5, -8
 4925              		.cfi_offset 6, -4
 4926 0002 97B0     		sub	sp, sp, #92
 4927              	.LCFI49:
 4928              		.cfi_def_cfa_offset 104
 4929              	.LVL372:
5438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4930              		.loc 1 5438 0
 4931 0004 0022     		movs	r2, #0
 4932 0006 0092     		str	r2, [sp]
5462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4933              		.loc 1 5462 0
 4934 0008 90F84020 		ldrb	r2, [r0, #64]	@ zero_extendqisi2
 4935 000c 012A     		cmp	r2, #1
 4936 000e 00F0AD81 		beq	.L544
 4937 0012 0346     		mov	r3, r0
5462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 4938              		.loc 1 5462 0 is_stmt 0 discriminator 2
 4939 0014 0122     		movs	r2, #1
 4940 0016 80F84020 		strb	r2, [r0, #64]
5470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4941              		.loc 1 5470 0 is_stmt 1 discriminator 2
 4942 001a 0068     		ldr	r0, [r0]
 4943              	.LVL373:
 4944 001c 8268     		ldr	r2, [r0, #8]
 4945 001e 12F0040F 		tst	r2, #4
 4946 0022 40F09681 		bne	.L509
5474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4947              		.loc 1 5474 0
 4948 0026 4A68     		ldr	r2, [r1, #4]
 4949 0028 042A     		cmp	r2, #4
 4950 002a 31D8     		bhi	.L510
5476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_RK(ADC_SQR2_SQ5, sConfig->Rank)    ,
 4951              		.loc 1 5476 0
 4952 002c 046B     		ldr	r4, [r0, #48]
 4953 002e 02EB4202 		add	r2, r2, r2, lsl #1
 4954 0032 5500     		lsls	r5, r2, #1
 4955 0034 1F22     		movs	r2, #31
 4956 0036 AA40     		lsls	r2, r2, r5
 4957 0038 24EA0202 		bic	r2, r4, r2
 4958 003c 0C68     		ldr	r4, [r1]
 4959 003e AC40     		lsls	r4, r4, r5
 4960 0040 2243     		orrs	r2, r2, r4
 4961 0042 0263     		str	r2, [r0, #48]
 4962              	.L511:
5508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 4963              		.loc 1 5508 0
 4964 0044 1868     		ldr	r0, [r3]
 4965 0046 8268     		ldr	r2, [r0, #8]
 4966 0048 12F00C0F 		tst	r2, #12
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 231


 4967 004c 68D1     		bne	.L514
5512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4968              		.loc 1 5512 0
 4969 004e 0A68     		ldr	r2, [r1]
 4970 0050 092A     		cmp	r2, #9
 4971 0052 4ED9     		bls	.L515
5514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel)      ,
 4972              		.loc 1 5514 0
 4973 0054 8469     		ldr	r4, [r0, #24]
 4974 0056 02EB4202 		add	r2, r2, r2, lsl #1
 4975 005a 1E3A     		subs	r2, r2, #30
 4976 005c 0725     		movs	r5, #7
 4977 005e 9540     		lsls	r5, r5, r2
 4978 0060 24EA0504 		bic	r4, r4, r5
 4979 0064 8D68     		ldr	r5, [r1, #8]
 4980 0066 05FA02F2 		lsl	r2, r5, r2
 4981 006a 2243     		orrs	r2, r2, r4
 4982 006c 8261     		str	r2, [r0, #24]
 4983              	.L516:
5531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 4984              		.loc 1 5531 0
 4985 006e 4869     		ldr	r0, [r1, #20]
 4986 0070 1C68     		ldr	r4, [r3]
 4987 0072 E268     		ldr	r2, [r4, #12]
 4988 0074 C2F3C102 		ubfx	r2, r2, #3, #2
 4989 0078 5200     		lsls	r2, r2, #1
 4990 007a 00FA02F2 		lsl	r2, r0, r2
 4991              	.LVL374:
5537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4992              		.loc 1 5537 0
 4993 007e 0869     		ldr	r0, [r1, #16]
 4994 0080 0138     		subs	r0, r0, #1
 4995 0082 0328     		cmp	r0, #3
 4996 0084 00F28F80 		bhi	.L517
 4997 0088 DFE800F0 		tbb	[pc, r0]
 4998              	.L519:
 4999 008c 40       		.byte	(.L518-.L519)/2
 5000 008d 6C       		.byte	(.L520-.L519)/2
 5001 008e 77       		.byte	(.L521-.L519)/2
 5002 008f 82       		.byte	(.L522-.L519)/2
 5003              	.LVL375:
 5004              		.p2align 1
 5005              	.L510:
5481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5006              		.loc 1 5481 0
 5007 0090 092A     		cmp	r2, #9
 5008 0092 0ED8     		bhi	.L512
5483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR2_RK(ADC_SQR2_SQ5, sConfig->Rank)    ,
 5009              		.loc 1 5483 0
 5010 0094 446B     		ldr	r4, [r0, #52]
 5011 0096 02EB4202 		add	r2, r2, r2, lsl #1
 5012 009a 5500     		lsls	r5, r2, #1
 5013 009c 1E3D     		subs	r5, r5, #30
 5014 009e 1F22     		movs	r2, #31
 5015 00a0 AA40     		lsls	r2, r2, r5
 5016 00a2 24EA0202 		bic	r2, r4, r2
 5017 00a6 0C68     		ldr	r4, [r1]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 232


 5018 00a8 04FA05F5 		lsl	r5, r4, r5
 5019 00ac 2A43     		orrs	r2, r2, r5
 5020 00ae 4263     		str	r2, [r0, #52]
 5021 00b0 C8E7     		b	.L511
 5022              	.L512:
5488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5023              		.loc 1 5488 0
 5024 00b2 0E2A     		cmp	r2, #14
 5025 00b4 0ED8     		bhi	.L513
5490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR3_RK(ADC_SQR3_SQ10, sConfig->Rank)   ,
 5026              		.loc 1 5490 0
 5027 00b6 846B     		ldr	r4, [r0, #56]
 5028 00b8 02EB4202 		add	r2, r2, r2, lsl #1
 5029 00bc 5500     		lsls	r5, r2, #1
 5030 00be 3C3D     		subs	r5, r5, #60
 5031 00c0 1F22     		movs	r2, #31
 5032 00c2 AA40     		lsls	r2, r2, r5
 5033 00c4 24EA0202 		bic	r2, r4, r2
 5034 00c8 0C68     		ldr	r4, [r1]
 5035 00ca 04FA05F5 		lsl	r5, r4, r5
 5036 00ce 2A43     		orrs	r2, r2, r5
 5037 00d0 8263     		str	r2, [r0, #56]
 5038 00d2 B7E7     		b	.L511
 5039              	.L513:
5497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR4_RK(ADC_SQR4_SQ15, sConfig->Rank)   ,
 5040              		.loc 1 5497 0
 5041 00d4 C46B     		ldr	r4, [r0, #60]
 5042 00d6 02EB4202 		add	r2, r2, r2, lsl #1
 5043 00da 5500     		lsls	r5, r2, #1
 5044 00dc 5A3D     		subs	r5, r5, #90
 5045 00de 1F22     		movs	r2, #31
 5046 00e0 AA40     		lsls	r2, r2, r5
 5047 00e2 24EA0202 		bic	r2, r4, r2
 5048 00e6 0C68     		ldr	r4, [r1]
 5049 00e8 04FA05F5 		lsl	r5, r4, r5
 5050 00ec 2A43     		orrs	r2, r2, r5
 5051 00ee C263     		str	r2, [r0, #60]
 5052 00f0 A8E7     		b	.L511
 5053              	.L515:
5520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel)       ,
 5054              		.loc 1 5520 0
 5055 00f2 4469     		ldr	r4, [r0, #20]
 5056 00f4 02EB4202 		add	r2, r2, r2, lsl #1
 5057 00f8 0725     		movs	r5, #7
 5058 00fa 9540     		lsls	r5, r5, r2
 5059 00fc 24EA0504 		bic	r4, r4, r5
 5060 0100 8D68     		ldr	r5, [r1, #8]
 5061 0102 05FA02F2 		lsl	r2, r5, r2
 5062 0106 2243     		orrs	r2, r2, r4
 5063 0108 4261     		str	r2, [r0, #20]
 5064 010a B0E7     		b	.L516
 5065              	.LVL376:
 5066              	.L518:
5541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_CH |
 5067              		.loc 1 5541 0
 5068 010c 206E     		ldr	r0, [r4, #96]
 5069 010e 984D     		ldr	r5, .L567
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 233


 5070 0110 0540     		ands	r5, r5, r0
 5071 0112 0868     		ldr	r0, [r1]
 5072 0114 42EA8062 		orr	r2, r2, r0, lsl #26
 5073              	.LVL377:
 5074 0118 1543     		orrs	r5, r5, r2
 5075 011a 45F00045 		orr	r5, r5, #-2147483648
 5076 011e 2566     		str	r5, [r4, #96]
 5077              	.L514:
5613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5078              		.loc 1 5613 0
 5079 0120 1868     		ldr	r0, [r3]
 5080 0122 8268     		ldr	r2, [r0, #8]
 5081 0124 02F00302 		and	r2, r2, #3
 5082 0128 012A     		cmp	r2, #1
 5083 012a 6FD0     		beq	.L554
 5084 012c 0022     		movs	r2, #0
 5085              	.L526:
5613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5086              		.loc 1 5613 0 is_stmt 0 discriminator 6
 5087 012e 002A     		cmp	r2, #0
 5088 0130 40F01A81 		bne	.L547
5616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5089              		.loc 1 5616 0 is_stmt 1
 5090 0134 CC68     		ldr	r4, [r1, #12]
 5091 0136 012C     		cmp	r4, #1
 5092 0138 70D0     		beq	.L528
5619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5093              		.loc 1 5619 0
 5094 013a D0F8B040 		ldr	r4, [r0, #176]
 5095 013e 0E68     		ldr	r6, [r1]
 5096 0140 0125     		movs	r5, #1
 5097 0142 B540     		lsls	r5, r5, r6
 5098 0144 24EA0504 		bic	r4, r4, r5
 5099 0148 C0F8B040 		str	r4, [r0, #176]
 5100              	.L529:
 5101              	.LVL378:
5658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 5102              		.loc 1 5658 0
 5103 014c 0968     		ldr	r1, [r1]
 5104              	.LVL379:
 5105 014e 1029     		cmp	r1, #16
 5106 0150 00F08D80 		beq	.L555
 5107              	.L531:
5659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VBAT)       &&
 5108              		.loc 1 5659 0
 5109 0154 1129     		cmp	r1, #17
 5110 0156 00F0AF80 		beq	.L556
 5111              	.L533:
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
 5112              		.loc 1 5661 0
 5113 015a 1229     		cmp	r1, #18
 5114 015c 00F0B280 		beq	.L557
5434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5115              		.loc 1 5434 0
 5116 0160 0020     		movs	r0, #0
 5117 0162 FBE0     		b	.L527
 5118              	.LVL380:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 234


 5119              	.L520:
5551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_CH |
 5120              		.loc 1 5551 0
 5121 0164 606E     		ldr	r0, [r4, #100]
 5122 0166 824D     		ldr	r5, .L567
 5123 0168 0540     		ands	r5, r5, r0
 5124 016a 0868     		ldr	r0, [r1]
 5125 016c 42EA8062 		orr	r2, r2, r0, lsl #26
 5126              	.LVL381:
 5127 0170 1543     		orrs	r5, r5, r2
 5128 0172 45F00045 		orr	r5, r5, #-2147483648
 5129 0176 6566     		str	r5, [r4, #100]
5557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 5130              		.loc 1 5557 0
 5131 0178 D2E7     		b	.L514
 5132              	.LVL382:
 5133              	.L521:
5561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_CH |
 5134              		.loc 1 5561 0
 5135 017a A06E     		ldr	r0, [r4, #104]
 5136 017c 7C4D     		ldr	r5, .L567
 5137 017e 0540     		ands	r5, r5, r0
 5138 0180 0868     		ldr	r0, [r1]
 5139 0182 42EA8062 		orr	r2, r2, r0, lsl #26
 5140              	.LVL383:
 5141 0186 1543     		orrs	r5, r5, r2
 5142 0188 45F00045 		orr	r5, r5, #-2147483648
 5143 018c A566     		str	r5, [r4, #104]
5567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5144              		.loc 1 5567 0
 5145 018e C7E7     		b	.L514
 5146              	.LVL384:
 5147              	.L522:
5571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_CH |
 5148              		.loc 1 5571 0
 5149 0190 E56E     		ldr	r5, [r4, #108]
 5150 0192 7748     		ldr	r0, .L567
 5151 0194 2840     		ands	r0, r0, r5
 5152 0196 0D68     		ldr	r5, [r1]
 5153 0198 42EA8562 		orr	r2, r2, r5, lsl #26
 5154              	.LVL385:
 5155 019c 0243     		orrs	r2, r2, r0
 5156 019e 42F00042 		orr	r2, r2, #-2147483648
 5157 01a2 E266     		str	r2, [r4, #108]
5577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5158              		.loc 1 5577 0
 5159 01a4 BCE7     		b	.L514
 5160              	.LVL386:
 5161              	.L517:
5583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5162              		.loc 1 5583 0
 5163 01a6 226E     		ldr	r2, [r4, #96]
 5164              	.LVL387:
 5165 01a8 02F0F842 		and	r2, r2, #2080374784
 5166 01ac 0868     		ldr	r0, [r1]
 5167 01ae B2EB806F 		cmp	r2, r0, lsl #26
 5168 01b2 1CD0     		beq	.L558
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 235


 5169              	.L523:
5588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5170              		.loc 1 5588 0
 5171 01b4 1868     		ldr	r0, [r3]
 5172 01b6 426E     		ldr	r2, [r0, #100]
 5173 01b8 02F0F842 		and	r2, r2, #2080374784
 5174 01bc 0C68     		ldr	r4, [r1]
 5175 01be B2EB846F 		cmp	r2, r4, lsl #26
 5176 01c2 19D0     		beq	.L559
 5177              	.L524:
5593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5178              		.loc 1 5593 0
 5179 01c4 1868     		ldr	r0, [r3]
 5180 01c6 826E     		ldr	r2, [r0, #104]
 5181 01c8 02F0F842 		and	r2, r2, #2080374784
 5182 01cc 0C68     		ldr	r4, [r1]
 5183 01ce B2EB846F 		cmp	r2, r4, lsl #26
 5184 01d2 16D0     		beq	.L560
 5185              	.L525:
5598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5186              		.loc 1 5598 0
 5187 01d4 1868     		ldr	r0, [r3]
 5188 01d6 C26E     		ldr	r2, [r0, #108]
 5189 01d8 02F0F842 		and	r2, r2, #2080374784
 5190 01dc 0C68     		ldr	r4, [r1]
 5191 01de B2EB846F 		cmp	r2, r4, lsl #26
 5192 01e2 9DD1     		bne	.L514
5601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5193              		.loc 1 5601 0
 5194 01e4 C26E     		ldr	r2, [r0, #108]
 5195 01e6 22F00042 		bic	r2, r2, #-2147483648
 5196 01ea C266     		str	r2, [r0, #108]
 5197 01ec 98E7     		b	.L514
 5198              	.L558:
5586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5199              		.loc 1 5586 0
 5200 01ee 226E     		ldr	r2, [r4, #96]
 5201 01f0 22F00042 		bic	r2, r2, #-2147483648
 5202 01f4 2266     		str	r2, [r4, #96]
 5203 01f6 DDE7     		b	.L523
 5204              	.L559:
5591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5205              		.loc 1 5591 0
 5206 01f8 426E     		ldr	r2, [r0, #100]
 5207 01fa 22F00042 		bic	r2, r2, #-2147483648
 5208 01fe 4266     		str	r2, [r0, #100]
 5209 0200 E0E7     		b	.L524
 5210              	.L560:
5596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5211              		.loc 1 5596 0
 5212 0202 826E     		ldr	r2, [r0, #104]
 5213 0204 22F00042 		bic	r2, r2, #-2147483648
 5214 0208 8266     		str	r2, [r0, #104]
 5215 020a E3E7     		b	.L525
 5216              	.L554:
5613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5217              		.loc 1 5613 0 discriminator 1
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 236


 5218 020c 0268     		ldr	r2, [r0]
 5219 020e 12F0010F 		tst	r2, #1
 5220 0212 01D1     		bne	.L546
5613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5221              		.loc 1 5613 0 is_stmt 0
 5222 0214 0022     		movs	r2, #0
 5223 0216 8AE7     		b	.L526
 5224              	.L546:
 5225 0218 0122     		movs	r2, #1
 5226 021a 88E7     		b	.L526
 5227              	.L528:
5624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5228              		.loc 1 5624 0 is_stmt 1
 5229 021c D0F8B040 		ldr	r4, [r0, #176]
 5230 0220 0E68     		ldr	r6, [r1]
 5231 0222 0125     		movs	r5, #1
 5232 0224 B540     		lsls	r5, r5, r6
 5233 0226 2C43     		orrs	r4, r4, r5
 5234 0228 C0F8B040 		str	r4, [r0, #176]
5629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5235              		.loc 1 5629 0
 5236 022c 0868     		ldr	r0, [r1]
 5237 022e 0928     		cmp	r0, #9
 5238 0230 0ED9     		bls	.L530
5631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel +1U)      ,
 5239              		.loc 1 5631 0
 5240 0232 1E68     		ldr	r6, [r3]
 5241 0234 B469     		ldr	r4, [r6, #24]
 5242 0236 00EB4000 		add	r0, r0, r0, lsl #1
 5243 023a 1B38     		subs	r0, r0, #27
 5244 023c 0725     		movs	r5, #7
 5245 023e 8540     		lsls	r5, r5, r0
 5246 0240 24EA0504 		bic	r4, r4, r5
 5247 0244 8D68     		ldr	r5, [r1, #8]
 5248 0246 05FA00F0 		lsl	r0, r5, r0
 5249 024a 2043     		orrs	r0, r0, r4
 5250 024c B061     		str	r0, [r6, #24]
 5251 024e 7DE7     		b	.L529
 5252              	.L530:
5637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel +1U)       ,
 5253              		.loc 1 5637 0
 5254 0250 1E68     		ldr	r6, [r3]
 5255 0252 7469     		ldr	r4, [r6, #20]
 5256 0254 0130     		adds	r0, r0, #1
 5257 0256 00EB4000 		add	r0, r0, r0, lsl #1
 5258 025a 0725     		movs	r5, #7
 5259 025c 8540     		lsls	r5, r5, r0
 5260 025e 24EA0504 		bic	r4, r4, r5
 5261 0262 8D68     		ldr	r5, [r1, #8]
 5262 0264 05FA00F0 		lsl	r0, r5, r0
 5263 0268 2043     		orrs	r0, r0, r4
 5264 026a 7061     		str	r0, [r6, #20]
 5265 026c 6EE7     		b	.L529
 5266              	.LVL388:
 5267              	.L555:
5659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VBAT)       &&
 5268              		.loc 1 5659 0 discriminator 1
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 237


 5269 026e 4148     		ldr	r0, .L567+4
 5270 0270 8068     		ldr	r0, [r0, #8]
5658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 5271              		.loc 1 5658 0 discriminator 1
 5272 0272 10F4000F 		tst	r0, #8388608
 5273 0276 7FF46DAF 		bne	.L531
 5274              	.L532:
5668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5275              		.loc 1 5668 0
 5276 027a 1C68     		ldr	r4, [r3]
 5277 027c B4F1A04F 		cmp	r4, #1342177280
 5278 0280 27D0     		beq	.L561
5668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5279              		.loc 1 5668 0 is_stmt 0 discriminator 2
 5280 0282 4FF0A040 		mov	r0, #1342177280
 5281 0286 0190     		str	r0, [sp, #4]
 5282              	.L535:
5672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 5283              		.loc 1 5672 0 is_stmt 1
 5284 0288 A068     		ldr	r0, [r4, #8]
 5285 028a 00F00300 		and	r0, r0, #3
 5286 028e 0128     		cmp	r0, #1
 5287 0290 22D0     		beq	.L562
 5288              	.L536:
5672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 5289              		.loc 1 5672 0 is_stmt 0 discriminator 6
 5290 0292 002A     		cmp	r2, #0
 5291 0294 57D1     		bne	.L537
5673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 5292              		.loc 1 5673 0 is_stmt 1 discriminator 7
 5293 0296 019D     		ldr	r5, [sp, #4]
5672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 5294              		.loc 1 5672 0 discriminator 7
 5295 0298 35B1     		cbz	r5, .L538
5674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5296              		.loc 1 5674 0
 5297 029a A868     		ldr	r0, [r5, #8]
 5298 029c 00F00300 		and	r0, r0, #3
 5299 02a0 0128     		cmp	r0, #1
 5300 02a2 1FD0     		beq	.L563
 5301              	.L539:
5673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 5302              		.loc 1 5673 0
 5303 02a4 002A     		cmp	r2, #0
 5304 02a6 4ED1     		bne	.L537
 5305              	.L538:
5678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5306              		.loc 1 5678 0
 5307 02a8 1029     		cmp	r1, #16
 5308 02aa 21D0     		beq	.L564
 5309              	.L540:
5692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5310              		.loc 1 5692 0
 5311 02ac 1129     		cmp	r1, #17
 5312 02ae 39D0     		beq	.L565
 5313              	.L543:
5700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 238


 5314              		.loc 1 5700 0
 5315 02b0 1229     		cmp	r1, #18
 5316 02b2 41D0     		beq	.L566
5434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5317              		.loc 1 5434 0
 5318 02b4 0020     		movs	r0, #0
 5319 02b6 51E0     		b	.L527
 5320              	.L556:
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
 5321              		.loc 1 5661 0
 5322 02b8 2E48     		ldr	r0, .L567+4
 5323 02ba 8068     		ldr	r0, [r0, #8]
5660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
 5324              		.loc 1 5660 0
 5325 02bc 10F0807F 		tst	r0, #16777216
 5326 02c0 DBD0     		beq	.L532
 5327 02c2 4AE7     		b	.L533
 5328              	.L557:
5663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        )
 5329              		.loc 1 5663 0
 5330 02c4 2B48     		ldr	r0, .L567+4
 5331 02c6 8068     		ldr	r0, [r0, #8]
5662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
 5332              		.loc 1 5662 0
 5333 02c8 10F4800F 		tst	r0, #4194304
 5334 02cc D5D0     		beq	.L532
5434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5335              		.loc 1 5434 0
 5336 02ce 0020     		movs	r0, #0
 5337 02d0 44E0     		b	.L527
 5338              	.L561:
5668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5339              		.loc 1 5668 0 discriminator 1
 5340 02d2 2948     		ldr	r0, .L567+8
 5341 02d4 0190     		str	r0, [sp, #4]
 5342 02d6 D7E7     		b	.L535
 5343              	.L562:
5672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 5344              		.loc 1 5672 0 discriminator 1
 5345 02d8 2068     		ldr	r0, [r4]
 5346 02da 10F0010F 		tst	r0, #1
 5347 02de D8D0     		beq	.L536
5672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 5348              		.loc 1 5672 0 is_stmt 0
 5349 02e0 0122     		movs	r2, #1
 5350 02e2 D6E7     		b	.L536
 5351              	.L563:
5674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5352              		.loc 1 5674 0 is_stmt 1 discriminator 1
 5353 02e4 2868     		ldr	r0, [r5]
 5354 02e6 10F0010F 		tst	r0, #1
 5355 02ea DBD0     		beq	.L539
5674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5356              		.loc 1 5674 0 is_stmt 0
 5357 02ec 0122     		movs	r2, #1
 5358 02ee D9E7     		b	.L539
 5359              	.L564:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 239


5678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5360              		.loc 1 5678 0 is_stmt 1 discriminator 1
 5361 02f0 B4F1A04F 		cmp	r4, #1342177280
 5362 02f4 DAD1     		bne	.L540
5680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 5363              		.loc 1 5680 0
 5364 02f6 1F49     		ldr	r1, .L567+4
 5365 02f8 8A68     		ldr	r2, [r1, #8]
 5366 02fa 42F40002 		orr	r2, r2, #8388608
 5367 02fe 8A60     		str	r2, [r1, #8]
5684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 5368              		.loc 1 5684 0
 5369 0300 1E4A     		ldr	r2, .L567+12
 5370 0302 1268     		ldr	r2, [r2]
 5371 0304 1E49     		ldr	r1, .L567+16
 5372 0306 B2FBF1F1 		udiv	r1, r2, r1
 5373 030a 0A22     		movs	r2, #10
 5374 030c 02FB01F2 		mul	r2, r2, r1
 5375 0310 0092     		str	r2, [sp]
5685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 5376              		.loc 1 5685 0
 5377 0312 02E0     		b	.L541
 5378              	.L542:
5687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 5379              		.loc 1 5687 0
 5380 0314 009A     		ldr	r2, [sp]
 5381 0316 013A     		subs	r2, r2, #1
 5382 0318 0092     		str	r2, [sp]
 5383              	.L541:
5685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 5384              		.loc 1 5685 0
 5385 031a 009A     		ldr	r2, [sp]
 5386 031c 002A     		cmp	r2, #0
 5387 031e F9D1     		bne	.L542
5434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5388              		.loc 1 5434 0
 5389 0320 0020     		movs	r0, #0
 5390 0322 1BE0     		b	.L527
 5391              	.L565:
5692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5392              		.loc 1 5692 0 discriminator 1
 5393 0324 B4F1A04F 		cmp	r4, #1342177280
 5394 0328 C2D1     		bne	.L543
5694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 5395              		.loc 1 5694 0
 5396 032a 1249     		ldr	r1, .L567+4
 5397 032c 8A68     		ldr	r2, [r1, #8]
 5398 032e 42F08072 		orr	r2, r2, #16777216
 5399 0332 8A60     		str	r2, [r1, #8]
5434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5400              		.loc 1 5434 0
 5401 0334 0020     		movs	r0, #0
5694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 5402              		.loc 1 5694 0
 5403 0336 11E0     		b	.L527
 5404              	.L566:
5702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 240


 5405              		.loc 1 5702 0
 5406 0338 0E49     		ldr	r1, .L567+4
 5407 033a 8A68     		ldr	r2, [r1, #8]
 5408 033c 42F48002 		orr	r2, r2, #4194304
 5409 0340 8A60     		str	r2, [r1, #8]
5434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5410              		.loc 1 5434 0
 5411 0342 0020     		movs	r0, #0
 5412 0344 0AE0     		b	.L527
 5413              	.L537:
5711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 5414              		.loc 1 5711 0
 5415 0346 5A6C     		ldr	r2, [r3, #68]
 5416 0348 42F02002 		orr	r2, r2, #32
 5417 034c 5A64     		str	r2, [r3, #68]
 5418              	.LVL389:
5713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5419              		.loc 1 5713 0
 5420 034e 0120     		movs	r0, #1
 5421 0350 04E0     		b	.L527
 5422              	.LVL390:
 5423              	.L509:
5726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5424              		.loc 1 5726 0
 5425 0352 5A6C     		ldr	r2, [r3, #68]
 5426 0354 42F02002 		orr	r2, r2, #32
 5427 0358 5A64     		str	r2, [r3, #68]
 5428              	.LVL391:
5728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 5429              		.loc 1 5728 0
 5430 035a 0120     		movs	r0, #1
 5431              	.LVL392:
 5432              	.L527:
5732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 5433              		.loc 1 5732 0
 5434 035c 0022     		movs	r2, #0
 5435 035e 83F84020 		strb	r2, [r3, #64]
 5436              	.LVL393:
 5437              	.L508:
5736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 5438              		.loc 1 5736 0
 5439 0362 17B0     		add	sp, sp, #92
 5440              	.LCFI50:
 5441              		.cfi_remember_state
 5442              		.cfi_def_cfa_offset 12
 5443              		@ sp needed
 5444 0364 70BC     		pop	{r4, r5, r6}
 5445              	.LCFI51:
 5446              		.cfi_restore 6
 5447              		.cfi_restore 5
 5448              		.cfi_restore 4
 5449              		.cfi_def_cfa_offset 0
 5450 0366 7047     		bx	lr
 5451              	.LVL394:
 5452              	.L547:
 5453              	.LCFI52:
 5454              		.cfi_restore_state
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 241


5434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5455              		.loc 1 5434 0
 5456 0368 0020     		movs	r0, #0
 5457 036a F7E7     		b	.L527
 5458              	.LVL395:
 5459              	.L544:
5462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 5460              		.loc 1 5462 0
 5461 036c 0220     		movs	r0, #2
 5462              	.LVL396:
 5463 036e F8E7     		b	.L508
 5464              	.L568:
 5465              		.align	2
 5466              	.L567:
 5467 0370 00F0FF83 		.word	-2080378880
 5468 0374 00030050 		.word	1342178048
 5469 0378 00010050 		.word	1342177536
 5470 037c 00000000 		.word	SystemCoreClock
 5471 0380 40420F00 		.word	1000000
 5472              		.cfi_endproc
 5473              	.LFE156:
 5475              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 5476              		.align	1
 5477              		.global	HAL_ADCEx_InjectedConfigChannel
 5478              		.syntax unified
 5479              		.thumb
 5480              		.thumb_func
 5481              		.fpu fpv4-sp-d16
 5483              	HAL_ADCEx_InjectedConfigChannel:
 5484              	.LFB157:
5899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5485              		.loc 1 5899 0
 5486              		.cfi_startproc
 5487              		@ args = 0, pretend = 0, frame = 88
 5488              		@ frame_needed = 0, uses_anonymous_args = 0
 5489              		@ link register save eliminated.
 5490              	.LVL397:
 5491 0000 F0B4     		push	{r4, r5, r6, r7}
 5492              	.LCFI53:
 5493              		.cfi_def_cfa_offset 16
 5494              		.cfi_offset 4, -16
 5495              		.cfi_offset 5, -12
 5496              		.cfi_offset 6, -8
 5497              		.cfi_offset 7, -4
 5498 0002 96B0     		sub	sp, sp, #88
 5499              	.LCFI54:
 5500              		.cfi_def_cfa_offset 104
 5501 0004 0346     		mov	r3, r0
 5502              	.LVL398:
5904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 5503              		.loc 1 5904 0
 5504 0006 0022     		movs	r2, #0
 5505 0008 0092     		str	r2, [sp]
 5506              	.LVL399:
5921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5507              		.loc 1 5921 0
 5508 000a 0069     		ldr	r0, [r0, #16]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 242


 5509              	.LVL400:
5941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 5510              		.loc 1 5941 0
 5511 000c 93F84020 		ldrb	r2, [r3, #64]	@ zero_extendqisi2
 5512 0010 012A     		cmp	r2, #1
 5513 0012 00F0F881 		beq	.L613
5941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 5514              		.loc 1 5941 0 is_stmt 0 discriminator 2
 5515 0016 0122     		movs	r2, #1
 5516 0018 83F84020 		strb	r2, [r3, #64]
5964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U)  )
 5517              		.loc 1 5964 0 is_stmt 1 discriminator 2
 5518 001c 0028     		cmp	r0, #0
 5519 001e 33D0     		beq	.L571
5965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5520              		.loc 1 5965 0 discriminator 1
 5521 0020 8A69     		ldr	r2, [r1, #24]
5964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U)  )
 5522              		.loc 1 5964 0 discriminator 1
 5523 0022 012A     		cmp	r2, #1
 5524 0024 30D0     		beq	.L571
6026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5525              		.loc 1 6026 0
 5526 0026 186D     		ldr	r0, [r3, #80]
 5527 0028 60B9     		cbnz	r0, .L577
6030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize value that will be set into register JSQR */
 5528              		.loc 1 6030 0
 5529 002a 1A65     		str	r2, [r3, #80]
6032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5530              		.loc 1 6032 0
 5531 002c 0022     		movs	r2, #0
 5532 002e DA64     		str	r2, [r3, #76]
6044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5533              		.loc 1 6044 0
 5534 0030 8A6A     		ldr	r2, [r1, #40]
 5535 0032 012A     		cmp	r2, #1
 5536 0034 00F08E80 		beq	.L578
6046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Ext
 5537              		.loc 1 6046 0
 5538 0038 8869     		ldr	r0, [r1, #24]
 5539 003a 0138     		subs	r0, r0, #1
 5540 003c 0243     		orrs	r2, r2, r0
 5541 003e C86A     		ldr	r0, [r1, #44]
 5542 0040 0243     		orrs	r2, r2, r0
 5543 0042 DA64     		str	r2, [r3, #76]
 5544              	.L577:
6061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK(ADC_SQR3_SQ10, sConfigInjected->InjectedRank)                   ,
 5545              		.loc 1 6061 0
 5546 0044 DA6C     		ldr	r2, [r3, #76]
 5547 0046 4C68     		ldr	r4, [r1, #4]
 5548 0048 04EB4404 		add	r4, r4, r4, lsl #1
 5549 004c 6000     		lsls	r0, r4, #1
 5550 004e 0230     		adds	r0, r0, #2
 5551 0050 1F24     		movs	r4, #31
 5552 0052 8440     		lsls	r4, r4, r0
 5553 0054 22EA0402 		bic	r2, r2, r4
 5554 0058 0C68     		ldr	r4, [r1]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 243


 5555 005a 04FA00F0 		lsl	r0, r4, r0
 5556 005e 0243     		orrs	r2, r2, r0
 5557 0060 DA64     		str	r2, [r3, #76]
6066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5558              		.loc 1 6066 0
 5559 0062 186D     		ldr	r0, [r3, #80]
 5560 0064 0138     		subs	r0, r0, #1
 5561 0066 1865     		str	r0, [r3, #80]
6070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5562              		.loc 1 6070 0
 5563 0068 0028     		cmp	r0, #0
 5564 006a 77D1     		bne	.L614
6073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ4    |
 5565              		.loc 1 6073 0
 5566 006c 1C68     		ldr	r4, [r3]
 5567 006e E06C     		ldr	r0, [r4, #76]
 5568 0070 20F0FB40 		bic	r0, r0, #2105540608
 5569 0074 20F4EF00 		bic	r0, r0, #7831552
 5570 0078 20F4BF40 		bic	r0, r0, #24448
 5571 007c 20F07F00 		bic	r0, r0, #127
 5572 0080 0243     		orrs	r2, r2, r0
 5573 0082 E264     		str	r2, [r4, #76]
5900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5574              		.loc 1 5900 0
 5575 0084 0020     		movs	r0, #0
 5576 0086 07E0     		b	.L576
 5577              	.L571:
5974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5578              		.loc 1 5974 0
 5579 0088 4A68     		ldr	r2, [r1, #4]
 5580 008a 012A     		cmp	r2, #1
 5581 008c 48D0     		beq	.L620
6011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5582              		.loc 1 6011 0
 5583 008e 5A6C     		ldr	r2, [r3, #68]
 5584 0090 42F02002 		orr	r2, r2, #32
 5585 0094 5A64     		str	r2, [r3, #68]
 5586              	.LVL401:
6013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5587              		.loc 1 6013 0
 5588 0096 0120     		movs	r0, #1
 5589              	.LVL402:
 5590              	.L576:
6094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {     
 5591              		.loc 1 6094 0
 5592 0098 1A68     		ldr	r2, [r3]
 5593 009a 9468     		ldr	r4, [r2, #8]
 5594 009c 14F0080F 		tst	r4, #8
 5595 00a0 0CD1     		bne	.L579
6097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5596              		.loc 1 6097 0
 5597 00a2 0C6A     		ldr	r4, [r1, #32]
 5598 00a4 002C     		cmp	r4, #0
 5599 00a6 5BD1     		bne	.L580
6099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JQM    |
 5600              		.loc 1 6099 0
 5601 00a8 D468     		ldr	r4, [r2, #12]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 244


 5602 00aa 24F44014 		bic	r4, r4, #3145728
 5603 00ae 4E6A     		ldr	r6, [r1, #36]
 5604 00b0 CD69     		ldr	r5, [r1, #28]
 5605 00b2 2D05     		lsls	r5, r5, #20
 5606 00b4 45EA4655 		orr	r5, r5, r6, lsl #21
 5607 00b8 2C43     		orrs	r4, r4, r5
 5608 00ba D460     		str	r4, [r2, #12]
 5609              	.LVL403:
 5610              	.L579:
6135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {    
 5611              		.loc 1 6135 0
 5612 00bc 1A68     		ldr	r2, [r3]
 5613 00be 9468     		ldr	r4, [r2, #8]
 5614 00c0 14F00C0F 		tst	r4, #12
 5615 00c4 40F08280 		bne	.L581
6139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5616              		.loc 1 6139 0
 5617 00c8 8C6A     		ldr	r4, [r1, #40]
 5618 00ca 012C     		cmp	r4, #1
 5619 00cc 58D0     		beq	.L621
6150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5620              		.loc 1 6150 0
 5621 00ce D468     		ldr	r4, [r2, #12]
 5622 00d0 24F00074 		bic	r4, r4, #33554432
 5623 00d4 D460     		str	r4, [r2, #12]
6152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5624              		.loc 1 6152 0
 5625 00d6 0A6A     		ldr	r2, [r1, #32]
 5626 00d8 012A     		cmp	r2, #1
 5627 00da 59D0     		beq	.L622
 5628              	.LVL404:
 5629              	.L583:
6164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5630              		.loc 1 6164 0
 5631 00dc 0A68     		ldr	r2, [r1]
 5632 00de 092A     		cmp	r2, #9
 5633 00e0 5CD9     		bls	.L584
6166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel)                      
 5634              		.loc 1 6166 0
 5635 00e2 1E68     		ldr	r6, [r3]
 5636 00e4 B469     		ldr	r4, [r6, #24]
 5637 00e6 02EB4202 		add	r2, r2, r2, lsl #1
 5638 00ea 1E3A     		subs	r2, r2, #30
 5639 00ec 0725     		movs	r5, #7
 5640 00ee 9540     		lsls	r5, r5, r2
 5641 00f0 24EA0504 		bic	r4, r4, r5
 5642 00f4 8D68     		ldr	r5, [r1, #8]
 5643 00f6 05FA02F2 		lsl	r2, r5, r2
 5644 00fa 2243     		orrs	r2, r2, r4
 5645 00fc B261     		str	r2, [r6, #24]
 5646              	.L585:
6182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5647              		.loc 1 6182 0
 5648 00fe 4C69     		ldr	r4, [r1, #20]
 5649 0100 1D68     		ldr	r5, [r3]
 5650 0102 EA68     		ldr	r2, [r5, #12]
 5651 0104 C2F3C102 		ubfx	r2, r2, #3, #2
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 245


 5652 0108 5200     		lsls	r2, r2, #1
 5653 010a 04FA02F2 		lsl	r2, r4, r2
 5654              	.LVL405:
6188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5655              		.loc 1 6188 0
 5656 010e 0C69     		ldr	r4, [r1, #16]
 5657 0110 013C     		subs	r4, r4, #1
 5658 0112 032C     		cmp	r4, #3
 5659 0114 00F29F80 		bhi	.L586
 5660 0118 DFE804F0 		tbb	[pc, r4]
 5661              	.L588:
 5662 011c 4E       		.byte	(.L587-.L588)/2
 5663 011d 7C       		.byte	(.L589-.L588)/2
 5664 011e 87       		.byte	(.L590-.L588)/2
 5665 011f 92       		.byte	(.L591-.L588)/2
 5666              	.LVL406:
 5667              		.p2align 1
 5668              	.L620:
5981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5669              		.loc 1 5981 0
 5670 0120 8A6A     		ldr	r2, [r1, #40]
 5671 0122 012A     		cmp	r2, #1
 5672 0124 13D0     		beq	.L574
5983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Extern
 5673              		.loc 1 5983 0
 5674 0126 0868     		ldr	r0, [r1]
 5675 0128 42EA0022 		orr	r2, r2, r0, lsl #8
 5676 012c C86A     		ldr	r0, [r1, #44]
 5677 012e 0243     		orrs	r2, r2, r0
 5678              	.LVL407:
 5679              	.L575:
5993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ4    |
 5680              		.loc 1 5993 0
 5681 0130 1C68     		ldr	r4, [r3]
 5682 0132 E06C     		ldr	r0, [r4, #76]
 5683 0134 20F0FB40 		bic	r0, r0, #2105540608
 5684 0138 20F4EF00 		bic	r0, r0, #7831552
 5685 013c 20F4BF40 		bic	r0, r0, #24448
 5686 0140 20F07F00 		bic	r0, r0, #127
 5687 0144 1043     		orrs	r0, r0, r2
 5688 0146 E064     		str	r0, [r4, #76]
6004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5689              		.loc 1 6004 0
 5690 0148 DA64     		str	r2, [r3, #76]
5900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5691              		.loc 1 5900 0
 5692 014a 0020     		movs	r0, #0
 5693 014c A4E7     		b	.L576
 5694              	.LVL408:
 5695              	.L574:
5989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5696              		.loc 1 5989 0
 5697 014e 0A68     		ldr	r2, [r1]
 5698 0150 1202     		lsls	r2, r2, #8
 5699              	.LVL409:
 5700 0152 EDE7     		b	.L575
 5701              	.LVL410:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 246


 5702              	.L578:
6052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5703              		.loc 1 6052 0
 5704 0154 8A69     		ldr	r2, [r1, #24]
 5705 0156 013A     		subs	r2, r2, #1
 5706 0158 DA64     		str	r2, [r3, #76]
 5707 015a 73E7     		b	.L577
 5708              	.L614:
5900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 5709              		.loc 1 5900 0
 5710 015c 0020     		movs	r0, #0
 5711 015e 9BE7     		b	.L576
 5712              	.LVL411:
 5713              	.L580:
6109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JQM    |
 5714              		.loc 1 6109 0
 5715 0160 D468     		ldr	r4, [r2, #12]
 5716 0162 24F44014 		bic	r4, r4, #3145728
 5717 0166 4D6A     		ldr	r5, [r1, #36]
 5718 0168 44EA4554 		orr	r4, r4, r5, lsl #21
 5719 016c D460     		str	r4, [r2, #12]
6116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5720              		.loc 1 6116 0
 5721 016e CA69     		ldr	r2, [r1, #28]
 5722 0170 012A     		cmp	r2, #1
 5723 0172 A3D1     		bne	.L579
6119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 5724              		.loc 1 6119 0
 5725 0174 5A6C     		ldr	r2, [r3, #68]
 5726 0176 42F02002 		orr	r2, r2, #32
 5727 017a 5A64     		str	r2, [r3, #68]
 5728              	.LVL412:
6121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5729              		.loc 1 6121 0
 5730 017c 0120     		movs	r0, #1
 5731 017e 9DE7     		b	.L579
 5732              	.LVL413:
 5733              	.L621:
6141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JAUTO                                                    ,
 5734              		.loc 1 6141 0
 5735 0180 D468     		ldr	r4, [r2, #12]
 5736 0182 24F00074 		bic	r4, r4, #33554432
 5737 0186 0D6A     		ldr	r5, [r1, #32]
 5738 0188 44EA4564 		orr	r4, r4, r5, lsl #25
 5739 018c D460     		str	r4, [r2, #12]
 5740 018e A5E7     		b	.L583
 5741              	.L622:
6155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 5742              		.loc 1 6155 0
 5743 0190 5A6C     		ldr	r2, [r3, #68]
 5744 0192 42F02002 		orr	r2, r2, #32
 5745 0196 5A64     		str	r2, [r3, #68]
 5746              	.LVL414:
6157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5747              		.loc 1 6157 0
 5748 0198 0120     		movs	r0, #1
 5749 019a 9FE7     		b	.L583
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 247


 5750              	.LVL415:
 5751              	.L584:
6172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel)                       
 5752              		.loc 1 6172 0
 5753 019c 1E68     		ldr	r6, [r3]
 5754 019e 7469     		ldr	r4, [r6, #20]
 5755 01a0 02EB4202 		add	r2, r2, r2, lsl #1
 5756 01a4 0725     		movs	r5, #7
 5757 01a6 9540     		lsls	r5, r5, r2
 5758 01a8 24EA0504 		bic	r4, r4, r5
 5759 01ac 8D68     		ldr	r5, [r1, #8]
 5760 01ae 05FA02F2 		lsl	r2, r5, r2
 5761 01b2 2243     		orrs	r2, r2, r4
 5762 01b4 7261     		str	r2, [r6, #20]
 5763 01b6 A2E7     		b	.L585
 5764              	.LVL416:
 5765              	.L587:
6192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_CH |
 5766              		.loc 1 6192 0
 5767 01b8 2C6E     		ldr	r4, [r5, #96]
 5768 01ba 944E     		ldr	r6, .L635
 5769 01bc 2640     		ands	r6, r6, r4
 5770 01be 0C68     		ldr	r4, [r1]
 5771 01c0 42EA8462 		orr	r2, r2, r4, lsl #26
 5772              	.LVL417:
 5773 01c4 1643     		orrs	r6, r6, r2
 5774 01c6 46F00046 		orr	r6, r6, #-2147483648
 5775 01ca 2E66     		str	r6, [r5, #96]
 5776              	.L581:
6264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5777              		.loc 1 6264 0
 5778 01cc 1C68     		ldr	r4, [r3]
 5779 01ce A268     		ldr	r2, [r4, #8]
 5780 01d0 02F00302 		and	r2, r2, #3
 5781 01d4 012A     		cmp	r2, #1
 5782 01d6 71D0     		beq	.L623
 5783 01d8 0022     		movs	r2, #0
 5784              	.L595:
6264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5785              		.loc 1 6264 0 is_stmt 0 discriminator 6
 5786 01da AAB9     		cbnz	r2, .L596
6267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5787              		.loc 1 6267 0 is_stmt 1
 5788 01dc CD68     		ldr	r5, [r1, #12]
 5789 01de 012D     		cmp	r5, #1
 5790 01e0 74D0     		beq	.L597
6270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 5791              		.loc 1 6270 0
 5792 01e2 D4F8B050 		ldr	r5, [r4, #176]
 5793 01e6 0F68     		ldr	r7, [r1]
 5794 01e8 0126     		movs	r6, #1
 5795 01ea BE40     		lsls	r6, r6, r7
 5796 01ec 25EA0605 		bic	r5, r5, r6
 5797 01f0 C4F8B050 		str	r5, [r4, #176]
 5798              	.L598:
 5799              	.LVL418:
6309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 248


 5800              		.loc 1 6309 0
 5801 01f4 0968     		ldr	r1, [r1]
 5802              	.LVL419:
 5803 01f6 1029     		cmp	r1, #16
 5804 01f8 00F09180 		beq	.L624
 5805              	.L600:
6310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)       &&
 5806              		.loc 1 6310 0
 5807 01fc 1129     		cmp	r1, #17
 5808 01fe 00F0B880 		beq	.L625
 5809              	.L602:
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)    &&
 5810              		.loc 1 6312 0
 5811 0202 1229     		cmp	r1, #18
 5812 0204 00F0BB80 		beq	.L626
 5813              	.LVL420:
 5814              	.L596:
6371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 5815              		.loc 1 6371 0
 5816 0208 0022     		movs	r2, #0
 5817 020a 83F84020 		strb	r2, [r3, #64]
 5818              	.LVL421:
 5819              	.L570:
6375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 5820              		.loc 1 6375 0
 5821 020e 16B0     		add	sp, sp, #88
 5822              	.LCFI55:
 5823              		.cfi_remember_state
 5824              		.cfi_def_cfa_offset 16
 5825              		@ sp needed
 5826 0210 F0BC     		pop	{r4, r5, r6, r7}
 5827              	.LCFI56:
 5828              		.cfi_restore 7
 5829              		.cfi_restore 6
 5830              		.cfi_restore 5
 5831              		.cfi_restore 4
 5832              		.cfi_def_cfa_offset 0
 5833 0212 7047     		bx	lr
 5834              	.LVL422:
 5835              	.L589:
 5836              	.LCFI57:
 5837              		.cfi_restore_state
6202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_CH |
 5838              		.loc 1 6202 0
 5839 0214 6C6E     		ldr	r4, [r5, #100]
 5840 0216 7D4E     		ldr	r6, .L635
 5841 0218 2640     		ands	r6, r6, r4
 5842 021a 0C68     		ldr	r4, [r1]
 5843 021c 42EA8462 		orr	r2, r2, r4, lsl #26
 5844              	.LVL423:
 5845 0220 1643     		orrs	r6, r6, r2
 5846 0222 46F00046 		orr	r6, r6, #-2147483648
 5847 0226 6E66     		str	r6, [r5, #100]
6208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 5848              		.loc 1 6208 0
 5849 0228 D0E7     		b	.L581
 5850              	.LVL424:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 249


 5851              	.L590:
6212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_CH |
 5852              		.loc 1 6212 0
 5853 022a AC6E     		ldr	r4, [r5, #104]
 5854 022c 774E     		ldr	r6, .L635
 5855 022e 2640     		ands	r6, r6, r4
 5856 0230 0C68     		ldr	r4, [r1]
 5857 0232 42EA8462 		orr	r2, r2, r4, lsl #26
 5858              	.LVL425:
 5859 0236 1643     		orrs	r6, r6, r2
 5860 0238 46F00046 		orr	r6, r6, #-2147483648
 5861 023c AE66     		str	r6, [r5, #104]
6218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5862              		.loc 1 6218 0
 5863 023e C5E7     		b	.L581
 5864              	.LVL426:
 5865              	.L591:
6222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_CH |
 5866              		.loc 1 6222 0
 5867 0240 EE6E     		ldr	r6, [r5, #108]
 5868 0242 724C     		ldr	r4, .L635
 5869 0244 3440     		ands	r4, r4, r6
 5870 0246 0E68     		ldr	r6, [r1]
 5871 0248 42EA8662 		orr	r2, r2, r6, lsl #26
 5872              	.LVL427:
 5873 024c 2243     		orrs	r2, r2, r4
 5874 024e 42F00042 		orr	r2, r2, #-2147483648
 5875 0252 EA66     		str	r2, [r5, #108]
6228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 5876              		.loc 1 6228 0
 5877 0254 BAE7     		b	.L581
 5878              	.LVL428:
 5879              	.L586:
6234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5880              		.loc 1 6234 0
 5881 0256 2A6E     		ldr	r2, [r5, #96]
 5882              	.LVL429:
 5883 0258 02F0F842 		and	r2, r2, #2080374784
 5884 025c 0C68     		ldr	r4, [r1]
 5885 025e B2EB846F 		cmp	r2, r4, lsl #26
 5886 0262 1CD0     		beq	.L627
 5887              	.L592:
6239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5888              		.loc 1 6239 0
 5889 0264 1C68     		ldr	r4, [r3]
 5890 0266 626E     		ldr	r2, [r4, #100]
 5891 0268 02F0F842 		and	r2, r2, #2080374784
 5892 026c 0D68     		ldr	r5, [r1]
 5893 026e B2EB856F 		cmp	r2, r5, lsl #26
 5894 0272 19D0     		beq	.L628
 5895              	.L593:
6244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5896              		.loc 1 6244 0
 5897 0274 1C68     		ldr	r4, [r3]
 5898 0276 A26E     		ldr	r2, [r4, #104]
 5899 0278 02F0F842 		and	r2, r2, #2080374784
 5900 027c 0D68     		ldr	r5, [r1]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 250


 5901 027e B2EB856F 		cmp	r2, r5, lsl #26
 5902 0282 16D0     		beq	.L629
 5903              	.L594:
6249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5904              		.loc 1 6249 0
 5905 0284 1C68     		ldr	r4, [r3]
 5906 0286 E26E     		ldr	r2, [r4, #108]
 5907 0288 02F0F842 		and	r2, r2, #2080374784
 5908 028c 0D68     		ldr	r5, [r1]
 5909 028e B2EB856F 		cmp	r2, r5, lsl #26
 5910 0292 9BD1     		bne	.L581
6252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5911              		.loc 1 6252 0
 5912 0294 E26E     		ldr	r2, [r4, #108]
 5913 0296 22F00042 		bic	r2, r2, #-2147483648
 5914 029a E266     		str	r2, [r4, #108]
 5915 029c 96E7     		b	.L581
 5916              	.L627:
6237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5917              		.loc 1 6237 0
 5918 029e 2A6E     		ldr	r2, [r5, #96]
 5919 02a0 22F00042 		bic	r2, r2, #-2147483648
 5920 02a4 2A66     		str	r2, [r5, #96]
 5921 02a6 DDE7     		b	.L592
 5922              	.L628:
6242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5923              		.loc 1 6242 0
 5924 02a8 626E     		ldr	r2, [r4, #100]
 5925 02aa 22F00042 		bic	r2, r2, #-2147483648
 5926 02ae 6266     		str	r2, [r4, #100]
 5927 02b0 E0E7     		b	.L593
 5928              	.L629:
6247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 5929              		.loc 1 6247 0
 5930 02b2 A26E     		ldr	r2, [r4, #104]
 5931 02b4 22F00042 		bic	r2, r2, #-2147483648
 5932 02b8 A266     		str	r2, [r4, #104]
 5933 02ba E3E7     		b	.L594
 5934              	.L623:
6264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5935              		.loc 1 6264 0 discriminator 1
 5936 02bc 2268     		ldr	r2, [r4]
 5937 02be 12F0010F 		tst	r2, #1
 5938 02c2 01D1     		bne	.L616
6264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 5939              		.loc 1 6264 0 is_stmt 0
 5940 02c4 0022     		movs	r2, #0
 5941 02c6 88E7     		b	.L595
 5942              	.L616:
 5943 02c8 0122     		movs	r2, #1
 5944 02ca 86E7     		b	.L595
 5945              	.L597:
6275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5946              		.loc 1 6275 0 is_stmt 1
 5947 02cc D4F8B050 		ldr	r5, [r4, #176]
 5948 02d0 0F68     		ldr	r7, [r1]
 5949 02d2 0126     		movs	r6, #1
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 251


 5950 02d4 BE40     		lsls	r6, r6, r7
 5951 02d6 3543     		orrs	r5, r5, r6
 5952 02d8 C4F8B050 		str	r5, [r4, #176]
6280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 5953              		.loc 1 6280 0
 5954 02dc 0C68     		ldr	r4, [r1]
 5955 02de 092C     		cmp	r4, #9
 5956 02e0 0ED9     		bls	.L599
6282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel +1U),
 5957              		.loc 1 6282 0
 5958 02e2 1F68     		ldr	r7, [r3]
 5959 02e4 BD69     		ldr	r5, [r7, #24]
 5960 02e6 04EB4404 		add	r4, r4, r4, lsl #1
 5961 02ea 1B3C     		subs	r4, r4, #27
 5962 02ec 0726     		movs	r6, #7
 5963 02ee A640     		lsls	r6, r6, r4
 5964 02f0 25EA0605 		bic	r5, r5, r6
 5965 02f4 8E68     		ldr	r6, [r1, #8]
 5966 02f6 06FA04F4 		lsl	r4, r6, r4
 5967 02fa 2C43     		orrs	r4, r4, r5
 5968 02fc BC61     		str	r4, [r7, #24]
 5969 02fe 79E7     		b	.L598
 5970              	.L599:
6288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel +1U),
 5971              		.loc 1 6288 0
 5972 0300 1F68     		ldr	r7, [r3]
 5973 0302 7D69     		ldr	r5, [r7, #20]
 5974 0304 0134     		adds	r4, r4, #1
 5975 0306 04EB4404 		add	r4, r4, r4, lsl #1
 5976 030a 0726     		movs	r6, #7
 5977 030c A640     		lsls	r6, r6, r4
 5978 030e 25EA0605 		bic	r5, r5, r6
 5979 0312 8E68     		ldr	r6, [r1, #8]
 5980 0314 06FA04F4 		lsl	r4, r6, r4
 5981 0318 2C43     		orrs	r4, r4, r5
 5982 031a 7C61     		str	r4, [r7, #20]
 5983 031c 6AE7     		b	.L598
 5984              	.LVL430:
 5985              	.L624:
6310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)       &&
 5986              		.loc 1 6310 0 discriminator 1
 5987 031e 3C4C     		ldr	r4, .L635+4
 5988 0320 A468     		ldr	r4, [r4, #8]
6309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 5989              		.loc 1 6309 0 discriminator 1
 5990 0322 14F4000F 		tst	r4, #8388608
 5991 0326 7FF469AF 		bne	.L600
 5992              	.L601:
6319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5993              		.loc 1 6319 0
 5994 032a 1D68     		ldr	r5, [r3]
 5995 032c B5F1A04F 		cmp	r5, #1342177280
 5996 0330 2CD0     		beq	.L630
6319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 5997              		.loc 1 6319 0 is_stmt 0 discriminator 2
 5998 0332 4FF0A044 		mov	r4, #1342177280
 5999 0336 0194     		str	r4, [sp, #4]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 252


 6000              	.L604:
6323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6001              		.loc 1 6323 0 is_stmt 1
 6002 0338 AC68     		ldr	r4, [r5, #8]
 6003 033a 04F00304 		and	r4, r4, #3
 6004 033e 012C     		cmp	r4, #1
 6005 0340 27D0     		beq	.L631
 6006              	.L605:
6323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6007              		.loc 1 6323 0 is_stmt 0 discriminator 6
 6008 0342 002A     		cmp	r2, #0
 6009 0344 59D1     		bne	.L606
6324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 6010              		.loc 1 6324 0 is_stmt 1 discriminator 7
 6011 0346 019E     		ldr	r6, [sp, #4]
6323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6012              		.loc 1 6323 0 discriminator 7
 6013 0348 36B1     		cbz	r6, .L607
6325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6014              		.loc 1 6325 0
 6015 034a B468     		ldr	r4, [r6, #8]
 6016 034c 04F00304 		and	r4, r4, #3
 6017 0350 012C     		cmp	r4, #1
 6018 0352 24D0     		beq	.L632
 6019              	.L608:
6324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 6020              		.loc 1 6324 0
 6021 0354 002A     		cmp	r2, #0
 6022 0356 50D1     		bne	.L606
 6023              	.L607:
6329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6024              		.loc 1 6329 0
 6025 0358 1029     		cmp	r1, #16
 6026 035a 26D0     		beq	.L633
 6027              	.L609:
6343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6028              		.loc 1 6343 0
 6029 035c 1129     		cmp	r1, #17
 6030 035e 43D0     		beq	.L634
 6031              	.L612:
6351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6032              		.loc 1 6351 0
 6033 0360 1229     		cmp	r1, #18
 6034 0362 7FF451AF 		bne	.L596
6353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 6035              		.loc 1 6353 0
 6036 0366 2A49     		ldr	r1, .L635+4
 6037 0368 8A68     		ldr	r2, [r1, #8]
 6038 036a 42F48002 		orr	r2, r2, #4194304
 6039 036e 8A60     		str	r2, [r1, #8]
 6040 0370 4AE7     		b	.L596
 6041              	.L625:
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)    &&
 6042              		.loc 1 6312 0
 6043 0372 274C     		ldr	r4, .L635+4
 6044 0374 A468     		ldr	r4, [r4, #8]
6311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 253


 6045              		.loc 1 6311 0
 6046 0376 14F0807F 		tst	r4, #16777216
 6047 037a D6D0     		beq	.L601
 6048 037c 41E7     		b	.L602
 6049              	.L626:
6314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        )
 6050              		.loc 1 6314 0
 6051 037e 244C     		ldr	r4, .L635+4
 6052 0380 A468     		ldr	r4, [r4, #8]
6313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
 6053              		.loc 1 6313 0
 6054 0382 14F4800F 		tst	r4, #4194304
 6055 0386 7FF43FAF 		bne	.L596
 6056 038a CEE7     		b	.L601
 6057              	.L630:
6319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6058              		.loc 1 6319 0 discriminator 1
 6059 038c 214C     		ldr	r4, .L635+8
 6060 038e 0194     		str	r4, [sp, #4]
 6061 0390 D2E7     		b	.L604
 6062              	.L631:
6323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6063              		.loc 1 6323 0 discriminator 1
 6064 0392 2C68     		ldr	r4, [r5]
 6065 0394 14F0010F 		tst	r4, #1
 6066 0398 D3D0     		beq	.L605
6323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6067              		.loc 1 6323 0 is_stmt 0
 6068 039a 0122     		movs	r2, #1
 6069 039c D1E7     		b	.L605
 6070              	.L632:
6325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6071              		.loc 1 6325 0 is_stmt 1 discriminator 1
 6072 039e 3468     		ldr	r4, [r6]
 6073 03a0 14F0010F 		tst	r4, #1
 6074 03a4 D6D0     		beq	.L608
6325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6075              		.loc 1 6325 0 is_stmt 0
 6076 03a6 0122     		movs	r2, #1
 6077 03a8 D4E7     		b	.L608
 6078              	.L633:
6329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6079              		.loc 1 6329 0 is_stmt 1 discriminator 1
 6080 03aa B5F1A04F 		cmp	r5, #1342177280
 6081 03ae D5D1     		bne	.L609
6331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 6082              		.loc 1 6331 0
 6083 03b0 1749     		ldr	r1, .L635+4
 6084 03b2 8A68     		ldr	r2, [r1, #8]
 6085 03b4 42F40002 		orr	r2, r2, #8388608
 6086 03b8 8A60     		str	r2, [r1, #8]
6335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 6087              		.loc 1 6335 0
 6088 03ba 174A     		ldr	r2, .L635+12
 6089 03bc 1268     		ldr	r2, [r2]
 6090 03be A1F14E61 		sub	r1, r1, #216006656
 6091 03c2 A1F58421 		sub	r1, r1, #270336
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 254


 6092 03c6 A1F27D41 		subw	r1, r1, #1149
 6093 03ca A1FB0212 		umull	r1, r2, r1, r2
 6094 03ce 920C     		lsrs	r2, r2, #18
 6095 03d0 02EB8202 		add	r2, r2, r2, lsl #2
 6096 03d4 5100     		lsls	r1, r2, #1
 6097 03d6 0091     		str	r1, [sp]
6336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 6098              		.loc 1 6336 0
 6099 03d8 02E0     		b	.L610
 6100              	.L611:
6338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 6101              		.loc 1 6338 0
 6102 03da 009A     		ldr	r2, [sp]
 6103 03dc 013A     		subs	r2, r2, #1
 6104 03de 0092     		str	r2, [sp]
 6105              	.L610:
6336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 6106              		.loc 1 6336 0
 6107 03e0 009A     		ldr	r2, [sp]
 6108 03e2 002A     		cmp	r2, #0
 6109 03e4 F9D1     		bne	.L611
 6110 03e6 0FE7     		b	.L596
 6111              	.L634:
6343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6112              		.loc 1 6343 0 discriminator 1
 6113 03e8 B5F1A04F 		cmp	r5, #1342177280
 6114 03ec B8D1     		bne	.L612
6345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 6115              		.loc 1 6345 0
 6116 03ee 0849     		ldr	r1, .L635+4
 6117 03f0 8A68     		ldr	r2, [r1, #8]
 6118 03f2 42F08072 		orr	r2, r2, #16777216
 6119 03f6 8A60     		str	r2, [r1, #8]
 6120 03f8 06E7     		b	.L596
 6121              	.L606:
6362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 6122              		.loc 1 6362 0
 6123 03fa 5A6C     		ldr	r2, [r3, #68]
 6124 03fc 42F02002 		orr	r2, r2, #32
 6125 0400 5A64     		str	r2, [r3, #68]
 6126              	.LVL431:
6364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6127              		.loc 1 6364 0
 6128 0402 0120     		movs	r0, #1
 6129 0404 00E7     		b	.L596
 6130              	.LVL432:
 6131              	.L613:
5941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6132              		.loc 1 5941 0
 6133 0406 0220     		movs	r0, #2
 6134 0408 01E7     		b	.L570
 6135              	.L636:
 6136 040a 00BF     		.align	2
 6137              	.L635:
 6138 040c 00F0FF83 		.word	-2080378880
 6139 0410 00030050 		.word	1342178048
 6140 0414 00010050 		.word	1342177536
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 255


 6141 0418 00000000 		.word	SystemCoreClock
 6142              		.cfi_endproc
 6143              	.LFE157:
 6145              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 6146              		.align	1
 6147              		.global	HAL_ADC_AnalogWDGConfig
 6148              		.syntax unified
 6149              		.thumb
 6150              		.thumb_func
 6151              		.fpu fpv4-sp-d16
 6153              	HAL_ADC_AnalogWDGConfig:
 6154              	.LFB158:
6651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6155              		.loc 1 6651 0
 6156              		.cfi_startproc
 6157              		@ args = 0, pretend = 0, frame = 0
 6158              		@ frame_needed = 0, uses_anonymous_args = 0
 6159              		@ link register save eliminated.
 6160              	.LVL433:
6678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6161              		.loc 1 6678 0
 6162 0000 90F84020 		ldrb	r2, [r0, #64]	@ zero_extendqisi2
 6163 0004 012A     		cmp	r2, #1
 6164 0006 00F0CC80 		beq	.L652
 6165 000a 0346     		mov	r3, r0
6678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6166              		.loc 1 6678 0 is_stmt 0 discriminator 2
 6167 000c 0122     		movs	r2, #1
 6168 000e 80F84020 		strb	r2, [r0, #64]
6685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 6169              		.loc 1 6685 0 is_stmt 1 discriminator 2
 6170 0012 0268     		ldr	r2, [r0]
 6171 0014 9068     		ldr	r0, [r2, #8]
 6172              	.LVL434:
 6173 0016 10F00C0F 		tst	r0, #12
 6174 001a 40F0B980 		bne	.L639
6651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6175              		.loc 1 6651 0
 6176 001e F0B4     		push	{r4, r5, r6, r7}
 6177              	.LCFI58:
 6178              		.cfi_def_cfa_offset 16
 6179              		.cfi_offset 4, -16
 6180              		.cfi_offset 5, -12
 6181              		.cfi_offset 6, -8
 6182              		.cfi_offset 7, -4
6689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 6183              		.loc 1 6689 0
 6184 0020 0D68     		ldr	r5, [r1]
 6185 0022 012D     		cmp	r5, #1
 6186 0024 43D0     		beq	.L658
6740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 6187              		.loc 1 6740 0
 6188 0026 D068     		ldr	r0, [r2, #12]
 6189 0028 00F01800 		and	r0, r0, #24
 6190 002c 1828     		cmp	r0, #24
 6191 002e 72D0     		beq	.L643
6740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 256


 6192              		.loc 1 6740 0 is_stmt 0 discriminator 1
 6193 0030 0F69     		ldr	r7, [r1, #16]
 6194 0032 D068     		ldr	r0, [r2, #12]
 6195 0034 C0F3C100 		ubfx	r0, r0, #3, #2
 6196 0038 C0EBC070 		rsb	r0, r0, r0, lsl #31
 6197 003c 4400     		lsls	r4, r0, #1
 6198 003e 201D     		adds	r0, r4, #4
 6199 0040 C740     		lsrs	r7, r7, r0
 6200              	.L644:
 6201              	.LVL435:
6741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 6202              		.loc 1 6741 0 is_stmt 1 discriminator 4
 6203 0042 D468     		ldr	r4, [r2, #12]
 6204 0044 04F01804 		and	r4, r4, #24
 6205 0048 182C     		cmp	r4, #24
 6206 004a 67D0     		beq	.L645
6741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 6207              		.loc 1 6741 0 is_stmt 0 discriminator 1
 6208 004c 4C69     		ldr	r4, [r1, #20]
 6209 004e D068     		ldr	r0, [r2, #12]
 6210 0050 C0F3C100 		ubfx	r0, r0, #3, #2
 6211 0054 C0EBC070 		rsb	r0, r0, r0, lsl #31
 6212 0058 4600     		lsls	r6, r0, #1
 6213 005a 301D     		adds	r0, r6, #4
 6214 005c 24FA00F0 		lsr	r0, r4, r0
 6215              	.L646:
 6216              	.LVL436:
6743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6217              		.loc 1 6743 0 is_stmt 1 discriminator 4
 6218 0060 022D     		cmp	r5, #2
 6219 0062 5ED0     		beq	.L659
6778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6220              		.loc 1 6778 0
 6221 0064 4C68     		ldr	r4, [r1, #4]
 6222 0066 002C     		cmp	r4, #0
 6223 0068 7ED0     		beq	.L650
6781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR3_HT3 |
 6224              		.loc 1 6781 0
 6225 006a 946A     		ldr	r4, [r2, #40]
 6226 006c 04F0FF24 		and	r4, r4, #-16711936
 6227 0070 40EA0740 		orr	r0, r0, r7, lsl #16
 6228              	.LVL437:
 6229 0074 2043     		orrs	r0, r0, r4
 6230 0076 9062     		str	r0, [r2, #40]
6787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 6231              		.loc 1 6787 0
 6232 0078 1C68     		ldr	r4, [r3]
 6233 007a D4F8A420 		ldr	r2, [r4, #164]
 6234 007e 8D68     		ldr	r5, [r1, #8]
 6235 0080 0120     		movs	r0, #1
 6236 0082 A840     		lsls	r0, r0, r5
 6237 0084 0243     		orrs	r2, r2, r0
 6238 0086 C4F8A420 		str	r2, [r4, #164]
6797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD3;
 6239              		.loc 1 6797 0
 6240 008a 4FF40072 		mov	r2, #512
 6241              	.L649:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 257


 6242              	.LVL438:
6804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 6243              		.loc 1 6804 0
 6244 008e 1868     		ldr	r0, [r3]
 6245 0090 0260     		str	r2, [r0]
6807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6246              		.loc 1 6807 0
 6247 0092 C968     		ldr	r1, [r1, #12]
 6248              	.LVL439:
 6249 0094 0129     		cmp	r1, #1
 6250 0096 75D0     		beq	.L660
6813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6251              		.loc 1 6813 0
 6252 0098 1868     		ldr	r0, [r3]
 6253 009a 4168     		ldr	r1, [r0, #4]
 6254 009c 21EA0202 		bic	r2, r1, r2
 6255              	.LVL440:
 6256 00a0 4260     		str	r2, [r0, #4]
6652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6257              		.loc 1 6652 0
 6258 00a2 0020     		movs	r0, #0
 6259              	.LVL441:
 6260              	.L642:
6830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6261              		.loc 1 6830 0
 6262 00a4 0022     		movs	r2, #0
 6263 00a6 83F84020 		strb	r2, [r3, #64]
6834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 6264              		.loc 1 6834 0
 6265 00aa F0BC     		pop	{r4, r5, r6, r7}
 6266              	.LCFI59:
 6267              		.cfi_remember_state
 6268              		.cfi_restore 7
 6269              		.cfi_restore 6
 6270              		.cfi_restore 5
 6271              		.cfi_restore 4
 6272              		.cfi_def_cfa_offset 0
 6273 00ac 7047     		bx	lr
 6274              	.LVL442:
 6275              	.L658:
 6276              	.LCFI60:
 6277              		.cfi_restore_state
6696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1SGL |
 6278              		.loc 1 6696 0
 6279 00ae D068     		ldr	r0, [r2, #12]
 6280 00b0 20F0FB40 		bic	r0, r0, #2105540608
 6281 00b4 20F48000 		bic	r0, r0, #4194304
 6282 00b8 4C68     		ldr	r4, [r1, #4]
 6283 00ba 8D68     		ldr	r5, [r1, #8]
 6284 00bc 44EA8564 		orr	r4, r4, r5, lsl #26
 6285 00c0 2043     		orrs	r0, r0, r4
 6286 00c2 D060     		str	r0, [r2, #12]
6707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 6287              		.loc 1 6707 0
 6288 00c4 0869     		ldr	r0, [r1, #16]
 6289 00c6 1C68     		ldr	r4, [r3]
 6290 00c8 E268     		ldr	r2, [r4, #12]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 258


 6291 00ca C2F3C102 		ubfx	r2, r2, #3, #2
 6292 00ce 5200     		lsls	r2, r2, #1
 6293 00d0 00FA02F5 		lsl	r5, r0, r2
 6294              	.LVL443:
6708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6295              		.loc 1 6708 0
 6296 00d4 4A69     		ldr	r2, [r1, #20]
 6297 00d6 E068     		ldr	r0, [r4, #12]
 6298 00d8 C0F3C100 		ubfx	r0, r0, #3, #2
 6299 00dc 4000     		lsls	r0, r0, #1
 6300 00de 02FA00F0 		lsl	r0, r2, r0
 6301              	.LVL444:
6711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_TR1_HT1 |
 6302              		.loc 1 6711 0
 6303 00e2 226A     		ldr	r2, [r4, #32]
 6304 00e4 02F0F022 		and	r2, r2, #-268374016
 6305 00e8 40EA0540 		orr	r0, r0, r5, lsl #16
 6306              	.LVL445:
 6307 00ec 0243     		orrs	r2, r2, r0
 6308 00ee 2262     		str	r2, [r4, #32]
6720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6309              		.loc 1 6720 0
 6310 00f0 1A68     		ldr	r2, [r3]
 6311 00f2 8020     		movs	r0, #128
 6312 00f4 1060     		str	r0, [r2]
6723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6313              		.loc 1 6723 0
 6314 00f6 CA68     		ldr	r2, [r1, #12]
 6315 00f8 012A     		cmp	r2, #1
 6316 00fa 06D0     		beq	.L661
6731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6317              		.loc 1 6731 0
 6318 00fc 1968     		ldr	r1, [r3]
 6319              	.LVL446:
 6320 00fe 4A68     		ldr	r2, [r1, #4]
 6321 0100 22F08002 		bic	r2, r2, #128
 6322 0104 4A60     		str	r2, [r1, #4]
6652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6323              		.loc 1 6652 0
 6324 0106 0020     		movs	r0, #0
 6325 0108 CCE7     		b	.L642
 6326              	.LVL447:
 6327              	.L661:
6726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6328              		.loc 1 6726 0
 6329 010a 1968     		ldr	r1, [r3]
 6330              	.LVL448:
 6331 010c 4A68     		ldr	r2, [r1, #4]
 6332 010e 0243     		orrs	r2, r2, r0
 6333 0110 4A60     		str	r2, [r1, #4]
6652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6334              		.loc 1 6652 0
 6335 0112 0020     		movs	r0, #0
 6336 0114 C6E7     		b	.L642
 6337              	.LVL449:
 6338              	.L643:
6740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 259


 6339              		.loc 1 6740 0 discriminator 2
 6340 0116 0869     		ldr	r0, [r1, #16]
 6341 0118 8700     		lsls	r7, r0, #2
 6342 011a 92E7     		b	.L644
 6343              	.LVL450:
 6344              	.L645:
6741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 6345              		.loc 1 6741 0 discriminator 2
 6346 011c 4869     		ldr	r0, [r1, #20]
 6347 011e 8000     		lsls	r0, r0, #2
 6348 0120 9EE7     		b	.L646
 6349              	.LVL451:
 6350              	.L659:
6749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6351              		.loc 1 6749 0
 6352 0122 4C68     		ldr	r4, [r1, #4]
 6353 0124 94B1     		cbz	r4, .L648
6752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR2_HT2 |
 6354              		.loc 1 6752 0
 6355 0126 546A     		ldr	r4, [r2, #36]
 6356 0128 04F0FF24 		and	r4, r4, #-16711936
 6357 012c 40EA0740 		orr	r0, r0, r7, lsl #16
 6358              	.LVL452:
 6359 0130 2043     		orrs	r0, r0, r4
 6360 0132 5062     		str	r0, [r2, #36]
6758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 6361              		.loc 1 6758 0
 6362 0134 1C68     		ldr	r4, [r3]
 6363 0136 D4F8A020 		ldr	r2, [r4, #160]
 6364 013a 8D68     		ldr	r5, [r1, #8]
 6365 013c 0120     		movs	r0, #1
 6366 013e A840     		lsls	r0, r0, r5
 6367 0140 0243     		orrs	r2, r2, r0
 6368 0142 C4F8A020 		str	r2, [r4, #160]
6768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD2;
 6369              		.loc 1 6768 0
 6370 0146 4FF48072 		mov	r2, #256
 6371 014a A0E7     		b	.L649
 6372              	.LVL453:
 6373              	.L648:
6762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 6374              		.loc 1 6762 0
 6375 014c 506A     		ldr	r0, [r2, #36]
 6376              	.LVL454:
 6377 014e 00F0FF20 		and	r0, r0, #-16711936
 6378 0152 5062     		str	r0, [r2, #36]
6763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 6379              		.loc 1 6763 0
 6380 0154 1868     		ldr	r0, [r3]
 6381 0156 D0F8A020 		ldr	r2, [r0, #160]
 6382 015a D20C     		lsrs	r2, r2, #19
 6383 015c D204     		lsls	r2, r2, #19
 6384 015e C0F8A020 		str	r2, [r0, #160]
6768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD2;
 6385              		.loc 1 6768 0
 6386 0162 4FF48072 		mov	r2, #256
 6387 0166 92E7     		b	.L649
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 260


 6388              	.LVL455:
 6389              	.L650:
6791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 6390              		.loc 1 6791 0
 6391 0168 906A     		ldr	r0, [r2, #40]
 6392              	.LVL456:
 6393 016a 00F0FF20 		and	r0, r0, #-16711936
 6394 016e 9062     		str	r0, [r2, #40]
6792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 6395              		.loc 1 6792 0
 6396 0170 1868     		ldr	r0, [r3]
 6397 0172 D0F8A420 		ldr	r2, [r0, #164]
 6398 0176 D20C     		lsrs	r2, r2, #19
 6399 0178 D204     		lsls	r2, r2, #19
 6400 017a C0F8A420 		str	r2, [r0, #164]
6797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD3;
 6401              		.loc 1 6797 0
 6402 017e 4FF40072 		mov	r2, #512
 6403 0182 84E7     		b	.L649
 6404              	.LVL457:
 6405              	.L660:
6809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6406              		.loc 1 6809 0
 6407 0184 1968     		ldr	r1, [r3]
 6408 0186 4868     		ldr	r0, [r1, #4]
 6409 0188 0243     		orrs	r2, r2, r0
 6410              	.LVL458:
 6411 018a 4A60     		str	r2, [r1, #4]
6652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6412              		.loc 1 6652 0
 6413 018c 0020     		movs	r0, #0
 6414 018e 89E7     		b	.L642
 6415              	.LVL459:
 6416              	.L639:
 6417              	.LCFI61:
 6418              		.cfi_def_cfa_offset 0
 6419              		.cfi_restore 4
 6420              		.cfi_restore 5
 6421              		.cfi_restore 6
 6422              		.cfi_restore 7
6823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 6423              		.loc 1 6823 0
 6424 0190 5A6C     		ldr	r2, [r3, #68]
 6425 0192 42F02002 		orr	r2, r2, #32
 6426 0196 5A64     		str	r2, [r3, #68]
 6427              	.LVL460:
6825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 6428              		.loc 1 6825 0
 6429 0198 0120     		movs	r0, #1
 6430              	.LVL461:
6830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6431              		.loc 1 6830 0
 6432 019a 0022     		movs	r2, #0
 6433 019c 83F84020 		strb	r2, [r3, #64]
6834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 6434              		.loc 1 6834 0
 6435 01a0 7047     		bx	lr
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 261


 6436              	.LVL462:
 6437              	.L652:
6678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6438              		.loc 1 6678 0
 6439 01a2 0220     		movs	r0, #2
 6440              	.LVL463:
 6441 01a4 7047     		bx	lr
 6442              		.cfi_endproc
 6443              	.LFE158:
 6445              		.section	.text.HAL_ADCEx_MultiModeConfigChannel,"ax",%progbits
 6446              		.align	1
 6447              		.global	HAL_ADCEx_MultiModeConfigChannel
 6448              		.syntax unified
 6449              		.thumb
 6450              		.thumb_func
 6451              		.fpu fpv4-sp-d16
 6453              	HAL_ADCEx_MultiModeConfigChannel:
 6454              	.LFB159:
6936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6455              		.loc 1 6936 0
 6456              		.cfi_startproc
 6457              		@ args = 0, pretend = 0, frame = 88
 6458              		@ frame_needed = 0, uses_anonymous_args = 0
 6459              		@ link register save eliminated.
 6460              	.LVL464:
6951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6461              		.loc 1 6951 0
 6462 0000 90F84020 		ldrb	r2, [r0, #64]	@ zero_extendqisi2
 6463 0004 012A     		cmp	r2, #1
 6464 0006 00F08E80 		beq	.L673
6936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6465              		.loc 1 6936 0 discriminator 2
 6466 000a 70B4     		push	{r4, r5, r6}
 6467              	.LCFI62:
 6468              		.cfi_def_cfa_offset 12
 6469              		.cfi_offset 4, -12
 6470              		.cfi_offset 5, -8
 6471              		.cfi_offset 6, -4
 6472 000c 97B0     		sub	sp, sp, #92
 6473              	.LCFI63:
 6474              		.cfi_def_cfa_offset 104
 6475 000e 0346     		mov	r3, r0
6951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6476              		.loc 1 6951 0 discriminator 2
 6477 0010 0122     		movs	r2, #1
 6478 0012 80F84020 		strb	r2, [r0, #64]
6955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6479              		.loc 1 6955 0 discriminator 2
 6480 0016 0268     		ldr	r2, [r0]
 6481 0018 B2F1A04F 		cmp	r2, #1342177280
 6482 001c 35D0     		beq	.L688
 6483 001e 4FF0A040 		mov	r0, #1342177280
 6484              	.LVL465:
 6485 0022 0190     		str	r0, [sp, #4]
 6486              	.L665:
6962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     && (ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSharingSameCommonRegister) == RESET) )
 6487              		.loc 1 6962 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 262


 6488 0024 9268     		ldr	r2, [r2, #8]
 6489 0026 12F0040F 		tst	r2, #4
 6490 002a 69D1     		bne	.L666
6963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 6491              		.loc 1 6963 0
 6492 002c 019A     		ldr	r2, [sp, #4]
 6493 002e 9068     		ldr	r0, [r2, #8]
 6494 0030 10F0040F 		tst	r0, #4
 6495 0034 64D1     		bne	.L666
 6496              	.LVL466:
6973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 6497              		.loc 1 6973 0
 6498 0036 0868     		ldr	r0, [r1]
 6499 0038 0028     		cmp	r0, #0
 6500 003a 37D0     		beq	.L667
6978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_MDMA  |
 6501              		.loc 1 6978 0
 6502 003c 3B4D     		ldr	r5, .L693
 6503 003e A868     		ldr	r0, [r5, #8]
 6504 0040 20F46040 		bic	r0, r0, #57344
 6505 0044 4C68     		ldr	r4, [r1, #4]
 6506 0046 5E6B     		ldr	r6, [r3, #52]
 6507 0048 44EA4634 		orr	r4, r4, r6, lsl #13
 6508 004c 2043     		orrs	r0, r0, r4
 6509 004e A860     		str	r0, [r5, #8]
7000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 6510              		.loc 1 7000 0
 6511 0050 1C68     		ldr	r4, [r3]
 6512 0052 A068     		ldr	r0, [r4, #8]
 6513 0054 00F00300 		and	r0, r0, #3
 6514 0058 0128     		cmp	r0, #1
 6515 005a 19D0     		beq	.L689
 6516 005c 0020     		movs	r0, #0
 6517              	.L668:
7000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 6518              		.loc 1 7000 0 is_stmt 0 discriminator 6
 6519 005e 0028     		cmp	r0, #0
 6520 0060 59D1     		bne	.L676
7001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6521              		.loc 1 7001 0 is_stmt 1
 6522 0062 9468     		ldr	r4, [r2, #8]
 6523 0064 04F00304 		and	r4, r4, #3
 6524 0068 012C     		cmp	r4, #1
 6525 006a 19D0     		beq	.L690
 6526              	.L670:
7000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 6527              		.loc 1 7000 0
 6528 006c 0028     		cmp	r0, #0
 6529 006e 54D1     		bne	.L678
7003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_CCR_MULTI |
 6530              		.loc 1 7003 0
 6531 0070 2E4C     		ldr	r4, .L693
 6532 0072 A268     		ldr	r2, [r4, #8]
 6533 0074 22F47162 		bic	r2, r2, #3856
 6534 0078 22F00F02 		bic	r2, r2, #15
 6535 007c 0868     		ldr	r0, [r1]
 6536 007e 8968     		ldr	r1, [r1, #8]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 263


 6537              	.LVL467:
 6538 0080 0143     		orrs	r1, r1, r0
 6539 0082 0A43     		orrs	r2, r2, r1
 6540 0084 A260     		str	r2, [r4, #8]
6937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6541              		.loc 1 6937 0
 6542 0086 0020     		movs	r0, #0
 6543 0088 3FE0     		b	.L669
 6544              	.LVL468:
 6545              	.L688:
6955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6546              		.loc 1 6955 0 discriminator 1
 6547 008a 2948     		ldr	r0, .L693+4
 6548              	.LVL469:
 6549 008c 0190     		str	r0, [sp, #4]
 6550 008e C9E7     		b	.L665
 6551              	.LVL470:
 6552              	.L689:
7000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 6553              		.loc 1 7000 0 discriminator 1
 6554 0090 2068     		ldr	r0, [r4]
 6555 0092 10F0010F 		tst	r0, #1
 6556 0096 01D1     		bne	.L675
7000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 6557              		.loc 1 7000 0 is_stmt 0
 6558 0098 0020     		movs	r0, #0
 6559 009a E0E7     		b	.L668
 6560              	.L675:
 6561 009c 0120     		movs	r0, #1
 6562 009e DEE7     		b	.L668
 6563              	.L690:
7001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6564              		.loc 1 7001 0 is_stmt 1 discriminator 1
 6565 00a0 1268     		ldr	r2, [r2]
 6566 00a2 12F0010F 		tst	r2, #1
 6567 00a6 E1D0     		beq	.L670
7001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6568              		.loc 1 7001 0 is_stmt 0
 6569 00a8 0120     		movs	r0, #1
 6570 00aa DFE7     		b	.L670
 6571              	.L667:
7012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6572              		.loc 1 7012 0 is_stmt 1
 6573 00ac 1F48     		ldr	r0, .L693
 6574 00ae 8168     		ldr	r1, [r0, #8]
 6575              	.LVL471:
 6576 00b0 21F46041 		bic	r1, r1, #57344
 6577 00b4 8160     		str	r1, [r0, #8]
7017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 6578              		.loc 1 7017 0
 6579 00b6 1868     		ldr	r0, [r3]
 6580 00b8 8168     		ldr	r1, [r0, #8]
 6581 00ba 01F00301 		and	r1, r1, #3
 6582 00be 0129     		cmp	r1, #1
 6583 00c0 10D0     		beq	.L691
 6584 00c2 0021     		movs	r1, #0
 6585              	.L671:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 264


7017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 6586              		.loc 1 7017 0 is_stmt 0 discriminator 6
 6587 00c4 59BB     		cbnz	r1, .L681
7018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6588              		.loc 1 7018 0 is_stmt 1
 6589 00c6 9068     		ldr	r0, [r2, #8]
 6590 00c8 00F00300 		and	r0, r0, #3
 6591 00cc 0128     		cmp	r0, #1
 6592 00ce 11D0     		beq	.L692
 6593              	.L672:
7017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 6594              		.loc 1 7017 0
 6595 00d0 39BB     		cbnz	r1, .L683
7020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 6596              		.loc 1 7020 0
 6597 00d2 1649     		ldr	r1, .L693
 6598 00d4 8A68     		ldr	r2, [r1, #8]
 6599 00d6 22F47162 		bic	r2, r2, #3856
 6600 00da 22F00F02 		bic	r2, r2, #15
 6601 00de 8A60     		str	r2, [r1, #8]
6937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6602              		.loc 1 6937 0
 6603 00e0 0020     		movs	r0, #0
 6604 00e2 12E0     		b	.L669
 6605              	.L691:
7017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 6606              		.loc 1 7017 0 discriminator 1
 6607 00e4 0168     		ldr	r1, [r0]
 6608 00e6 11F0010F 		tst	r1, #1
 6609 00ea 01D1     		bne	.L680
7017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
 6610              		.loc 1 7017 0 is_stmt 0
 6611 00ec 0021     		movs	r1, #0
 6612 00ee E9E7     		b	.L671
 6613              	.L680:
 6614 00f0 0121     		movs	r1, #1
 6615 00f2 E7E7     		b	.L671
 6616              	.L692:
7018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6617              		.loc 1 7018 0 is_stmt 1 discriminator 1
 6618 00f4 1268     		ldr	r2, [r2]
 6619 00f6 12F0010F 		tst	r2, #1
 6620 00fa E9D0     		beq	.L672
7018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 6621              		.loc 1 7018 0 is_stmt 0
 6622 00fc 0121     		movs	r1, #1
 6623 00fe E7E7     		b	.L672
 6624              	.LVL472:
 6625              	.L666:
7029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 6626              		.loc 1 7029 0 is_stmt 1
 6627 0100 5A6C     		ldr	r2, [r3, #68]
 6628 0102 42F02002 		orr	r2, r2, #32
 6629 0106 5A64     		str	r2, [r3, #68]
 6630              	.LVL473:
7031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 6631              		.loc 1 7031 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 265


 6632 0108 0120     		movs	r0, #1
 6633              	.LVL474:
 6634              	.L669:
7036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6635              		.loc 1 7036 0
 6636 010a 0022     		movs	r2, #0
 6637 010c 83F84020 		strb	r2, [r3, #64]
7040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 6638              		.loc 1 7040 0
 6639 0110 17B0     		add	sp, sp, #92
 6640              	.LCFI64:
 6641              		.cfi_remember_state
 6642              		.cfi_def_cfa_offset 12
 6643              		@ sp needed
 6644 0112 70BC     		pop	{r4, r5, r6}
 6645              	.LCFI65:
 6646              		.cfi_restore 6
 6647              		.cfi_restore 5
 6648              		.cfi_restore 4
 6649              		.cfi_def_cfa_offset 0
 6650 0114 7047     		bx	lr
 6651              	.LVL475:
 6652              	.L676:
 6653              	.LCFI66:
 6654              		.cfi_restore_state
6937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 6655              		.loc 1 6937 0
 6656 0116 0020     		movs	r0, #0
 6657 0118 F7E7     		b	.L669
 6658              	.L678:
 6659 011a 0020     		movs	r0, #0
 6660 011c F5E7     		b	.L669
 6661              	.LVL476:
 6662              	.L681:
 6663 011e 0020     		movs	r0, #0
 6664 0120 F3E7     		b	.L669
 6665              	.L683:
 6666 0122 0020     		movs	r0, #0
 6667 0124 F1E7     		b	.L669
 6668              	.LVL477:
 6669              	.L673:
 6670              	.LCFI67:
 6671              		.cfi_def_cfa_offset 0
 6672              		.cfi_restore 4
 6673              		.cfi_restore 5
 6674              		.cfi_restore 6
6951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 6675              		.loc 1 6951 0
 6676 0126 0220     		movs	r0, #2
 6677              	.LVL478:
 6678 0128 7047     		bx	lr
 6679              	.L694:
 6680 012a 00BF     		.align	2
 6681              	.L693:
 6682 012c 00030050 		.word	1342178048
 6683 0130 00010050 		.word	1342177536
 6684              		.cfi_endproc
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 266


 6685              	.LFE159:
 6687              		.text
 6688              	.Letext0:
 6689              		.file 2 "/usr/local/Caskroom/gcc-arm-embedded/6-2017-q1-update/gcc-arm-none-eabi-6-2017-q1-update/
 6690              		.file 3 "/usr/local/Caskroom/gcc-arm-embedded/6-2017-q1-update/gcc-arm-none-eabi-6-2017-q1-update/
 6691              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 6692              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 6693              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f334x8.h"
 6694              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 6695              		.file 8 "/usr/local/Caskroom/gcc-arm-embedded/6-2017-q1-update/gcc-arm-none-eabi-6-2017-q1-update/
 6696              		.file 9 "/usr/local/Caskroom/gcc-arm-embedded/6-2017-q1-update/gcc-arm-none-eabi-6-2017-q1-update/
 6697              		.file 10 "/usr/local/Caskroom/gcc-arm-embedded/6-2017-q1-update/gcc-arm-none-eabi-6-2017-q1-update
 6698              		.file 11 "/usr/local/Caskroom/gcc-arm-embedded/6-2017-q1-update/gcc-arm-none-eabi-6-2017-q1-update
 6699              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 6700              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 6701              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 6702              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 6703              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 267


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_adc_ex.c
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:18     .text.ADC_Disable:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:24     .text.ADC_Disable:0000000000000000 ADC_Disable
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:132    .text.ADC_ConversionStop:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:138    .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:317    .text.ADC_ConversionStop:00000000000000d4 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:322    .text.ADC_Enable:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:328    .text.ADC_Enable:0000000000000000 ADC_Enable
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:431    .text.ADC_Enable:0000000000000080 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:436    .text.ADC_DMAError:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:442    .text.ADC_DMAError:0000000000000000 ADC_DMAError
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:473    .text.ADC_DMAHalfConvCplt:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:479    .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:502    .text.ADC_DMAConvCplt:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:508    .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:572    .text.HAL_ADC_Init:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:579    .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:932    .text.HAL_ADC_Init:0000000000000208 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:941    .text.HAL_ADC_DeInit:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:948    .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1227   .text.HAL_ADC_DeInit:00000000000001b0 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1238   .text.HAL_ADC_Start:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1245   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1404   .text.HAL_ADC_Start:00000000000000fc $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1410   .text.HAL_ADC_Stop:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1417   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1482   .text.HAL_ADC_PollForConversion:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1489   .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1677   .text.HAL_ADC_PollForConversion:0000000000000114 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1682   .text.HAL_ADC_PollForEvent:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1689   .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1837   .text.HAL_ADC_Start_IT:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:1844   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2038   .text.HAL_ADC_Start_IT:0000000000000134 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2044   .text.HAL_ADC_Stop_IT:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2051   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2121   .text.HAL_ADC_Start_DMA:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2128   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2314   .text.HAL_ADC_Start_DMA:000000000000011c $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2323   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2330   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2432   .text.HAL_ADC_GetValue:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2439   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2457   .text.HAL_ADCEx_Calibration_Start:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2464   .text.HAL_ADCEx_Calibration_Start:0000000000000000 HAL_ADCEx_Calibration_Start
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2579   .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2586   .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 HAL_ADCEx_Calibration_GetValue
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2616   .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2623   .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 HAL_ADCEx_Calibration_SetValue
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2723   .text.HAL_ADCEx_InjectedStart:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2730   .text.HAL_ADCEx_InjectedStart:0000000000000000 HAL_ADCEx_InjectedStart
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2861   .text.HAL_ADCEx_InjectedStart:00000000000000c4 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2866   .text.HAL_ADCEx_InjectedStop:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2873   .text.HAL_ADCEx_InjectedStop:0000000000000000 HAL_ADCEx_InjectedStop
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2973   .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:2980   .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 HAL_ADCEx_InjectedPollForConversion
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 268


/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3118   .text.HAL_ADCEx_InjectedPollForConversion:00000000000000b8 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3123   .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3130   .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 HAL_ADCEx_InjectedStart_IT
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3294   .text.HAL_ADCEx_InjectedStart_IT:00000000000000fc $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3299   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3306   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 HAL_ADCEx_InjectedStop_IT
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3411   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3418   .text.HAL_ADCEx_MultiModeStart_DMA:0000000000000000 HAL_ADCEx_MultiModeStart_DMA
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3581   .text.HAL_ADCEx_MultiModeStart_DMA:00000000000000d8 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3591   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3598   .text.HAL_ADCEx_MultiModeStop_DMA:0000000000000000 HAL_ADCEx_MultiModeStop_DMA
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3779   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3786   .text.HAL_ADCEx_MultiModeGetValue:0000000000000000 HAL_ADCEx_MultiModeGetValue
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3803   .text.HAL_ADCEx_MultiModeGetValue:0000000000000008 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3808   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3815   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 HAL_ADCEx_InjectedGetValue
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3864   .text.HAL_ADCEx_RegularStop:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3871   .text.HAL_ADCEx_RegularStop:0000000000000000 HAL_ADCEx_RegularStop
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3949   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:3956   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 HAL_ADCEx_RegularStop_IT
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4039   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4046   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 HAL_ADCEx_RegularStop_DMA
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4158   .text.HAL_ADCEx_RegularMultiModeStop_DMA:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4165   .text.HAL_ADCEx_RegularMultiModeStop_DMA:0000000000000000 HAL_ADCEx_RegularMultiModeStop_DMA
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4361   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4368   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4381   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4388   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 HAL_ADCEx_InjectedQueueOverflowCallback
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4401   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4408   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow2Callback
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4421   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4428   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow3Callback
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4441   .text.HAL_ADC_IRQHandler:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4448   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4900   .text.HAL_ADC_IRQHandler:00000000000002d4 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4905   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4912   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:4999   .text.HAL_ADC_ConfigChannel:000000000000008c $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:5004   .text.HAL_ADC_ConfigChannel:0000000000000090 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:5467   .text.HAL_ADC_ConfigChannel:0000000000000370 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:5476   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:5483   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 HAL_ADCEx_InjectedConfigChannel
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:5662   .text.HAL_ADCEx_InjectedConfigChannel:000000000000011c $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:5667   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000120 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:6138   .text.HAL_ADCEx_InjectedConfigChannel:000000000000040c $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:6146   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:6153   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:6446   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:6453   .text.HAL_ADCEx_MultiModeConfigChannel:0000000000000000 HAL_ADCEx_MultiModeConfigChannel
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s:6682   .text.HAL_ADCEx_MultiModeConfigChannel:000000000000012c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_ADC_ErrorCallback
HAL_ADC_ConvHalfCpltCallback
HAL_ADC_ConvCpltCallback
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccoUAr0Y.s 			page 269


HAL_ADC_MspInit
SystemCoreClock
HAL_ADC_MspDeInit
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_ADC_LevelOutOfWindowCallback
