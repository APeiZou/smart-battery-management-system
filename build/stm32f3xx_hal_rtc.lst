ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_rtc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_RTC_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_RTC_MspInit:
  26              	.LFB126:
  27              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @file    stm32f3xx_hal_rtc.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @version V1.4.0
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @date    16-December-2016
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          functionalities of the Real-Time Clock (RTC) peripheral:
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + Initialization
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + Calendar (Time and Date) configuration
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + Alarms (Alarm A and Alarm B) configuration
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + WakeUp Timer configuration
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + TimeStamp configuration
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + Tampers configuration
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + Backup Data Registers configuration  
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + RTC Tamper and TimeStamp Pins Selection 
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *           + Interrupts and flags management
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   @verbatim
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================     
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                           ##### RTC Operating Condition #####
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] The real-time clock (RTC) and the RTC backup registers can be powered
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          from the VBAT voltage when the main VDD supply is powered off.
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          To retain the content of the RTC backup registers and supply the RTC 
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          when VDD is turned off, VBAT pin can be connected to an optional
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          standby voltage supplied by a battery or by another source.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] To allow the RTC to operate even when the main digital supply (VDD) 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 2


  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          is turned off, the VBAT pin powers the following blocks:
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) The RTC
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) The LSE oscillator
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) PC13 to PC15 I/Os (when available)
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] When the backup domain is supplied by VDD (analog switch connected 
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          to VDD), the following functions are available:
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) PC14 and PC15 can be used as either GPIO or LSE pins
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) PC13 can be used as a GPIO or as the RTC_OUT pin
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] When the backup domain is supplied by VBAT (analog switch connected 
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          to VBAT because VDD is not present), the following functions are available:
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) PC14 and PC15 can be used as LSE pins only
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) PC13 can be used as the RTC_OUT pin 
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ##### Backup Domain Reset #####
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] The backup domain reset sets all RTC registers and the RCC_BDCR 
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          register to their reset values. 
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          A backup domain reset is generated when one of the following events
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          occurs:
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) Software reset, triggered by setting the BDRST bit in the 
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                RCC Backup domain control register (RCC_BDCR).
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) VDD or VBAT power on, if both supplies have previously been
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                powered off.
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                    ##### Backup Domain Access #####
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===================================================================
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] After reset, the backup domain (RTC registers, RTC backup data 
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          registers and backup SRAM) is protected against possible unwanted write 
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          accesses.
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) Enable the Power Controller (PWR) APB1 interface clock using the
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                __HAL_RCC_PWR_CLK_ENABLE() function.
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) Select the RTC clock source using the __HAL_RCC_RTC_CONFIG() function.
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            (#) Enable RTC Clock using the __HAL_RCC_RTC_ENABLE() function.
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   ##### How to use RTC Driver #####
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===================================================================
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] 
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) Enable the RTC domain access (see description in the section above).
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour 
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             format using the HAL_RTC_Init() function.
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     *** Time and Date configuration ***
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     ===================================
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] 
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime() 
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             and HAL_RTC_SetDate() functions.
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions. 
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     *** Alarm configuration ***
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     ===========================
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 3


  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function. 
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             You can also configure the RTC Alarm with interrupt mode using the 
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             HAL_RTC_SetAlarm_IT() function.
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     *** RTC Wakeup configuration ***
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     ================================
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] 
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTC_SetWakeUpTimer()
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             function. You can also configure the RTC Wakeup timer with interrupt mode 
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             using the HAL_RTC_SetWakeUpTimer_IT() function.
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To read the RTC WakeUp Counter register, use the HAL_RTC_GetWakeUpTimer() 
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             function.
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     *** TimeStamp configuration ***
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     ===============================
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..]
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) Configure the RTC_AF trigger and enables the RTC TimeStamp using the 
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             HAL_RTC_SetTimeStamp() function. You can also configure the RTC TimeStamp with 
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             interrupt mode using the HAL_RTC_SetTimeStamp_IT() function.
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTC_GetTimeStamp()
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             function.
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     *** Tamper configuration ***
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     ============================
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..]
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) Enable the RTC Tamper and Configure the Tamper filter count, trigger Edge 
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             or Level according to the Tamper filter (if equal to 0 Edge else Level) 
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             value, sampling frequency, precharge or discharge and Pull-UP using the 
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             HAL_RTC_SetTamper() function. You can configure RTC Tamper with interrupt 
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             mode using HAL_RTC_SetTamper_IT() function.
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     *** Backup Data Registers configuration ***
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     ===========================================
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..]
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To write to the RTC Backup Data registers, use the HAL_RTC_BKUPWrite()
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             function.  
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         (+) To read the RTC Backup Data registers, use the HAL_RTC_BKUPRead()
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             function.
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   ##### RTC and low power modes #####
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===================================================================
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] The MCU can be woken up from a low power mode by an RTC alternate 
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          function.
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] The RTC alternate functions are the RTC alarms (Alarm A and Alarm B), 
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          These RTC alternate functions can wake up the system from the Stop and 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          Standby low power modes.
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] The system can also wake up from low power modes without depending 
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          on an external interrupt (Auto-wakeup mode), by using the RTC alarm 
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          or the RTC wakeup events.
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..] The RTC provides a programmable time base for waking up from the 
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          Stop or Standby mode at regular intervals.
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          Wakeup from STOP and Standby modes is possible only when the RTC clock source
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          is LSE or LSI.
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****      
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 4


 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   @endverbatim
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   ******************************************************************************
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @attention
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * are permitted provided that the following conditions are met:
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer.
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer in the documentation
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *      and/or other materials provided with the distribution.
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *      may be used to endorse or promote products derived from this software
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *      without specific prior written permission.
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   ******************************************************************************  
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** #include "stm32f3xx_hal.h"
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @addtogroup STM32F3xx_HAL_Driver
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @addtogroup RTC
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief RTC HAL module driver
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /* Exported functions ---------------------------------------------------------*/
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 5


 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group1
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions 
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @verbatim    
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          RTC Prescaler (Synchronous and Asynchronous), RTC Hour format, disable 
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          RTC registers Write protection, enter and exit the RTC initialization mode, 
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          (#) The RTC Prescaler is programmed to generate the RTC 1Hz time base. 
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              It is split into 2 programmable prescalers to minimize power consumption.
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              (++) A 7-bit asynchronous prescaler and a 15-bit synchronous prescaler.
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              (++) When both prescalers are used, it is recommended to configure the 
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  asynchronous prescaler to a high value to minimize power consumption.
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              is enabled by writing a key into the Write Protection register, RTC_WPR.
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          (#) To configure the RTC Calendar, user application should enter 
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              initialization mode. In this mode, the calendar counter is stopped 
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              and its value can be updated. When the initialization sequence is 
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              complete, the calendar restarts counting after 4 RTCCLK cycles.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          (#) To read the calendar through the shadow registers after Calendar 
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              initialization, calendar update or after wakeup from low power modes 
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              the software must first clear the RSF flag. The software must then 
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              wait until it is set again before reading the calendar, which means 
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              that the calendar registers have been correctly copied into the 
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              RTC_TR and RTC_DR shadow registers.The HAL_RTC_WaitForSynchro() function 
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****              implements the above software sequence (RSF clear and RSF check).
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @endverbatim
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Initialize the RTC according to the specified parameters 
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         in the RTC_InitTypeDef structure and initialize the associated handle.
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(hrtc == NULL)
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****      return HAL_ERROR;
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_HOUR_FORMAT(hrtc->Init.HourFormat));
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_SYNCH_PREDIV(hrtc->Init.SynchPrediv));
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT(hrtc->Init.OutPut));
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_POL(hrtc->Init.OutPutPolarity));
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_OUTPUT_TYPE(hrtc->Init.OutPutType));
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 6


 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(hrtc->State == HAL_RTC_STATE_RESET)
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Allocate lock resource and initialize it */
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Lock = HAL_UNLOCKED;
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Initialize RTC MSP */
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     HAL_RTC_MspInit(hrtc);
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Set RTC state */  
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;  
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****        
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Set Initialization mode */
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC state */
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     return HAL_ERROR;
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   } 
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   { 
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Clear RTC_CR FMT, OSEL and POL Bits */
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL));
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC_CR register */
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutP
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the RTC PRER */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->PRER = (uint32_t)(hrtc->Init.SynchPrediv);
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16U);
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Exit Initialization mode */
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->TAFCR &= (uint32_t)~RTC_TAFCR_ALARMOUTTYPE;
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->TAFCR |= (uint32_t)(hrtc->Init.OutPutType); 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC state */
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     return HAL_OK;
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  DeInitialize the RTC peripheral.
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   This function doesn't reset the RTC Backup Data registers.   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 7


 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Set RTC state */
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY; 
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Set Initialization mode */
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC state */
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     return HAL_ERROR;
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }  
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Reset TR, DR and CR registers */
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->TR = 0x00000000U;
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->DR = (RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0);
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CR &= RTC_CR_WUCKSEL;
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till WUTWF flag is set and if Time out is reached exit */
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(((hrtc->Instance->ISR) & RTC_ISR_WUTWF) == (uint32_t)RESET)
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       { 
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Set RTC state */
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       } 
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Reset all RTC CR register bits */
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CR &= 0x00000000U;
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->WUTR = RTC_WUTR_WUT;
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = 0x00000000U;        
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = 0x00000000U;
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 8


 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->SHIFTR = 0x00000000U;
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CALR = 0x00000000U;
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = 0x00000000U;
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = 0x00000000U;
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Reset ISR register and exit initialization mode */
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ISR = 0x00000000U;
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Reset Tamper and alternate functions configuration register */
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->TAFCR = 0x00000000U;
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* If  RTC_CR_BYPSHAD bit = 0U, wait for synchro else this check is not needed */
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_ERROR;
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }    
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* De-Initialize RTC MSP */
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   HAL_RTC_MspDeInit(hrtc);
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_RESET; 
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Release Lock */
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Initialize the RTC MSP.
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle  
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval None
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
  28              		.loc 1 420 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE126:
  38              		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 9


  39              		.align	1
  40              		.weak	HAL_RTC_MspDeInit
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HAL_RTC_MspDeInit:
  47              	.LFB127:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   UNUSED(hrtc);
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    */ 
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  DeInitialize the RTC MSP.
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle 
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval None
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef* hrtc)
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
  48              		.loc 1 435 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.LVL1:
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE127:
  58              		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
  59              		.align	1
  60              		.global	HAL_RTC_DeactivateAlarm
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	HAL_RTC_DeactivateAlarm:
  67              	.LFB134:
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   UNUSED(hrtc);
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    */ 
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @}
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group2
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @verbatim   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 10


 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================  
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @endverbatim
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Set RTC current time.
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  /* Check the parameters */
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Locked */ 
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sTime->Hours));
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       sTime->TimeFormat = 0x00U;
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sTime->Hours));
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sTime->Minutes));
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sTime->Seconds));
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << 16U) | \
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16U));  
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 11


 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sTime->Hours);
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat)); 
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       sTime->TimeFormat = 0x00U;
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sTime->Hours) << 16U) | \
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sTime->TimeFormat) << 16U));   
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Set Initialization mode */
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC state */
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Process Unlocked */ 
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     return HAL_ERROR;
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   } 
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set the RTC_TR register */
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****      
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Clear the bits to be configured */
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BCK);
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the RTC_CR register */
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Exit Initialization mode */
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0U, wait for synchro else this check is not needed */
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {        
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 12


 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_ERROR;
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    hrtc->State = HAL_RTC_STATE_READY;
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    __HAL_UNLOCK(hrtc); 
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****      
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    return HAL_OK;
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Get RTC current time.
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note  You can use SubSeconds and SecondFraction (sTime structure fields returned) to convert S
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *        value in second fraction ratio with time unit following generic formula:
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *        Second fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1)] * ti
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *        This conversion can be performed only if no shift operation is pending (ie. SHFP=0) when
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   Call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values 
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         in the higher-order calendar shadow registers.
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get subseconds structure field from the corresponding register*/
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get SecondFraction structure field from the corresponding register field*/
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get the TR register */
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   tmpreg = (uint32_t)(hrtc->Instance->TR & RTC_TR_RESERVED_MASK); 
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> 16U);
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8U);
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16U); 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 13


 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the input parameters format */
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Convert the time structure parameters to Binary format */
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sTime->Hours = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);  
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Set RTC current date.
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sDate: Pointer to date structure
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format: specifies the format of the entered parameters.
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  /* Check the parameters */
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  /* Process Locked */ 
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  __HAL_LOCK(hrtc);
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY; 
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {   
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date)); 
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << 16U) | \
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)sDate->WeekDay << 13U));   
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {   
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     datetmpreg = RTC_Bcd2ToByte(sDate->Month);
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 14


 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(datetmpreg));
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     datetmpreg = RTC_Bcd2ToByte(sDate->Date);
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(datetmpreg));
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     datetmpreg = ((((uint32_t)sDate->Year) << 16U) | \
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << 13U));  
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Set Initialization mode */
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc); 
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC state*/
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Process Unlocked */ 
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     return HAL_ERROR;
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   } 
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set the RTC_DR register */
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Exit Initialization mode */
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ISR &= ((uint32_t)~RTC_ISR_INIT);
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* If  CR_BYPSHAD bit = 0U, wait for synchro else this check is not needed */
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       { 
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_ERROR;
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Enable the write protection for RTC registers */
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY ;
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 15


 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Process Unlocked */ 
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     return HAL_OK;    
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Get RTC current date.
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sDate: Pointer to Date structure
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN :  Binary data format 
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD :  BCD data format
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****           
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get the DR register */
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   datetmpreg = (uint32_t)(hrtc->Instance->DR & RTC_DR_RESERVED_MASK); 
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->Year = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> 16U);
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13U); 
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the input parameters format */
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {    
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Convert the date structure parameters to Binary format */
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sDate->Year = (uint8_t)RTC_Bcd2ToByte(sDate->Year);
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);  
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @}
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group3
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @verbatim   
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================  
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 16


 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @endverbatim
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm.
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Locked */ 
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 17


 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask)); 
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }  
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));   
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Configure the Alarm register */
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(sAlarm->Alarm == RTC_ALARM_A)
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 18


 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }   
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRB);
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****        
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }  
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }    
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc); 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 19


 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);   
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Change RTC state */
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Unlocked */ 
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm with Interrupt.
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         is disabled (Use the HAL_RTC_DeactivateAlarm()).   
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.   
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Locked */ 
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 20


1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << 16U) | \
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask)); 
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((hrtc->Instance->CR & RTC_CR_FMT) != (uint32_t)RESET)
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(tmpreg));
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(tmpreg));    
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     else
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       tmpreg = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(tmpreg));      
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << 16U) | \
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));     
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 21


1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Configure the Alarm register */
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(sAlarm->Alarm == RTC_ALARM_A)
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Clear flag alarm A */
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }  
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc,RTC_IT_ALRA);
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Clear flag alarm B */
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 22


1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }  
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRB);
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* RTC Alarm Interrupt Configuration: EXTI configuration */
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_IT();
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);  
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Unlocked */ 
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);  
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Deactivate the specified RTC Alarm.
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_ALARM_A :  AlarmA
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *            @arg RTC_ALARM_B :  AlarmB
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
  68              		.loc 1 1178 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              	.LVL2:
  73              		.loc 1 1178 0
  74 0000 38B5     		push	{r3, r4, r5, lr}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 16
  77              		.cfi_offset 3, -16
  78              		.cfi_offset 4, -12
  79              		.cfi_offset 5, -8
  80              		.cfi_offset 14, -4
  81              	.LVL3:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 23


1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Locked */ 
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
  82              		.loc 1 1185 0
  83 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
  84 0004 012B     		cmp	r3, #1
  85 0006 55D0     		beq	.L11
  86 0008 0446     		mov	r4, r0
  87              		.loc 1 1185 0 is_stmt 0 discriminator 2
  88 000a 0123     		movs	r3, #1
  89 000c 0377     		strb	r3, [r0, #28]
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  90              		.loc 1 1187 0 is_stmt 1 discriminator 2
  91 000e 0223     		movs	r3, #2
  92 0010 4377     		strb	r3, [r0, #29]
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  93              		.loc 1 1190 0 discriminator 2
  94 0012 0368     		ldr	r3, [r0]
  95 0014 CA22     		movs	r2, #202
  96 0016 5A62     		str	r2, [r3, #36]
  97 0018 0368     		ldr	r3, [r0]
  98 001a 5322     		movs	r2, #83
  99 001c 5A62     		str	r2, [r3, #36]
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Alarm == RTC_ALARM_A)
 100              		.loc 1 1192 0 discriminator 2
 101 001e B1F5807F 		cmp	r1, #256
 102 0022 1FD0     		beq	.L13
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* AlarmA */
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == RESET)
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       { 
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 24


1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }      
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* AlarmB */
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 103              		.loc 1 1222 0
 104 0024 0268     		ldr	r2, [r0]
 105 0026 9368     		ldr	r3, [r2, #8]
 106 0028 23F40073 		bic	r3, r3, #512
 107 002c 9360     		str	r3, [r2, #8]
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */ 
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc,RTC_IT_ALRB);
 108              		.loc 1 1225 0
 109 002e 0268     		ldr	r2, [r0]
 110 0030 9368     		ldr	r3, [r2, #8]
 111 0032 23F40053 		bic	r3, r3, #8192
 112 0036 9360     		str	r3, [r2, #8]
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 113              		.loc 1 1227 0
 114 0038 FFF7FEFF 		bl	HAL_GetTick
 115              	.LVL4:
 116 003c 0546     		mov	r5, r0
 117              	.LVL5:
 118              	.L9:
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == RESET)
 119              		.loc 1 1230 0
 120 003e 2368     		ldr	r3, [r4]
 121 0040 DB68     		ldr	r3, [r3, #12]
 122 0042 13F0020F 		tst	r3, #2
 123 0046 2DD1     		bne	.L8
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 124              		.loc 1 1232 0
 125 0048 FFF7FEFF 		bl	HAL_GetTick
 126              	.LVL6:
 127 004c 401B     		subs	r0, r0, r5
 128 004e B0F57A7F 		cmp	r0, #1000
 129 0052 F4D9     		bls	.L9
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 130              		.loc 1 1235 0
 131 0054 2368     		ldr	r3, [r4]
 132 0056 FF22     		movs	r2, #255
 133 0058 5A62     		str	r2, [r3, #36]
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT; 
 134              		.loc 1 1237 0
 135 005a 0320     		movs	r0, #3
 136 005c 6077     		strb	r0, [r4, #29]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 25


1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         /* Process Unlocked */ 
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 137              		.loc 1 1240 0
 138 005e 0023     		movs	r3, #0
 139 0060 2377     		strb	r3, [r4, #28]
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
 140              		.loc 1 1242 0
 141 0062 38BD     		pop	{r3, r4, r5, pc}
 142              	.LVL7:
 143              	.L13:
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 144              		.loc 1 1195 0
 145 0064 0268     		ldr	r2, [r0]
 146 0066 9368     		ldr	r3, [r2, #8]
 147 0068 23F48073 		bic	r3, r3, #256
 148 006c 9360     		str	r3, [r2, #8]
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 149              		.loc 1 1198 0
 150 006e 0268     		ldr	r2, [r0]
 151 0070 9368     		ldr	r3, [r2, #8]
 152 0072 23F48053 		bic	r3, r3, #4096
 153 0076 9360     		str	r3, [r2, #8]
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 154              		.loc 1 1200 0
 155 0078 FFF7FEFF 		bl	HAL_GetTick
 156              	.LVL8:
 157 007c 0546     		mov	r5, r0
 158              	.LVL9:
 159              	.L6:
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 160              		.loc 1 1203 0
 161 007e 2368     		ldr	r3, [r4]
 162 0080 DB68     		ldr	r3, [r3, #12]
 163 0082 13F0010F 		tst	r3, #1
 164 0086 0DD1     		bne	.L8
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       { 
 165              		.loc 1 1205 0
 166 0088 FFF7FEFF 		bl	HAL_GetTick
 167              	.LVL10:
 168 008c 401B     		subs	r0, r0, r5
 169 008e B0F57A7F 		cmp	r0, #1000
 170 0092 F4D9     		bls	.L6
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 171              		.loc 1 1208 0
 172 0094 2368     		ldr	r3, [r4]
 173 0096 FF22     		movs	r2, #255
 174 0098 5A62     		str	r2, [r3, #36]
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 175              		.loc 1 1210 0
 176 009a 0320     		movs	r0, #3
 177 009c 6077     		strb	r0, [r4, #29]
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 178              		.loc 1 1213 0
 179 009e 0023     		movs	r3, #0
 180 00a0 2377     		strb	r3, [r4, #28]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 26


1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }      
 181              		.loc 1 1215 0
 182 00a2 38BD     		pop	{r3, r4, r5, pc}
 183              	.LVL11:
 184              	.L8:
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }    
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 185              		.loc 1 1247 0
 186 00a4 2368     		ldr	r3, [r4]
 187 00a6 FF22     		movs	r2, #255
 188 00a8 5A62     		str	r2, [r3, #36]
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 189              		.loc 1 1249 0
 190 00aa 0123     		movs	r3, #1
 191 00ac 6377     		strb	r3, [r4, #29]
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Process Unlocked */ 
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);  
 192              		.loc 1 1252 0
 193 00ae 0020     		movs	r0, #0
 194 00b0 2077     		strb	r0, [r4, #28]
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK; 
 195              		.loc 1 1254 0
 196 00b2 38BD     		pop	{r3, r4, r5, pc}
 197              	.LVL12:
 198              	.L11:
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 199              		.loc 1 1185 0
 200 00b4 0220     		movs	r0, #2
 201              	.LVL13:
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 202              		.loc 1 1255 0
 203 00b6 38BD     		pop	{r3, r4, r5, pc}
 204              		.cfi_endproc
 205              	.LFE134:
 207              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 208              		.align	1
 209              		.weak	HAL_RTC_AlarmAEventCallback
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	HAL_RTC_AlarmAEventCallback:
 216              	.LFB137:
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****            
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Date structure
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: AlarmA
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 27


1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_ALARM_B: AlarmB  
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the parameters */
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Alarm == RTC_ALARM_A)
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* AlarmA */
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_A;
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMAR);
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR ) & RTC_ALRMASSR_SS);
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   else
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_B;
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMBR);
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Fill the structure with the read parameters */
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.Hours = (uint32_t)((tmpreg & (RTC_ALRMAR_HT | RTC_ALRMAR_HU)) >> 16U);
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8U);
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16U);
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24U);
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }  
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Handle Alarm interrupt request.
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval None
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 28


1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef* hrtc)
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {  
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA) != RESET)
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Get the pending status of the AlarmA Interrupt */
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != RESET)
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       /* AlarmA callback */ 
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       /* Clear the AlarmA interrupt pending bit */
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc,RTC_FLAG_ALRAF);
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get the AlarmB interrupt source enable status */
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRB) != RESET)
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Get the pending status of the AlarmB Interrupt */
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) != RESET)
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       /* AlarmB callback */ 
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       HAL_RTCEx_AlarmBEventCallback(hrtc);
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       /* Clear the AlarmB interrupt pending bit */
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc,RTC_FLAG_ALRBF);
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Change RTC state */
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Alarm A callback.
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval None
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 217              		.loc 1 1364 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 222              	.LVL14:
 223 0000 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE137:
 227              		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 228              		.align	1
 229              		.global	HAL_RTC_AlarmIRQHandler
 230              		.syntax unified
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 29


 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	HAL_RTC_AlarmIRQHandler:
 236              	.LFB136:
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
 237              		.loc 1 1322 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              	.LVL15:
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
 242              		.loc 1 1322 0
 243 0000 10B5     		push	{r4, lr}
 244              	.LCFI1:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 4, -8
 247              		.cfi_offset 14, -4
 248 0002 0446     		mov	r4, r0
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 249              		.loc 1 1324 0
 250 0004 0368     		ldr	r3, [r0]
 251 0006 9A68     		ldr	r2, [r3, #8]
 252 0008 12F4805F 		tst	r2, #4096
 253 000c 03D0     		beq	.L16
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 254              		.loc 1 1327 0
 255 000e DB68     		ldr	r3, [r3, #12]
 256 0010 13F4807F 		tst	r3, #256
 257 0014 0FD1     		bne	.L19
 258              	.LVL16:
 259              	.L16:
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 260              		.loc 1 1338 0
 261 0016 2368     		ldr	r3, [r4]
 262 0018 9A68     		ldr	r2, [r3, #8]
 263 001a 12F4005F 		tst	r2, #8192
 264 001e 03D0     		beq	.L17
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 265              		.loc 1 1341 0
 266 0020 DB68     		ldr	r3, [r3, #12]
 267 0022 13F4007F 		tst	r3, #512
 268 0026 0FD1     		bne	.L20
 269              	.L17:
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 270              		.loc 1 1352 0
 271 0028 4FF40032 		mov	r2, #131072
 272 002c 0B4B     		ldr	r3, .L21
 273 002e 5A61     		str	r2, [r3, #20]
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 274              		.loc 1 1355 0
 275 0030 0123     		movs	r3, #1
 276 0032 6377     		strb	r3, [r4, #29]
 277 0034 10BD     		pop	{r4, pc}
 278              	.LVL17:
 279              	.L19:
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 30


 280              		.loc 1 1330 0
 281 0036 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
 282              	.LVL18:
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 283              		.loc 1 1333 0
 284 003a 2268     		ldr	r2, [r4]
 285 003c D368     		ldr	r3, [r2, #12]
 286 003e DBB2     		uxtb	r3, r3
 287 0040 63F4C073 		orn	r3, r3, #384
 288 0044 D360     		str	r3, [r2, #12]
 289 0046 E6E7     		b	.L16
 290              	.L20:
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       
 291              		.loc 1 1344 0
 292 0048 2046     		mov	r0, r4
 293 004a FFF7FEFF 		bl	HAL_RTCEx_AlarmBEventCallback
 294              	.LVL19:
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
 295              		.loc 1 1347 0
 296 004e 2268     		ldr	r2, [r4]
 297 0050 D368     		ldr	r3, [r2, #12]
 298 0052 DBB2     		uxtb	r3, r3
 299 0054 63F42073 		orn	r3, r3, #640
 300 0058 D360     		str	r3, [r2, #12]
 301 005a E5E7     		b	.L17
 302              	.L22:
 303              		.align	2
 304              	.L21:
 305 005c 00040140 		.word	1073808384
 306              		.cfi_endproc
 307              	.LFE136:
 309              		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
 310              		.align	1
 311              		.global	HAL_RTC_PollForAlarmAEvent
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 315              		.fpu fpv4-sp-d16
 317              	HAL_RTC_PollForAlarmAEvent:
 318              	.LFB138:
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   UNUSED(hrtc);
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****    */
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Handle AlarmA Polling request.
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Timeout: Timeout duration
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {  
 319              		.loc 1 1380 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 31


 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              	.LVL20:
 324 0000 70B5     		push	{r4, r5, r6, lr}
 325              	.LCFI2:
 326              		.cfi_def_cfa_offset 16
 327              		.cfi_offset 4, -16
 328              		.cfi_offset 5, -12
 329              		.cfi_offset 6, -8
 330              		.cfi_offset 14, -4
 331 0002 0446     		mov	r4, r0
 332 0004 0D46     		mov	r5, r1
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();   
 333              		.loc 1 1382 0
 334 0006 FFF7FEFF 		bl	HAL_GetTick
 335              	.LVL21:
 336 000a 0646     		mov	r6, r0
 337              	.LVL22:
 338              	.L25:
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == RESET)
 339              		.loc 1 1384 0
 340 000c 2368     		ldr	r3, [r4]
 341 000e DA68     		ldr	r2, [r3, #12]
 342 0010 12F4807F 		tst	r2, #256
 343 0014 0BD1     		bne	.L30
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if(Timeout != HAL_MAX_DELAY)
 344              		.loc 1 1386 0
 345 0016 B5F1FF3F 		cmp	r5, #-1
 346 001a F7D0     		beq	.L25
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 347              		.loc 1 1388 0
 348 001c 25B1     		cbz	r5, .L26
 349              		.loc 1 1388 0 is_stmt 0 discriminator 1
 350 001e FFF7FEFF 		bl	HAL_GetTick
 351              	.LVL23:
 352 0022 801B     		subs	r0, r0, r6
 353 0024 8542     		cmp	r5, r0
 354 0026 F1D2     		bcs	.L25
 355              	.L26:
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 356              		.loc 1 1390 0 is_stmt 1
 357 0028 0320     		movs	r0, #3
 358 002a 6077     		strb	r0, [r4, #29]
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
 359              		.loc 1 1391 0
 360 002c 70BD     		pop	{r4, r5, r6, pc}
 361              	.LVL24:
 362              	.L30:
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 32


1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 363              		.loc 1 1397 0
 364 002e DA68     		ldr	r2, [r3, #12]
 365 0030 D2B2     		uxtb	r2, r2
 366 0032 62F4C072 		orn	r2, r2, #384
 367 0036 DA60     		str	r2, [r3, #12]
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Change RTC state */
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 368              		.loc 1 1400 0
 369 0038 0123     		movs	r3, #1
 370 003a 6377     		strb	r3, [r4, #29]
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;  
 371              		.loc 1 1402 0
 372 003c 0020     		movs	r0, #0
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 373              		.loc 1 1403 0
 374 003e 70BD     		pop	{r4, r5, r6, pc}
 375              		.cfi_endproc
 376              	.LFE138:
 378              		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 379              		.align	1
 380              		.global	HAL_RTC_WaitForSynchro
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu fpv4-sp-d16
 386              	HAL_RTC_WaitForSynchro:
 387              	.LFB139:
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @}
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @@addtogroup RTC_Exported_Functions_Group4 Peripheral Control functions 
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *  @brief   Peripheral Control functions 
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @verbatim   
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================  
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..]
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     This subsection provides functions allowing to
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @endverbatim
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Wait until the RTC Time and Date registers (RTC_TR and RTC_DR) are
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         synchronized with RTC APB clock.
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the 
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function. 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 33


1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar 
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes 
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         the software must first clear the RSF flag. 
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         The software must then wait until it is set again before reading 
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         the calendar, which means that the calendar registers have been 
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.   
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL status
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef* hrtc)
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 388              		.loc 1 1439 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              	.LVL25:
 393 0000 38B5     		push	{r3, r4, r5, lr}
 394              	.LCFI3:
 395              		.cfi_def_cfa_offset 16
 396              		.cfi_offset 3, -16
 397              		.cfi_offset 4, -12
 398              		.cfi_offset 5, -8
 399              		.cfi_offset 14, -4
 400 0002 0446     		mov	r4, r0
 401              	.LVL26:
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Clear RSF flag */
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 402              		.loc 1 1443 0
 403 0004 0268     		ldr	r2, [r0]
 404 0006 D368     		ldr	r3, [r2, #12]
 405 0008 23F0A003 		bic	r3, r3, #160
 406 000c D360     		str	r3, [r2, #12]
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 407              		.loc 1 1445 0
 408 000e FFF7FEFF 		bl	HAL_GetTick
 409              	.LVL27:
 410 0012 0546     		mov	r5, r0
 411              	.LVL28:
 412              	.L32:
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   while((hrtc->Instance->ISR & RTC_ISR_RSF) == (uint32_t)RESET)
 413              		.loc 1 1448 0
 414 0014 2368     		ldr	r3, [r4]
 415 0016 DB68     		ldr	r3, [r3, #12]
 416 0018 13F0200F 		tst	r3, #32
 417 001c 07D1     		bne	.L37
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 418              		.loc 1 1450 0
 419 001e FFF7FEFF 		bl	HAL_GetTick
 420              	.LVL29:
 421 0022 401B     		subs	r0, r0, r5
 422 0024 B0F57A7F 		cmp	r0, #1000
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 34


 423 0028 F4D9     		bls	.L32
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {       
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       return HAL_TIMEOUT;
 424              		.loc 1 1452 0
 425 002a 0320     		movs	r0, #3
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     } 
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 426              		.loc 1 1457 0
 427 002c 38BD     		pop	{r3, r4, r5, pc}
 428              	.LVL30:
 429              	.L37:
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 430              		.loc 1 1456 0
 431 002e 0020     		movs	r0, #0
 432 0030 38BD     		pop	{r3, r4, r5, pc}
 433              		.cfi_endproc
 434              	.LFE139:
 436              		.section	.text.HAL_RTC_GetState,"ax",%progbits
 437              		.align	1
 438              		.global	HAL_RTC_GetState
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv4-sp-d16
 444              	HAL_RTC_GetState:
 445              	.LFB140:
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @}
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @@addtogroup RTC_Exported_Functions_Group5 Peripheral State functions
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *  @brief   Peripheral State functions 
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  *
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @verbatim   
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                      ##### Peripheral State functions #####
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****  ===============================================================================  
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     [..]
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     This subsection provides functions allowing to
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       (+) Get RTC state
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** @endverbatim
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Return the RTC handle state.
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval HAL state
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef* hrtc)
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 446              		.loc 1 1483 0
 447              		.cfi_startproc
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 35


 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451              	.LVL31:
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Return RTC handle state */
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return hrtc->State;
 452              		.loc 1 1485 0
 453 0000 407F     		ldrb	r0, [r0, #29]	@ zero_extendqisi2
 454              	.LVL32:
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 455              		.loc 1 1486 0
 456 0002 7047     		bx	lr
 457              		.cfi_endproc
 458              	.LFE140:
 460              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 461              		.align	1
 462              		.global	RTC_EnterInitMode
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv4-sp-d16
 468              	RTC_EnterInitMode:
 469              	.LFB141:
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @}
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @}
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /** @@addtogroup RTC_Private_Functions RTC Private Functions
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @{
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Enter the RTC Initialization mode.
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  hrtc: RTC handle
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval An ErrorStatus enumeration value:
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          - HAL_OK : RTC is in Init mode
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   *          - HAL_TIMEOUT : RTC is not in Init mode and in Timeout 
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef* hrtc)
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 470              		.loc 1 1510 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              	.LVL33:
 475 0000 38B5     		push	{r3, r4, r5, lr}
 476              	.LCFI4:
 477              		.cfi_def_cfa_offset 16
 478              		.cfi_offset 3, -16
 479              		.cfi_offset 4, -12
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 36


 480              		.cfi_offset 5, -8
 481              		.cfi_offset 14, -4
 482              	.LVL34:
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check if the Initialization mode is set */
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   if((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
 483              		.loc 1 1514 0
 484 0002 0368     		ldr	r3, [r0]
 485 0004 DA68     		ldr	r2, [r3, #12]
 486 0006 12F0400F 		tst	r2, #64
 487 000a 01D0     		beq	.L46
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set the Initialization mode */
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     while((hrtc->Instance->ISR & RTC_ISR_INITF) == (uint32_t)RESET)
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {       
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         return HAL_TIMEOUT;
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       } 
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     }
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return HAL_OK;  
 488              		.loc 1 1530 0
 489 000c 0020     		movs	r0, #0
 490              	.LVL35:
 491 000e 38BD     		pop	{r3, r4, r5, pc}
 492              	.LVL36:
 493              	.L46:
 494 0010 0446     		mov	r4, r0
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 495              		.loc 1 1517 0
 496 0012 4FF0FF32 		mov	r2, #-1
 497 0016 DA60     		str	r2, [r3, #12]
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
 498              		.loc 1 1519 0
 499 0018 FFF7FEFF 		bl	HAL_GetTick
 500              	.LVL37:
 501 001c 0546     		mov	r5, r0
 502              	.LVL38:
 503              	.L41:
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 504              		.loc 1 1521 0
 505 001e 2368     		ldr	r3, [r4]
 506 0020 DB68     		ldr	r3, [r3, #12]
 507 0022 13F0400F 		tst	r3, #64
 508 0026 07D1     		bne	.L47
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {       
 509              		.loc 1 1523 0
 510 0028 FFF7FEFF 		bl	HAL_GetTick
 511              	.LVL39:
 512 002c 401B     		subs	r0, r0, r5
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 37


 513 002e B0F57A7F 		cmp	r0, #1000
 514 0032 F4D9     		bls	.L41
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       } 
 515              		.loc 1 1525 0
 516 0034 0320     		movs	r0, #3
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 517              		.loc 1 1531 0
 518 0036 38BD     		pop	{r3, r4, r5, pc}
 519              	.LVL40:
 520              	.L47:
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 521              		.loc 1 1530 0
 522 0038 0020     		movs	r0, #0
 523 003a 38BD     		pop	{r3, r4, r5, pc}
 524              		.cfi_endproc
 525              	.LFE141:
 527              		.section	.text.HAL_RTC_Init,"ax",%progbits
 528              		.align	1
 529              		.global	HAL_RTC_Init
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 533              		.fpu fpv4-sp-d16
 535              	HAL_RTC_Init:
 536              	.LFB124:
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 537              		.loc 1 244 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              	.LVL41:
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 542              		.loc 1 246 0
 543 0000 0028     		cmp	r0, #0
 544 0002 4CD0     		beq	.L52
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 545              		.loc 1 244 0
 546 0004 38B5     		push	{r3, r4, r5, lr}
 547              	.LCFI5:
 548              		.cfi_def_cfa_offset 16
 549              		.cfi_offset 3, -16
 550              		.cfi_offset 4, -12
 551              		.cfi_offset 5, -8
 552              		.cfi_offset 14, -4
 553 0006 0446     		mov	r4, r0
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 554              		.loc 1 260 0
 555 0008 437F     		ldrb	r3, [r0, #29]	@ zero_extendqisi2
 556 000a 002B     		cmp	r3, #0
 557 000c 3CD0     		beq	.L57
 558              	.LVL42:
 559              	.L50:
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****        
 560              		.loc 1 270 0
 561 000e 0223     		movs	r3, #2
 562 0010 6377     		strb	r3, [r4, #29]
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 38


 563              		.loc 1 273 0
 564 0012 2368     		ldr	r3, [r4]
 565 0014 CA22     		movs	r2, #202
 566 0016 5A62     		str	r2, [r3, #36]
 567 0018 2368     		ldr	r3, [r4]
 568 001a 5322     		movs	r2, #83
 569 001c 5A62     		str	r2, [r3, #36]
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 570              		.loc 1 276 0
 571 001e 2046     		mov	r0, r4
 572 0020 FFF7FEFF 		bl	RTC_EnterInitMode
 573              	.LVL43:
 574 0024 0246     		mov	r2, r0
 575 0026 0028     		cmp	r0, #0
 576 0028 32D1     		bne	.L58
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Set RTC_CR register */
 577              		.loc 1 289 0
 578 002a 2168     		ldr	r1, [r4]
 579 002c 8B68     		ldr	r3, [r1, #8]
 580 002e 23F4E003 		bic	r3, r3, #7340032
 581 0032 23F04003 		bic	r3, r3, #64
 582 0036 8B60     		str	r3, [r1, #8]
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 583              		.loc 1 291 0
 584 0038 2068     		ldr	r0, [r4]
 585 003a 8168     		ldr	r1, [r0, #8]
 586 003c 6368     		ldr	r3, [r4, #4]
 587 003e 2569     		ldr	r5, [r4, #16]
 588 0040 2B43     		orrs	r3, r3, r5
 589 0042 6569     		ldr	r5, [r4, #20]
 590 0044 2B43     		orrs	r3, r3, r5
 591 0046 0B43     		orrs	r3, r3, r1
 592 0048 8360     		str	r3, [r0, #8]
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->PRER |= (uint32_t)(hrtc->Init.AsynchPrediv << 16U);
 593              		.loc 1 294 0
 594 004a 2368     		ldr	r3, [r4]
 595 004c E168     		ldr	r1, [r4, #12]
 596 004e 1961     		str	r1, [r3, #16]
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 597              		.loc 1 295 0
 598 0050 2168     		ldr	r1, [r4]
 599 0052 0B69     		ldr	r3, [r1, #16]
 600 0054 A068     		ldr	r0, [r4, #8]
 601 0056 43EA0043 		orr	r3, r3, r0, lsl #16
 602 005a 0B61     		str	r3, [r1, #16]
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 603              		.loc 1 298 0
 604 005c 2168     		ldr	r1, [r4]
 605 005e CB68     		ldr	r3, [r1, #12]
 606 0060 23F08003 		bic	r3, r3, #128
 607 0064 CB60     		str	r3, [r1, #12]
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->TAFCR |= (uint32_t)(hrtc->Init.OutPutType); 
 608              		.loc 1 300 0
 609 0066 2168     		ldr	r1, [r4]
 610 0068 0B6C     		ldr	r3, [r1, #64]
 611 006a 23F48023 		bic	r3, r3, #262144
 612 006e 0B64     		str	r3, [r1, #64]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 39


 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 613              		.loc 1 301 0
 614 0070 2168     		ldr	r1, [r4]
 615 0072 0B6C     		ldr	r3, [r1, #64]
 616 0074 A069     		ldr	r0, [r4, #24]
 617 0076 0343     		orrs	r3, r3, r0
 618 0078 0B64     		str	r3, [r1, #64]
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 619              		.loc 1 304 0
 620 007a 2368     		ldr	r3, [r4]
 621 007c FF21     		movs	r1, #255
 622 007e 5962     		str	r1, [r3, #36]
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 623              		.loc 1 307 0
 624 0080 0123     		movs	r3, #1
 625 0082 6377     		strb	r3, [r4, #29]
 626              	.L49:
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 627              		.loc 1 311 0
 628 0084 1046     		mov	r0, r2
 629 0086 38BD     		pop	{r3, r4, r5, pc}
 630              	.LVL44:
 631              	.L57:
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 632              		.loc 1 263 0
 633 0088 0377     		strb	r3, [r0, #28]
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 634              		.loc 1 266 0
 635 008a FFF7FEFF 		bl	HAL_RTC_MspInit
 636              	.LVL45:
 637 008e BEE7     		b	.L50
 638              	.L58:
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 639              		.loc 1 279 0
 640 0090 2368     		ldr	r3, [r4]
 641 0092 FF22     		movs	r2, #255
 642 0094 5A62     		str	r2, [r3, #36]
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 643              		.loc 1 282 0
 644 0096 0423     		movs	r3, #4
 645 0098 6377     		strb	r3, [r4, #29]
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   } 
 646              		.loc 1 284 0
 647 009a 0122     		movs	r2, #1
 648 009c F2E7     		b	.L49
 649              	.LVL46:
 650              	.L52:
 651              	.LCFI6:
 652              		.cfi_def_cfa_offset 0
 653              		.cfi_restore 3
 654              		.cfi_restore 4
 655              		.cfi_restore 5
 656              		.cfi_restore 14
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 657              		.loc 1 248 0
 658 009e 0122     		movs	r2, #1
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 40


 659              		.loc 1 311 0
 660 00a0 1046     		mov	r0, r2
 661              	.LVL47:
 662 00a2 7047     		bx	lr
 663              		.cfi_endproc
 664              	.LFE124:
 666              		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 667              		.align	1
 668              		.global	HAL_RTC_DeInit
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 672              		.fpu fpv4-sp-d16
 674              	HAL_RTC_DeInit:
 675              	.LFB125:
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 676              		.loc 1 320 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680              	.LVL48:
 681 0000 70B5     		push	{r4, r5, r6, lr}
 682              	.LCFI7:
 683              		.cfi_def_cfa_offset 16
 684              		.cfi_offset 4, -16
 685              		.cfi_offset 5, -12
 686              		.cfi_offset 6, -8
 687              		.cfi_offset 14, -4
 688 0002 0446     		mov	r4, r0
 689              	.LVL49:
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 690              		.loc 1 327 0
 691 0004 0223     		movs	r3, #2
 692 0006 4377     		strb	r3, [r0, #29]
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 693              		.loc 1 330 0
 694 0008 0368     		ldr	r3, [r0]
 695 000a CA22     		movs	r2, #202
 696 000c 5A62     		str	r2, [r3, #36]
 697 000e 0368     		ldr	r3, [r0]
 698 0010 5322     		movs	r2, #83
 699 0012 5A62     		str	r2, [r3, #36]
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 700              		.loc 1 333 0
 701 0014 FFF7FEFF 		bl	RTC_EnterInitMode
 702              	.LVL50:
 703 0018 38B1     		cbz	r0, .L60
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 704              		.loc 1 336 0
 705 001a 2368     		ldr	r3, [r4]
 706 001c FF22     		movs	r2, #255
 707 001e 5A62     		str	r2, [r3, #36]
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 708              		.loc 1 339 0
 709 0020 0423     		movs	r3, #4
 710 0022 6377     		strb	r3, [r4, #29]
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }  
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 41


 711              		.loc 1 341 0
 712 0024 0126     		movs	r6, #1
 713              	.LVL51:
 714              	.L61:
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 715              		.loc 1 412 0
 716 0026 3046     		mov	r0, r6
 717 0028 70BD     		pop	{r4, r5, r6, pc}
 718              	.LVL52:
 719              	.L60:
 720 002a 0646     		mov	r6, r0
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->DR = (RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0);
 721              		.loc 1 346 0
 722 002c 2368     		ldr	r3, [r4]
 723 002e 0022     		movs	r2, #0
 724 0030 1A60     		str	r2, [r3]
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Reset All CR bits except CR[2:0] */
 725              		.loc 1 347 0
 726 0032 2368     		ldr	r3, [r4]
 727 0034 42F20112 		movw	r2, #8449
 728 0038 5A60     		str	r2, [r3, #4]
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 729              		.loc 1 349 0
 730 003a 2268     		ldr	r2, [r4]
 731 003c 9368     		ldr	r3, [r2, #8]
 732 003e 03F00703 		and	r3, r3, #7
 733 0042 9360     		str	r3, [r2, #8]
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 734              		.loc 1 351 0
 735 0044 FFF7FEFF 		bl	HAL_GetTick
 736              	.LVL53:
 737 0048 0546     		mov	r5, r0
 738              	.LVL54:
 739              	.L62:
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 740              		.loc 1 354 0
 741 004a 2368     		ldr	r3, [r4]
 742 004c DA68     		ldr	r2, [r3, #12]
 743 004e 12F0040F 		tst	r2, #4
 744 0052 0BD1     		bne	.L66
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       { 
 745              		.loc 1 356 0
 746 0054 FFF7FEFF 		bl	HAL_GetTick
 747              	.LVL55:
 748 0058 401B     		subs	r0, r0, r5
 749 005a B0F57A7F 		cmp	r0, #1000
 750 005e F4D9     		bls	.L62
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 751              		.loc 1 359 0
 752 0060 2368     		ldr	r3, [r4]
 753 0062 FF22     		movs	r2, #255
 754 0064 5A62     		str	r2, [r3, #36]
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 755              		.loc 1 362 0
 756 0066 0326     		movs	r6, #3
 757 0068 6677     		strb	r6, [r4, #29]
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       } 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 42


 758              		.loc 1 364 0
 759 006a DCE7     		b	.L61
 760              	.L66:
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->WUTR = RTC_WUTR_WUT;
 761              		.loc 1 369 0
 762 006c 9A68     		ldr	r2, [r3, #8]
 763 006e 0022     		movs	r2, #0
 764 0070 9A60     		str	r2, [r3, #8]
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 765              		.loc 1 370 0
 766 0072 2368     		ldr	r3, [r4]
 767 0074 4FF6FF71 		movw	r1, #65535
 768 0078 5961     		str	r1, [r3, #20]
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = 0x00000000U;        
 769              		.loc 1 371 0
 770 007a 2368     		ldr	r3, [r4]
 771 007c 1549     		ldr	r1, .L68
 772 007e 1961     		str	r1, [r3, #16]
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = 0x00000000U;
 773              		.loc 1 372 0
 774 0080 2368     		ldr	r3, [r4]
 775 0082 DA61     		str	r2, [r3, #28]
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->SHIFTR = 0x00000000U;
 776              		.loc 1 373 0
 777 0084 2368     		ldr	r3, [r4]
 778 0086 1A62     		str	r2, [r3, #32]
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->CALR = 0x00000000U;
 779              		.loc 1 374 0
 780 0088 2368     		ldr	r3, [r4]
 781 008a DA62     		str	r2, [r3, #44]
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = 0x00000000U;
 782              		.loc 1 375 0
 783 008c 2368     		ldr	r3, [r4]
 784 008e DA63     		str	r2, [r3, #60]
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = 0x00000000U;
 785              		.loc 1 376 0
 786 0090 2368     		ldr	r3, [r4]
 787 0092 5A64     		str	r2, [r3, #68]
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 788              		.loc 1 377 0
 789 0094 2368     		ldr	r3, [r4]
 790 0096 9A64     		str	r2, [r3, #72]
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 791              		.loc 1 380 0
 792 0098 2368     		ldr	r3, [r4]
 793 009a DA60     		str	r2, [r3, #12]
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 794              		.loc 1 383 0
 795 009c 2368     		ldr	r3, [r4]
 796 009e 1A64     		str	r2, [r3, #64]
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 797              		.loc 1 386 0
 798 00a0 2368     		ldr	r3, [r4]
 799 00a2 9B68     		ldr	r3, [r3, #8]
 800 00a4 13F0200F 		tst	r3, #32
 801 00a8 03D1     		bne	.L64
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 43


 802              		.loc 1 388 0
 803 00aa 2046     		mov	r0, r4
 804 00ac FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 805              	.LVL56:
 806 00b0 48B9     		cbnz	r0, .L67
 807              	.L64:
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 808              		.loc 1 401 0
 809 00b2 2368     		ldr	r3, [r4]
 810 00b4 FF22     		movs	r2, #255
 811 00b6 5A62     		str	r2, [r3, #36]
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 812              		.loc 1 404 0
 813 00b8 2046     		mov	r0, r4
 814 00ba FFF7FEFF 		bl	HAL_RTC_MspDeInit
 815              	.LVL57:
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 816              		.loc 1 406 0
 817 00be 0023     		movs	r3, #0
 818 00c0 6377     		strb	r3, [r4, #29]
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 819              		.loc 1 409 0
 820 00c2 2377     		strb	r3, [r4, #28]
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 821              		.loc 1 411 0
 822 00c4 AFE7     		b	.L61
 823              	.L67:
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 824              		.loc 1 391 0
 825 00c6 2368     		ldr	r3, [r4]
 826 00c8 FF22     		movs	r2, #255
 827 00ca 5A62     		str	r2, [r3, #36]
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 828              		.loc 1 393 0
 829 00cc 0423     		movs	r3, #4
 830 00ce 6377     		strb	r3, [r4, #29]
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
 831              		.loc 1 395 0
 832 00d0 0126     		movs	r6, #1
 833 00d2 A8E7     		b	.L61
 834              	.L69:
 835              		.align	2
 836              	.L68:
 837 00d4 FF007F00 		.word	8323327
 838              		.cfi_endproc
 839              	.LFE125:
 841              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 842              		.align	1
 843              		.global	RTC_ByteToBcd2
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 847              		.fpu fpv4-sp-d16
 849              	RTC_ByteToBcd2:
 850              	.LFB142:
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 44


1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Convert a 2 digit decimal to BCD format.
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Value: Byte to be converted
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval Converted byte
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** uint8_t RTC_ByteToBcd2(uint8_t Value)
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 851              		.loc 1 1540 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 0
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856              	.LVL58:
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t bcdhigh = 0U;
 857              		.loc 1 1541 0
 858 0000 0023     		movs	r3, #0
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   while(Value >= 10U)
 859              		.loc 1 1543 0
 860 0002 02E0     		b	.L71
 861              	.LVL59:
 862              	.L72:
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     bcdhigh++;
 863              		.loc 1 1545 0
 864 0004 0133     		adds	r3, r3, #1
 865              	.LVL60:
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     Value -= 10U;
 866              		.loc 1 1546 0
 867 0006 0A38     		subs	r0, r0, #10
 868              	.LVL61:
 869 0008 C0B2     		uxtb	r0, r0
 870              	.LVL62:
 871              	.L71:
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 872              		.loc 1 1543 0
 873 000a 0928     		cmp	r0, #9
 874 000c FAD8     		bhi	.L72
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return  ((uint8_t)(bcdhigh << 4U) | Value);
 875              		.loc 1 1549 0
 876 000e 1B01     		lsls	r3, r3, #4
 877              	.LVL63:
 878 0010 DBB2     		uxtb	r3, r3
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 879              		.loc 1 1550 0
 880 0012 1843     		orrs	r0, r0, r3
 881              	.LVL64:
 882 0014 7047     		bx	lr
 883              		.cfi_endproc
 884              	.LFE142:
 886              		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 887              		.align	1
 888              		.global	HAL_RTC_SetTime
 889              		.syntax unified
 890              		.thumb
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 45


 891              		.thumb_func
 892              		.fpu fpv4-sp-d16
 894              	HAL_RTC_SetTime:
 895              	.LFB128:
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 896              		.loc 1 473 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              	.LVL65:
 901 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 902              	.LCFI8:
 903              		.cfi_def_cfa_offset 24
 904              		.cfi_offset 3, -24
 905              		.cfi_offset 4, -20
 906              		.cfi_offset 5, -16
 907              		.cfi_offset 6, -12
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 14, -4
 910              	.LVL66:
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 911              		.loc 1 482 0
 912 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 913 0004 012B     		cmp	r3, #1
 914 0006 77D0     		beq	.L81
 915 0008 0E46     		mov	r6, r1
 916 000a 0446     		mov	r4, r0
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 917              		.loc 1 482 0 is_stmt 0 discriminator 2
 918 000c 0123     		movs	r3, #1
 919 000e 0377     		strb	r3, [r0, #28]
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 920              		.loc 1 484 0 is_stmt 1 discriminator 2
 921 0010 0223     		movs	r3, #2
 922 0012 4377     		strb	r3, [r0, #29]
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 923              		.loc 1 486 0 discriminator 2
 924 0014 002A     		cmp	r2, #0
 925 0016 46D1     		bne	.L75
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 926              		.loc 1 488 0
 927 0018 0368     		ldr	r3, [r0]
 928 001a 9B68     		ldr	r3, [r3, #8]
 929 001c 13F0400F 		tst	r3, #64
 930 0020 01D1     		bne	.L76
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sTime->Hours));
 931              		.loc 1 495 0
 932 0022 0023     		movs	r3, #0
 933 0024 CB70     		strb	r3, [r1, #3]
 934              	.L76:
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 935              		.loc 1 501 0
 936 0026 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 937              	.LVL67:
 938 0028 FFF7FEFF 		bl	RTC_ByteToBcd2
 939              	.LVL68:
 940 002c 0504     		lsls	r5, r0, #16
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 46


 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 941              		.loc 1 502 0
 942 002e 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 943 0030 FFF7FEFF 		bl	RTC_ByteToBcd2
 944              	.LVL69:
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 945              		.loc 1 501 0
 946 0034 45EA0025 		orr	r5, r5, r0, lsl #8
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         (((uint32_t)sTime->TimeFormat) << 16U));  
 947              		.loc 1 503 0
 948 0038 B078     		ldrb	r0, [r6, #2]	@ zero_extendqisi2
 949 003a FFF7FEFF 		bl	RTC_ByteToBcd2
 950              	.LVL70:
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Seconds)) | \
 951              		.loc 1 502 0
 952 003e 2843     		orrs	r0, r0, r5
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 953              		.loc 1 504 0
 954 0040 F578     		ldrb	r5, [r6, #3]	@ zero_extendqisi2
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                         ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << 8U) | \
 955              		.loc 1 501 0
 956 0042 40EA0545 		orr	r5, r0, r5, lsl #16
 957              	.LVL71:
 958              	.L77:
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 959              		.loc 1 528 0
 960 0046 2368     		ldr	r3, [r4]
 961 0048 CA22     		movs	r2, #202
 962 004a 5A62     		str	r2, [r3, #36]
 963 004c 2368     		ldr	r3, [r4]
 964 004e 5322     		movs	r2, #83
 965 0050 5A62     		str	r2, [r3, #36]
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 966              		.loc 1 531 0
 967 0052 2046     		mov	r0, r4
 968 0054 FFF7FEFF 		bl	RTC_EnterInitMode
 969              	.LVL72:
 970 0058 0746     		mov	r7, r0
 971 005a 0028     		cmp	r0, #0
 972 005c 35D1     		bne	.L83
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****      
 973              		.loc 1 547 0
 974 005e 2368     		ldr	r3, [r4]
 975 0060 05F07F35 		and	r5, r5, #2139062143
 976              	.LVL73:
 977 0064 25F0FE45 		bic	r5, r5, #2130706432
 978 0068 1D60     		str	r5, [r3]
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 979              		.loc 1 550 0
 980 006a 2268     		ldr	r2, [r4]
 981 006c 9368     		ldr	r3, [r2, #8]
 982 006e 23F48023 		bic	r3, r3, #262144
 983 0072 9360     		str	r3, [r2, #8]
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 984              		.loc 1 553 0
 985 0074 2168     		ldr	r1, [r4]
 986 0076 8B68     		ldr	r3, [r1, #8]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 47


 987 0078 F268     		ldr	r2, [r6, #12]
 988 007a 3069     		ldr	r0, [r6, #16]
 989 007c 0243     		orrs	r2, r2, r0
 990 007e 1343     		orrs	r3, r3, r2
 991 0080 8B60     		str	r3, [r1, #8]
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 992              		.loc 1 556 0
 993 0082 2268     		ldr	r2, [r4]
 994 0084 D368     		ldr	r3, [r2, #12]
 995 0086 23F08003 		bic	r3, r3, #128
 996 008a D360     		str	r3, [r2, #12]
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 997              		.loc 1 559 0
 998 008c 2368     		ldr	r3, [r4]
 999 008e 9B68     		ldr	r3, [r3, #8]
 1000 0090 13F0200F 		tst	r3, #32
 1001 0094 22D0     		beq	.L84
 1002              	.L80:
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1003              		.loc 1 576 0
 1004 0096 2368     		ldr	r3, [r4]
 1005 0098 FF22     		movs	r2, #255
 1006 009a 5A62     		str	r2, [r3, #36]
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1007              		.loc 1 578 0
 1008 009c 0123     		movs	r3, #1
 1009 009e 6377     		strb	r3, [r4, #29]
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****      
 1010              		.loc 1 580 0
 1011 00a0 0023     		movs	r3, #0
 1012 00a2 2377     		strb	r3, [r4, #28]
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1013              		.loc 1 582 0
 1014 00a4 29E0     		b	.L74
 1015              	.LVL74:
 1016              	.L75:
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1017              		.loc 1 508 0
 1018 00a6 0368     		ldr	r3, [r0]
 1019 00a8 9B68     		ldr	r3, [r3, #8]
 1020 00aa 13F0400F 		tst	r3, #64
 1021 00ae 01D1     		bne	.L78
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 1022              		.loc 1 516 0
 1023 00b0 0023     		movs	r3, #0
 1024 00b2 CB70     		strb	r3, [r1, #3]
 1025              	.L78:
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1026              		.loc 1 521 0
 1027 00b4 3578     		ldrb	r5, [r6]	@ zero_extendqisi2
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 1028              		.loc 1 522 0
 1029 00b6 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 1030              	.LVL75:
 1031 00b8 0002     		lsls	r0, r0, #8
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1032              		.loc 1 521 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 48


 1033 00ba 40EA0540 		orr	r0, r0, r5, lsl #16
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sTime->TimeFormat) << 16U));   
 1034              		.loc 1 523 0
 1035 00be B578     		ldrb	r5, [r6, #2]	@ zero_extendqisi2
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sTime->Seconds) | \
 1036              		.loc 1 522 0
 1037 00c0 2843     		orrs	r0, r0, r5
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1038              		.loc 1 524 0
 1039 00c2 F578     		ldrb	r5, [r6, #3]	@ zero_extendqisi2
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sTime->Minutes) << 8U) | \
 1040              		.loc 1 521 0
 1041 00c4 40EA0545 		orr	r5, r0, r5, lsl #16
 1042              	.LVL76:
 1043 00c8 BDE7     		b	.L77
 1044              	.LVL77:
 1045              	.L83:
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1046              		.loc 1 534 0
 1047 00ca 2368     		ldr	r3, [r4]
 1048 00cc FF22     		movs	r2, #255
 1049 00ce 5A62     		str	r2, [r3, #36]
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1050              		.loc 1 537 0
 1051 00d0 0423     		movs	r3, #4
 1052 00d2 6377     		strb	r3, [r4, #29]
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1053              		.loc 1 540 0
 1054 00d4 0023     		movs	r3, #0
 1055 00d6 2377     		strb	r3, [r4, #28]
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   } 
 1056              		.loc 1 542 0
 1057 00d8 0127     		movs	r7, #1
 1058 00da 0EE0     		b	.L74
 1059              	.LVL78:
 1060              	.L84:
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {        
 1061              		.loc 1 561 0
 1062 00dc 2046     		mov	r0, r4
 1063 00de FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 1064              	.LVL79:
 1065 00e2 0028     		cmp	r0, #0
 1066 00e4 D7D0     		beq	.L80
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1067              		.loc 1 564 0
 1068 00e6 2368     		ldr	r3, [r4]
 1069 00e8 FF22     		movs	r2, #255
 1070 00ea 5A62     		str	r2, [r3, #36]
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1071              		.loc 1 566 0
 1072 00ec 0423     		movs	r3, #4
 1073 00ee 6377     		strb	r3, [r4, #29]
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1074              		.loc 1 569 0
 1075 00f0 0023     		movs	r3, #0
 1076 00f2 2377     		strb	r3, [r4, #28]
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 49


 1077              		.loc 1 571 0
 1078 00f4 0127     		movs	r7, #1
 1079 00f6 00E0     		b	.L74
 1080              	.LVL80:
 1081              	.L81:
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1082              		.loc 1 482 0
 1083 00f8 0227     		movs	r7, #2
 1084              	.LVL81:
 1085              	.L74:
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1086              		.loc 1 584 0
 1087 00fa 3846     		mov	r0, r7
 1088 00fc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1089              		.cfi_endproc
 1090              	.LFE128:
 1092              		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 1093              		.align	1
 1094              		.global	HAL_RTC_SetDate
 1095              		.syntax unified
 1096              		.thumb
 1097              		.thumb_func
 1098              		.fpu fpv4-sp-d16
 1100              	HAL_RTC_SetDate:
 1101              	.LFB130:
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 1102              		.loc 1 647 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106              	.LVL82:
 1107 0000 70B5     		push	{r4, r5, r6, lr}
 1108              	.LCFI9:
 1109              		.cfi_def_cfa_offset 16
 1110              		.cfi_offset 4, -16
 1111              		.cfi_offset 5, -12
 1112              		.cfi_offset 6, -8
 1113              		.cfi_offset 14, -4
 1114              	.LVL83:
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1115              		.loc 1 654 0
 1116 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1117 0004 012B     		cmp	r3, #1
 1118 0006 65D0     		beq	.L92
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1119              		.loc 1 654 0 is_stmt 0 discriminator 2
 1120 0008 0123     		movs	r3, #1
 1121 000a 0377     		strb	r3, [r0, #28]
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1122              		.loc 1 656 0 is_stmt 1 discriminator 2
 1123 000c 0223     		movs	r3, #2
 1124 000e 4377     		strb	r3, [r0, #29]
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1125              		.loc 1 658 0 discriminator 2
 1126 0010 3AB9     		cbnz	r2, .L87
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1127              		.loc 1 658 0 is_stmt 0 discriminator 1
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 50


 1128 0012 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1129 0014 13F0100F 		tst	r3, #16
 1130 0018 03D0     		beq	.L87
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1131              		.loc 1 660 0 is_stmt 1
 1132 001a 03F0EF03 		and	r3, r3, #239
 1133 001e 0A33     		adds	r3, r3, #10
 1134 0020 4B70     		strb	r3, [r1, #1]
 1135              	.L87:
 1136 0022 0E46     		mov	r6, r1
 1137 0024 0446     		mov	r4, r0
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {   
 1138              		.loc 1 665 0
 1139 0026 002A     		cmp	r2, #0
 1140 0028 32D1     		bne	.L88
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 1141              		.loc 1 671 0
 1142 002a C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 1143              	.LVL84:
 1144 002c FFF7FEFF 		bl	RTC_ByteToBcd2
 1145              	.LVL85:
 1146 0030 0504     		lsls	r5, r0, #16
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 1147              		.loc 1 672 0
 1148 0032 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 1149 0034 FFF7FEFF 		bl	RTC_ByteToBcd2
 1150              	.LVL86:
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 1151              		.loc 1 671 0
 1152 0038 45EA0025 		orr	r5, r5, r0, lsl #8
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)sDate->WeekDay << 13U));   
 1153              		.loc 1 673 0
 1154 003c B078     		ldrb	r0, [r6, #2]	@ zero_extendqisi2
 1155 003e FFF7FEFF 		bl	RTC_ByteToBcd2
 1156              	.LVL87:
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)) | \
 1157              		.loc 1 672 0
 1158 0042 2843     		orrs	r0, r0, r5
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1159              		.loc 1 674 0
 1160 0044 3578     		ldrb	r5, [r6]	@ zero_extendqisi2
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << 8U) | \
 1161              		.loc 1 671 0
 1162 0046 40EA4535 		orr	r5, r0, r5, lsl #13
 1163              	.LVL88:
 1164              	.L89:
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1165              		.loc 1 691 0
 1166 004a 2368     		ldr	r3, [r4]
 1167 004c CA22     		movs	r2, #202
 1168 004e 5A62     		str	r2, [r3, #36]
 1169 0050 2368     		ldr	r3, [r4]
 1170 0052 5322     		movs	r2, #83
 1171 0054 5A62     		str	r2, [r3, #36]
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1172              		.loc 1 694 0
 1173 0056 2046     		mov	r0, r4
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 51


 1174 0058 FFF7FEFF 		bl	RTC_EnterInitMode
 1175              	.LVL89:
 1176 005c 0646     		mov	r6, r0
 1177              	.LVL90:
 1178 005e 10BB     		cbnz	r0, .L94
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1179              		.loc 1 710 0
 1180 0060 2368     		ldr	r3, [r4]
 1181 0062 25F07F45 		bic	r5, r5, #-16777216
 1182              	.LVL91:
 1183 0066 25F0C005 		bic	r5, r5, #192
 1184 006a 5D60     		str	r5, [r3, #4]
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1185              		.loc 1 713 0
 1186 006c 2268     		ldr	r2, [r4]
 1187 006e D368     		ldr	r3, [r2, #12]
 1188 0070 23F08003 		bic	r3, r3, #128
 1189 0074 D360     		str	r3, [r2, #12]
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1190              		.loc 1 716 0
 1191 0076 2368     		ldr	r3, [r4]
 1192 0078 9B68     		ldr	r3, [r3, #8]
 1193 007a 13F0200F 		tst	r3, #32
 1194 007e 1BD0     		beq	.L95
 1195              	.L91:
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1196              		.loc 1 733 0
 1197 0080 2368     		ldr	r3, [r4]
 1198 0082 FF22     		movs	r2, #255
 1199 0084 5A62     		str	r2, [r3, #36]
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1200              		.loc 1 735 0
 1201 0086 0123     		movs	r3, #1
 1202 0088 6377     		strb	r3, [r4, #29]
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1203              		.loc 1 738 0
 1204 008a 0023     		movs	r3, #0
 1205 008c 2377     		strb	r3, [r4, #28]
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1206              		.loc 1 740 0
 1207 008e 22E0     		b	.L86
 1208              	.LVL92:
 1209              	.L88:
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(datetmpreg));
 1210              		.loc 1 679 0
 1211 0090 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 1212              	.LVL93:
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(datetmpreg));
 1213              		.loc 1 681 0
 1214 0092 8D78     		ldrb	r5, [r1, #2]	@ zero_extendqisi2
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 1215              		.loc 1 684 0
 1216 0094 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 1217              		.loc 1 685 0
 1218 0096 0002     		lsls	r0, r0, #8
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 52


 1219              		.loc 1 684 0
 1220 0098 40EA0340 		orr	r0, r0, r3, lsl #16
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   ((uint32_t)sDate->Date) | \
 1221              		.loc 1 685 0
 1222 009c 2843     		orrs	r0, r0, r5
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1223              		.loc 1 687 0
 1224 009e 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << 8U) | \
 1225              		.loc 1 684 0
 1226 00a0 40EA4535 		orr	r5, r0, r5, lsl #13
 1227              	.LVL94:
 1228 00a4 D1E7     		b	.L89
 1229              	.LVL95:
 1230              	.L94:
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1231              		.loc 1 697 0
 1232 00a6 2368     		ldr	r3, [r4]
 1233 00a8 FF22     		movs	r2, #255
 1234 00aa 5A62     		str	r2, [r3, #36]
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1235              		.loc 1 700 0
 1236 00ac 0423     		movs	r3, #4
 1237 00ae 6377     		strb	r3, [r4, #29]
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1238              		.loc 1 703 0
 1239 00b0 0023     		movs	r3, #0
 1240 00b2 2377     		strb	r3, [r4, #28]
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   } 
 1241              		.loc 1 705 0
 1242 00b4 0126     		movs	r6, #1
 1243 00b6 0EE0     		b	.L86
 1244              	.LVL96:
 1245              	.L95:
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       { 
 1246              		.loc 1 718 0
 1247 00b8 2046     		mov	r0, r4
 1248 00ba FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 1249              	.LVL97:
 1250 00be 0028     		cmp	r0, #0
 1251 00c0 DED0     		beq	.L91
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1252              		.loc 1 721 0
 1253 00c2 2368     		ldr	r3, [r4]
 1254 00c4 FF22     		movs	r2, #255
 1255 00c6 5A62     		str	r2, [r3, #36]
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1256              		.loc 1 723 0
 1257 00c8 0423     		movs	r3, #4
 1258 00ca 6377     		strb	r3, [r4, #29]
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1259              		.loc 1 726 0
 1260 00cc 0023     		movs	r3, #0
 1261 00ce 2377     		strb	r3, [r4, #28]
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }
 1262              		.loc 1 728 0
 1263 00d0 0126     		movs	r6, #1
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 53


 1264 00d2 00E0     		b	.L86
 1265              	.LVL98:
 1266              	.L92:
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1267              		.loc 1 654 0
 1268 00d4 0226     		movs	r6, #2
 1269              	.LVL99:
 1270              	.L86:
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1271              		.loc 1 742 0
 1272 00d6 3046     		mov	r0, r6
 1273 00d8 70BD     		pop	{r4, r5, r6, pc}
 1274              		.cfi_endproc
 1275              	.LFE130:
 1277              		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
 1278              		.align	1
 1279              		.global	HAL_RTC_SetAlarm
 1280              		.syntax unified
 1281              		.thumb
 1282              		.thumb_func
 1283              		.fpu fpv4-sp-d16
 1285              	HAL_RTC_SetAlarm:
 1286              	.LFB132:
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 1287              		.loc 1 809 0
 1288              		.cfi_startproc
 1289              		@ args = 0, pretend = 0, frame = 0
 1290              		@ frame_needed = 0, uses_anonymous_args = 0
 1291              	.LVL100:
 1292 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1293              	.LCFI10:
 1294              		.cfi_def_cfa_offset 24
 1295              		.cfi_offset 3, -24
 1296              		.cfi_offset 4, -20
 1297              		.cfi_offset 5, -16
 1298              		.cfi_offset 6, -12
 1299              		.cfi_offset 7, -8
 1300              		.cfi_offset 14, -4
 1301              	.LVL101:
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1302              		.loc 1 822 0
 1303 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1304 0004 012B     		cmp	r3, #1
 1305 0006 00F0A980 		beq	.L108
 1306 000a 0D46     		mov	r5, r1
 1307 000c 0446     		mov	r4, r0
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1308              		.loc 1 822 0 is_stmt 0 discriminator 2
 1309 000e 0123     		movs	r3, #1
 1310 0010 0377     		strb	r3, [r0, #28]
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1311              		.loc 1 824 0 is_stmt 1 discriminator 2
 1312 0012 0223     		movs	r3, #2
 1313 0014 4377     		strb	r3, [r0, #29]
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1314              		.loc 1 826 0 discriminator 2
 1315 0016 002A     		cmp	r2, #0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 54


 1316 0018 4DD1     		bne	.L98
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1317              		.loc 1 828 0
 1318 001a 0368     		ldr	r3, [r0]
 1319 001c 9B68     		ldr	r3, [r3, #8]
 1320 001e 13F0400F 		tst	r3, #64
 1321 0022 01D1     		bne	.L99
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1322              		.loc 1 835 0
 1323 0024 0023     		movs	r3, #0
 1324 0026 CB70     		strb	r3, [r1, #3]
 1325              	.L99:
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1326              		.loc 1 841 0
 1327 0028 EE69     		ldr	r6, [r5, #28]
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1328              		.loc 1 850 0
 1329 002a 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1330              	.LVL102:
 1331 002c FFF7FEFF 		bl	RTC_ByteToBcd2
 1332              	.LVL103:
 1333 0030 0704     		lsls	r7, r0, #16
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1334              		.loc 1 851 0
 1335 0032 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1336 0034 FFF7FEFF 		bl	RTC_ByteToBcd2
 1337              	.LVL104:
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1338              		.loc 1 850 0
 1339 0038 47EA0027 		orr	r7, r7, r0, lsl #8
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1340              		.loc 1 852 0
 1341 003c A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1342 003e FFF7FEFF 		bl	RTC_ByteToBcd2
 1343              	.LVL105:
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1344              		.loc 1 851 0
 1345 0042 0743     		orrs	r7, r7, r0
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1346              		.loc 1 853 0
 1347 0044 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1348              		.loc 1 852 0
 1349 0046 47EA0047 		orr	r7, r7, r0, lsl #16
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1350              		.loc 1 854 0
 1351 004a 95F82000 		ldrb	r0, [r5, #32]	@ zero_extendqisi2
 1352 004e FFF7FEFF 		bl	RTC_ByteToBcd2
 1353              	.LVL106:
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1354              		.loc 1 853 0
 1355 0052 47EA0060 		orr	r0, r7, r0, lsl #24
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1356              		.loc 1 854 0
 1357 0056 0643     		orrs	r6, r6, r0
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1358              		.loc 1 856 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 55


 1359 0058 6B69     		ldr	r3, [r5, #20]
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1360              		.loc 1 850 0
 1361 005a 1E43     		orrs	r6, r6, r3
 1362              	.LVL107:
 1363              	.L100:
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1364              		.loc 1 896 0
 1365 005c 6F68     		ldr	r7, [r5, #4]
 1366 005e AB69     		ldr	r3, [r5, #24]
 1367 0060 1F43     		orrs	r7, r7, r3
 1368              	.LVL108:
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1369              		.loc 1 899 0
 1370 0062 2368     		ldr	r3, [r4]
 1371 0064 CA22     		movs	r2, #202
 1372 0066 5A62     		str	r2, [r3, #36]
 1373 0068 2368     		ldr	r3, [r4]
 1374 006a 5322     		movs	r2, #83
 1375 006c 5A62     		str	r2, [r3, #36]
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1376              		.loc 1 902 0
 1377 006e 6B6A     		ldr	r3, [r5, #36]
 1378 0070 B3F5807F 		cmp	r3, #256
 1379 0074 39D0     		beq	.L110
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1380              		.loc 1 937 0
 1381 0076 2268     		ldr	r2, [r4]
 1382 0078 9368     		ldr	r3, [r2, #8]
 1383 007a 23F40073 		bic	r3, r3, #512
 1384 007e 9360     		str	r3, [r2, #8]
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****        
 1385              		.loc 1 940 0
 1386 0080 2268     		ldr	r2, [r4]
 1387 0082 9368     		ldr	r3, [r2, #8]
 1388 0084 23F40053 		bic	r3, r3, #8192
 1389 0088 9360     		str	r3, [r2, #8]
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 1390              		.loc 1 942 0
 1391 008a FFF7FEFF 		bl	HAL_GetTick
 1392              	.LVL109:
 1393 008e 0546     		mov	r5, r0
 1394              	.LVL110:
 1395              	.L106:
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1396              		.loc 1 944 0
 1397 0090 2368     		ldr	r3, [r4]
 1398 0092 DA68     		ldr	r2, [r3, #12]
 1399 0094 12F0020F 		tst	r2, #2
 1400 0098 50D1     		bne	.L111
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 1401              		.loc 1 946 0
 1402 009a FFF7FEFF 		bl	HAL_GetTick
 1403              	.LVL111:
 1404 009e 401B     		subs	r0, r0, r5
 1405 00a0 B0F57A7F 		cmp	r0, #1000
 1406 00a4 F4D9     		bls	.L106
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 56


 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1407              		.loc 1 949 0
 1408 00a6 2368     		ldr	r3, [r4]
 1409 00a8 FF22     		movs	r2, #255
 1410 00aa 5A62     		str	r2, [r3, #36]
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1411              		.loc 1 951 0
 1412 00ac 0320     		movs	r0, #3
 1413 00ae 6077     		strb	r0, [r4, #29]
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1414              		.loc 1 954 0
 1415 00b0 0023     		movs	r3, #0
 1416 00b2 2377     		strb	r3, [r4, #28]
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }  
 1417              		.loc 1 956 0
 1418 00b4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1419              	.LVL112:
 1420              	.L98:
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1421              		.loc 1 860 0
 1422 00b6 0368     		ldr	r3, [r0]
 1423 00b8 9B68     		ldr	r3, [r3, #8]
 1424 00ba 13F0400F 		tst	r3, #64
 1425 00be 01D1     		bne	.L101
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1426              		.loc 1 868 0
 1427 00c0 0023     		movs	r3, #0
 1428 00c2 CB70     		strb	r3, [r1, #3]
 1429              	.L101:
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1430              		.loc 1 875 0
 1431 00c4 EE69     		ldr	r6, [r5, #28]
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1432              		.loc 1 886 0
 1433 00c6 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1434              	.LVL113:
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1435              		.loc 1 887 0
 1436 00c8 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1437 00ca 1B02     		lsls	r3, r3, #8
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1438              		.loc 1 886 0
 1439 00cc 43EA0243 		orr	r3, r3, r2, lsl #16
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1440              		.loc 1 888 0
 1441 00d0 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1442              		.loc 1 887 0
 1443 00d2 1343     		orrs	r3, r3, r2
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1444              		.loc 1 889 0
 1445 00d4 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1446              		.loc 1 888 0
 1447 00d6 43EA0243 		orr	r3, r3, r2, lsl #16
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1448              		.loc 1 890 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 57


 1449 00da 95F82020 		ldrb	r2, [r5, #32]	@ zero_extendqisi2
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1450              		.loc 1 889 0
 1451 00de 43EA0263 		orr	r3, r3, r2, lsl #24
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1452              		.loc 1 890 0
 1453 00e2 1E43     		orrs	r6, r6, r3
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1454              		.loc 1 892 0
 1455 00e4 6B69     		ldr	r3, [r5, #20]
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1456              		.loc 1 886 0
 1457 00e6 1E43     		orrs	r6, r6, r3
 1458              	.LVL114:
 1459 00e8 B8E7     		b	.L100
 1460              	.LVL115:
 1461              	.L110:
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 1462              		.loc 1 905 0
 1463 00ea 2268     		ldr	r2, [r4]
 1464 00ec 9368     		ldr	r3, [r2, #8]
 1465 00ee 23F48073 		bic	r3, r3, #256
 1466 00f2 9360     		str	r3, [r2, #8]
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****          
 1467              		.loc 1 908 0
 1468 00f4 2268     		ldr	r2, [r4]
 1469 00f6 9368     		ldr	r3, [r2, #8]
 1470 00f8 23F48053 		bic	r3, r3, #4096
 1471 00fc 9360     		str	r3, [r2, #8]
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 1472              		.loc 1 910 0
 1473 00fe FFF7FEFF 		bl	HAL_GetTick
 1474              	.LVL116:
 1475 0102 0546     		mov	r5, r0
 1476              	.LVL117:
 1477              	.L103:
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1478              		.loc 1 912 0
 1479 0104 2368     		ldr	r3, [r4]
 1480 0106 DA68     		ldr	r2, [r3, #12]
 1481 0108 12F0010F 		tst	r2, #1
 1482 010c 0DD1     		bne	.L112
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 1483              		.loc 1 914 0
 1484 010e FFF7FEFF 		bl	HAL_GetTick
 1485              	.LVL118:
 1486 0112 401B     		subs	r0, r0, r5
 1487 0114 B0F57A7F 		cmp	r0, #1000
 1488 0118 F4D9     		bls	.L103
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1489              		.loc 1 917 0
 1490 011a 2368     		ldr	r3, [r4]
 1491 011c FF22     		movs	r2, #255
 1492 011e 5A62     		str	r2, [r3, #36]
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1493              		.loc 1 919 0
 1494 0120 0320     		movs	r0, #3
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 58


 1495 0122 6077     		strb	r0, [r4, #29]
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1496              		.loc 1 922 0
 1497 0124 0023     		movs	r3, #0
 1498 0126 2377     		strb	r3, [r4, #28]
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }   
 1499              		.loc 1 924 0
 1500 0128 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1501              	.LVL119:
 1502              	.L112:
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 1503              		.loc 1 928 0
 1504 012a DE61     		str	r6, [r3, #28]
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1505              		.loc 1 930 0
 1506 012c 2368     		ldr	r3, [r4]
 1507 012e 5F64     		str	r7, [r3, #68]
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1508              		.loc 1 932 0
 1509 0130 2268     		ldr	r2, [r4]
 1510 0132 9368     		ldr	r3, [r2, #8]
 1511 0134 43F48073 		orr	r3, r3, #256
 1512 0138 9360     		str	r3, [r2, #8]
 1513 013a 07E0     		b	.L105
 1514              	.L111:
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 1515              		.loc 1 960 0
 1516 013c 1E62     		str	r6, [r3, #32]
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1517              		.loc 1 962 0
 1518 013e 2368     		ldr	r3, [r4]
 1519 0140 9F64     		str	r7, [r3, #72]
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1520              		.loc 1 964 0
 1521 0142 2268     		ldr	r2, [r4]
 1522 0144 9368     		ldr	r3, [r2, #8]
 1523 0146 43F40073 		orr	r3, r3, #512
 1524 014a 9360     		str	r3, [r2, #8]
 1525              	.L105:
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1526              		.loc 1 968 0
 1527 014c 2368     		ldr	r3, [r4]
 1528 014e FF22     		movs	r2, #255
 1529 0150 5A62     		str	r2, [r3, #36]
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1530              		.loc 1 971 0
 1531 0152 0123     		movs	r3, #1
 1532 0154 6377     		strb	r3, [r4, #29]
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1533              		.loc 1 974 0
 1534 0156 0020     		movs	r0, #0
 1535 0158 2077     		strb	r0, [r4, #28]
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 1536              		.loc 1 976 0
 1537 015a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1538              	.LVL120:
 1539              	.L108:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 59


 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1540              		.loc 1 822 0
 1541 015c 0220     		movs	r0, #2
 1542              	.LVL121:
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1543              		.loc 1 977 0
 1544 015e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1545              		.cfi_endproc
 1546              	.LFE132:
 1548              		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 1549              		.align	1
 1550              		.global	HAL_RTC_SetAlarm_IT
 1551              		.syntax unified
 1552              		.thumb
 1553              		.thumb_func
 1554              		.fpu fpv4-sp-d16
 1556              	HAL_RTC_SetAlarm_IT:
 1557              	.LFB133:
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 1558              		.loc 1 993 0
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 0
 1561              		@ frame_needed = 0, uses_anonymous_args = 0
 1562              	.LVL122:
 1563 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1564              	.LCFI11:
 1565              		.cfi_def_cfa_offset 24
 1566              		.cfi_offset 3, -24
 1567              		.cfi_offset 4, -20
 1568              		.cfi_offset 5, -16
 1569              		.cfi_offset 6, -12
 1570              		.cfi_offset 7, -8
 1571              		.cfi_offset 14, -4
 1572              	.LVL123:
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1573              		.loc 1 1006 0
 1574 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1575 0004 012B     		cmp	r3, #1
 1576 0006 00F0BE80 		beq	.L125
 1577 000a 0D46     		mov	r5, r1
 1578 000c 0446     		mov	r4, r0
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1579              		.loc 1 1006 0 is_stmt 0 discriminator 2
 1580 000e 0123     		movs	r3, #1
 1581 0010 0377     		strb	r3, [r0, #28]
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1582              		.loc 1 1008 0 is_stmt 1 discriminator 2
 1583 0012 0223     		movs	r3, #2
 1584 0014 4377     		strb	r3, [r0, #29]
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1585              		.loc 1 1010 0 discriminator 2
 1586 0016 002A     		cmp	r2, #0
 1587 0018 4ED1     		bne	.L115
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1588              		.loc 1 1012 0
 1589 001a 0368     		ldr	r3, [r0]
 1590 001c 9B68     		ldr	r3, [r3, #8]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 60


 1591 001e 13F0400F 		tst	r3, #64
 1592 0022 01D1     		bne	.L116
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 1593              		.loc 1 1019 0
 1594 0024 0023     		movs	r3, #0
 1595 0026 CB70     		strb	r3, [r1, #3]
 1596              	.L116:
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1597              		.loc 1 1025 0
 1598 0028 EE69     		ldr	r6, [r5, #28]
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1599              		.loc 1 1033 0
 1600 002a 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 1601              	.LVL124:
 1602 002c FFF7FEFF 		bl	RTC_ByteToBcd2
 1603              	.LVL125:
 1604 0030 0704     		lsls	r7, r0, #16
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1605              		.loc 1 1034 0
 1606 0032 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1607 0034 FFF7FEFF 		bl	RTC_ByteToBcd2
 1608              	.LVL126:
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1609              		.loc 1 1033 0
 1610 0038 47EA0027 		orr	r7, r7, r0, lsl #8
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1611              		.loc 1 1035 0
 1612 003c A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1613 003e FFF7FEFF 		bl	RTC_ByteToBcd2
 1614              	.LVL127:
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds)) | \
 1615              		.loc 1 1034 0
 1616 0042 0743     		orrs	r7, r7, r0
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1617              		.loc 1 1036 0
 1618 0044 E878     		ldrb	r0, [r5, #3]	@ zero_extendqisi2
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1619              		.loc 1 1035 0
 1620 0046 47EA0047 		orr	r7, r7, r0, lsl #16
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1621              		.loc 1 1037 0
 1622 004a 95F82000 		ldrb	r0, [r5, #32]	@ zero_extendqisi2
 1623 004e FFF7FEFF 		bl	RTC_ByteToBcd2
 1624              	.LVL128:
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << 24U) | \
 1625              		.loc 1 1036 0
 1626 0052 47EA0060 		orr	r0, r7, r0, lsl #24
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1627              		.loc 1 1037 0
 1628 0056 0643     		orrs	r6, r6, r0
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1629              		.loc 1 1039 0
 1630 0058 6B69     		ldr	r3, [r5, #20]
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << 8U) | \
 1631              		.loc 1 1033 0
 1632 005a 1E43     		orrs	r6, r6, r3
 1633              	.LVL129:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 61


 1634              	.L117:
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1635              		.loc 1 1077 0
 1636 005c 6F68     		ldr	r7, [r5, #4]
 1637 005e AB69     		ldr	r3, [r5, #24]
 1638 0060 1F43     		orrs	r7, r7, r3
 1639              	.LVL130:
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1640              		.loc 1 1080 0
 1641 0062 2368     		ldr	r3, [r4]
 1642 0064 CA22     		movs	r2, #202
 1643 0066 5A62     		str	r2, [r3, #36]
 1644 0068 2368     		ldr	r3, [r4]
 1645 006a 5322     		movs	r2, #83
 1646 006c 5A62     		str	r2, [r3, #36]
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1647              		.loc 1 1083 0
 1648 006e 6B6A     		ldr	r3, [r5, #36]
 1649 0070 B3F5807F 		cmp	r3, #256
 1650 0074 3AD0     		beq	.L127
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1651              		.loc 1 1120 0
 1652 0076 2268     		ldr	r2, [r4]
 1653 0078 9368     		ldr	r3, [r2, #8]
 1654 007a 23F40073 		bic	r3, r3, #512
 1655 007e 9360     		str	r3, [r2, #8]
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1656              		.loc 1 1123 0
 1657 0080 2268     		ldr	r2, [r4]
 1658 0082 D368     		ldr	r3, [r2, #12]
 1659 0084 DBB2     		uxtb	r3, r3
 1660 0086 63F42073 		orn	r3, r3, #640
 1661 008a D360     		str	r3, [r2, #12]
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
 1662              		.loc 1 1125 0
 1663 008c FFF7FEFF 		bl	HAL_GetTick
 1664              	.LVL131:
 1665 0090 0546     		mov	r5, r0
 1666              	.LVL132:
 1667              	.L123:
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1668              		.loc 1 1127 0
 1669 0092 2368     		ldr	r3, [r4]
 1670 0094 DA68     		ldr	r2, [r3, #12]
 1671 0096 12F0020F 		tst	r2, #2
 1672 009a 56D1     		bne	.L128
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 1673              		.loc 1 1129 0
 1674 009c FFF7FEFF 		bl	HAL_GetTick
 1675              	.LVL133:
 1676 00a0 401B     		subs	r0, r0, r5
 1677 00a2 B0F57A7F 		cmp	r0, #1000
 1678 00a6 F4D9     		bls	.L123
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1679              		.loc 1 1132 0
 1680 00a8 2368     		ldr	r3, [r4]
 1681 00aa FF22     		movs	r2, #255
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 62


 1682 00ac 5A62     		str	r2, [r3, #36]
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1683              		.loc 1 1134 0
 1684 00ae 0320     		movs	r0, #3
 1685 00b0 6077     		strb	r0, [r4, #29]
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1686              		.loc 1 1137 0
 1687 00b2 0023     		movs	r3, #0
 1688 00b4 2377     		strb	r3, [r4, #28]
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }  
 1689              		.loc 1 1139 0
 1690 00b6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1691              	.LVL134:
 1692              	.L115:
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1693              		.loc 1 1043 0
 1694 00b8 0368     		ldr	r3, [r0]
 1695 00ba 9B68     		ldr	r3, [r3, #8]
 1696 00bc 13F0400F 		tst	r3, #64
 1697 00c0 01D1     		bne	.L118
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 1698              		.loc 1 1051 0
 1699 00c2 0023     		movs	r3, #0
 1700 00c4 CB70     		strb	r3, [r1, #3]
 1701              	.L118:
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1702              		.loc 1 1058 0
 1703 00c6 EE69     		ldr	r6, [r5, #28]
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1704              		.loc 1 1068 0
 1705 00c8 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1706              	.LVL135:
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1707              		.loc 1 1069 0
 1708 00ca 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 1709 00cc 1B02     		lsls	r3, r3, #8
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1710              		.loc 1 1068 0
 1711 00ce 43EA0243 		orr	r3, r3, r2, lsl #16
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1712              		.loc 1 1070 0
 1713 00d2 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t) sAlarm->AlarmTime.Seconds) | \
 1714              		.loc 1 1069 0
 1715 00d4 1343     		orrs	r3, r3, r2
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1716              		.loc 1 1071 0
 1717 00d6 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << 16U) | \
 1718              		.loc 1 1070 0
 1719 00d8 43EA0243 		orr	r3, r3, r2, lsl #16
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1720              		.loc 1 1072 0
 1721 00dc 95F82020 		ldrb	r2, [r5, #32]	@ zero_extendqisi2
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << 24U) | \
 1722              		.loc 1 1071 0
 1723 00e0 43EA0263 		orr	r3, r3, r2, lsl #24
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 63


1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1724              		.loc 1 1072 0
 1725 00e4 1E43     		orrs	r6, r6, r3
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1726              		.loc 1 1074 0
 1727 00e6 6B69     		ldr	r3, [r5, #20]
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << 8U) | \
 1728              		.loc 1 1068 0
 1729 00e8 1E43     		orrs	r6, r6, r3
 1730              	.LVL136:
 1731 00ea B7E7     		b	.L117
 1732              	.LVL137:
 1733              	.L127:
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1734              		.loc 1 1086 0
 1735 00ec 2268     		ldr	r2, [r4]
 1736 00ee 9368     		ldr	r3, [r2, #8]
 1737 00f0 23F48073 		bic	r3, r3, #256
 1738 00f4 9360     		str	r3, [r2, #8]
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1739              		.loc 1 1089 0
 1740 00f6 2268     		ldr	r2, [r4]
 1741 00f8 D368     		ldr	r3, [r2, #12]
 1742 00fa DBB2     		uxtb	r3, r3
 1743 00fc 63F4C073 		orn	r3, r3, #384
 1744 0100 D360     		str	r3, [r2, #12]
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
 1745              		.loc 1 1091 0
 1746 0102 FFF7FEFF 		bl	HAL_GetTick
 1747              	.LVL138:
 1748 0106 0546     		mov	r5, r0
 1749              	.LVL139:
 1750              	.L120:
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     {
 1751              		.loc 1 1093 0
 1752 0108 2368     		ldr	r3, [r4]
 1753 010a DA68     		ldr	r2, [r3, #12]
 1754 010c 12F0010F 		tst	r2, #1
 1755 0110 0DD1     		bne	.L129
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       {
 1756              		.loc 1 1095 0
 1757 0112 FFF7FEFF 		bl	HAL_GetTick
 1758              	.LVL140:
 1759 0116 401B     		subs	r0, r0, r5
 1760 0118 B0F57A7F 		cmp	r0, #1000
 1761 011c F4D9     		bls	.L120
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1762              		.loc 1 1098 0
 1763 011e 2368     		ldr	r3, [r4]
 1764 0120 FF22     		movs	r2, #255
 1765 0122 5A62     		str	r2, [r3, #36]
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1766              		.loc 1 1100 0
 1767 0124 0320     		movs	r0, #3
 1768 0126 6077     		strb	r0, [r4, #29]
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****         
 1769              		.loc 1 1103 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 64


 1770 0128 0023     		movs	r3, #0
 1771 012a 2377     		strb	r3, [r4, #28]
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****       }  
 1772              		.loc 1 1105 0
 1773 012c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1774              	.LVL141:
 1775              	.L129:
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
 1776              		.loc 1 1109 0
 1777 012e DE61     		str	r6, [r3, #28]
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1778              		.loc 1 1111 0
 1779 0130 2368     		ldr	r3, [r4]
 1780 0132 5F64     		str	r7, [r3, #68]
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 1781              		.loc 1 1113 0
 1782 0134 2268     		ldr	r2, [r4]
 1783 0136 9368     		ldr	r3, [r2, #8]
 1784 0138 43F48073 		orr	r3, r3, #256
 1785 013c 9360     		str	r3, [r2, #8]
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1786              		.loc 1 1115 0
 1787 013e 2268     		ldr	r2, [r4]
 1788 0140 9368     		ldr	r3, [r2, #8]
 1789 0142 43F48053 		orr	r3, r3, #4096
 1790 0146 9360     		str	r3, [r2, #8]
 1791 0148 0CE0     		b	.L122
 1792              	.L128:
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
 1793              		.loc 1 1143 0
 1794 014a 1E62     		str	r6, [r3, #32]
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
 1795              		.loc 1 1145 0
 1796 014c 2368     		ldr	r3, [r4]
 1797 014e 9F64     		str	r7, [r3, #72]
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
 1798              		.loc 1 1147 0
 1799 0150 2268     		ldr	r2, [r4]
 1800 0152 9368     		ldr	r3, [r2, #8]
 1801 0154 43F40073 		orr	r3, r3, #512
 1802 0158 9360     		str	r3, [r2, #8]
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1803              		.loc 1 1149 0
 1804 015a 2268     		ldr	r2, [r4]
 1805 015c 9368     		ldr	r3, [r2, #8]
 1806 015e 43F40053 		orr	r3, r3, #8192
 1807 0162 9360     		str	r3, [r2, #8]
 1808              	.L122:
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1809              		.loc 1 1153 0
 1810 0164 094B     		ldr	r3, .L130
 1811 0166 1A68     		ldr	r2, [r3]
 1812 0168 42F40032 		orr	r2, r2, #131072
 1813 016c 1A60     		str	r2, [r3]
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1814              		.loc 1 1155 0
 1815 016e 9A68     		ldr	r2, [r3, #8]
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 65


 1816 0170 42F40032 		orr	r2, r2, #131072
 1817 0174 9A60     		str	r2, [r3, #8]
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1818              		.loc 1 1158 0
 1819 0176 2368     		ldr	r3, [r4]
 1820 0178 FF22     		movs	r2, #255
 1821 017a 5A62     		str	r2, [r3, #36]
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1822              		.loc 1 1160 0
 1823 017c 0123     		movs	r3, #1
 1824 017e 6377     		strb	r3, [r4, #29]
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1825              		.loc 1 1163 0
 1826 0180 0020     		movs	r0, #0
 1827 0182 2077     		strb	r0, [r4, #28]
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 1828              		.loc 1 1165 0
 1829 0184 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1830              	.LVL142:
 1831              	.L125:
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1832              		.loc 1 1006 0
 1833 0186 0220     		movs	r0, #2
 1834              	.LVL143:
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1835              		.loc 1 1166 0
 1836 0188 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1837              	.L131:
 1838 018a 00BF     		.align	2
 1839              	.L130:
 1840 018c 00040140 		.word	1073808384
 1841              		.cfi_endproc
 1842              	.LFE133:
 1844              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 1845              		.align	1
 1846              		.global	RTC_Bcd2ToByte
 1847              		.syntax unified
 1848              		.thumb
 1849              		.thumb_func
 1850              		.fpu fpv4-sp-d16
 1852              	RTC_Bcd2ToByte:
 1853              	.LFB143:
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** /**
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @param  Value: BCD value to be converted
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   * @retval Converted word
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   */
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** uint8_t RTC_Bcd2ToByte(uint8_t Value)
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** {
 1854              		.loc 1 1558 0
 1855              		.cfi_startproc
 1856              		@ args = 0, pretend = 0, frame = 0
 1857              		@ frame_needed = 0, uses_anonymous_args = 0
 1858              		@ link register save eliminated.
 1859              	.LVL144:
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmp = 0U;
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 66


1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0U) >> (uint8_t)0x4U) * 10U;
 1860              		.loc 1 1560 0
 1861 0000 0309     		lsrs	r3, r0, #4
 1862 0002 03EB8303 		add	r3, r3, r3, lsl #2
 1863 0006 5A00     		lsls	r2, r3, #1
 1864              	.LVL145:
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0FU));
 1865              		.loc 1 1561 0
 1866 0008 00F00F00 		and	r0, r0, #15
 1867              	.LVL146:
 1868 000c 1044     		add	r0, r0, r2
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** }
 1869              		.loc 1 1562 0
 1870 000e C0B2     		uxtb	r0, r0
 1871 0010 7047     		bx	lr
 1872              		.cfi_endproc
 1873              	.LFE143:
 1875              		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 1876              		.align	1
 1877              		.global	HAL_RTC_GetTime
 1878              		.syntax unified
 1879              		.thumb
 1880              		.thumb_func
 1881              		.fpu fpv4-sp-d16
 1883              	HAL_RTC_GetTime:
 1884              	.LFB129:
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U;
 1885              		.loc 1 603 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              	.LVL147:
 1890 0000 70B5     		push	{r4, r5, r6, lr}
 1891              	.LCFI12:
 1892              		.cfi_def_cfa_offset 16
 1893              		.cfi_offset 4, -16
 1894              		.cfi_offset 5, -12
 1895              		.cfi_offset 6, -8
 1896              		.cfi_offset 14, -4
 1897              	.LVL148:
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1898              		.loc 1 610 0
 1899 0002 0368     		ldr	r3, [r0]
 1900 0004 9B6A     		ldr	r3, [r3, #40]
 1901 0006 4B60     		str	r3, [r1, #4]
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1902              		.loc 1 613 0
 1903 0008 0368     		ldr	r3, [r0]
 1904 000a 1B69     		ldr	r3, [r3, #16]
 1905 000c C3F30E03 		ubfx	r3, r3, #0, #15
 1906 0010 8B60     		str	r3, [r1, #8]
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1907              		.loc 1 616 0
 1908 0012 0368     		ldr	r3, [r0]
 1909 0014 1B68     		ldr	r3, [r3]
 1910 0016 03F07F33 		and	r3, r3, #2139062143
 1911 001a 23F0FE43 		bic	r3, r3, #2130706432
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 67


 1912              	.LVL149:
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >>8U);
 1913              		.loc 1 619 0
 1914 001e 1D0C     		lsrs	r5, r3, #16
 1915 0020 05F03F00 		and	r0, r5, #63
 1916              	.LVL150:
 1917 0024 0870     		strb	r0, [r1]
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)(tmpreg & (RTC_TR_ST | RTC_TR_SU));
 1918              		.loc 1 620 0
 1919 0026 C3F30626 		ubfx	r6, r3, #8, #7
 1920 002a 4E70     		strb	r6, [r1, #1]
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> 16U); 
 1921              		.loc 1 621 0
 1922 002c 03F07F04 		and	r4, r3, #127
 1923 0030 8C70     		strb	r4, [r1, #2]
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   
 1924              		.loc 1 622 0
 1925 0032 05F04005 		and	r5, r5, #64
 1926 0036 CD70     		strb	r5, [r1, #3]
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 1927              		.loc 1 625 0
 1928 0038 5AB9     		cbnz	r2, .L134
 1929 003a 0D46     		mov	r5, r1
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 1930              		.loc 1 628 0
 1931 003c FFF7FEFF 		bl	RTC_Bcd2ToByte
 1932              	.LVL151:
 1933 0040 2870     		strb	r0, [r5]
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);  
 1934              		.loc 1 629 0
 1935 0042 3046     		mov	r0, r6
 1936 0044 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1937              	.LVL152:
 1938 0048 6870     		strb	r0, [r5, #1]
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 1939              		.loc 1 630 0
 1940 004a 2046     		mov	r0, r4
 1941 004c FFF7FEFF 		bl	RTC_Bcd2ToByte
 1942              	.LVL153:
 1943 0050 A870     		strb	r0, [r5, #2]
 1944              	.LVL154:
 1945              	.L134:
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1946              		.loc 1 634 0
 1947 0052 0020     		movs	r0, #0
 1948 0054 70BD     		pop	{r4, r5, r6, pc}
 1949              		.cfi_endproc
 1950              	.LFE129:
 1952              		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 1953              		.align	1
 1954              		.global	HAL_RTC_GetDate
 1955              		.syntax unified
 1956              		.thumb
 1957              		.thumb_func
 1958              		.fpu fpv4-sp-d16
 1960              	HAL_RTC_GetDate:
 1961              	.LFB131:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 68


 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t datetmpreg = 0U;
 1962              		.loc 1 755 0
 1963              		.cfi_startproc
 1964              		@ args = 0, pretend = 0, frame = 0
 1965              		@ frame_needed = 0, uses_anonymous_args = 0
 1966              	.LVL155:
 1967 0000 70B5     		push	{r4, r5, r6, lr}
 1968              	.LCFI13:
 1969              		.cfi_def_cfa_offset 16
 1970              		.cfi_offset 4, -16
 1971              		.cfi_offset 5, -12
 1972              		.cfi_offset 6, -8
 1973              		.cfi_offset 14, -4
 1974              	.LVL156:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1975              		.loc 1 762 0
 1976 0002 0368     		ldr	r3, [r0]
 1977 0004 5B68     		ldr	r3, [r3, #4]
 1978 0006 23F07F43 		bic	r3, r3, #-16777216
 1979 000a 23F0C003 		bic	r3, r3, #192
 1980              	.LVL157:
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 1981              		.loc 1 765 0
 1982 000e 180C     		lsrs	r0, r3, #16
 1983              	.LVL158:
 1984 0010 C870     		strb	r0, [r1, #3]
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->Date = (uint8_t)(datetmpreg & (RTC_DR_DT | RTC_DR_DU));
 1985              		.loc 1 766 0
 1986 0012 C3F30426 		ubfx	r6, r3, #8, #5
 1987 0016 4E70     		strb	r6, [r1, #1]
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> 13U); 
 1988              		.loc 1 767 0
 1989 0018 03F03F05 		and	r5, r3, #63
 1990 001c 8D70     		strb	r5, [r1, #2]
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 1991              		.loc 1 768 0
 1992 001e C3F34233 		ubfx	r3, r3, #13, #3
 1993              	.LVL159:
 1994 0022 0B70     		strb	r3, [r1]
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {    
 1995              		.loc 1 771 0
 1996 0024 5AB9     		cbnz	r2, .L137
 1997 0026 0C46     		mov	r4, r1
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 1998              		.loc 1 774 0
 1999 0028 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2000              	.LVL160:
 2001 002c E070     		strb	r0, [r4, #3]
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);  
 2002              		.loc 1 775 0
 2003 002e 3046     		mov	r0, r6
 2004 0030 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2005              	.LVL161:
 2006 0034 6070     		strb	r0, [r4, #1]
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 2007              		.loc 1 776 0
 2008 0036 2846     		mov	r0, r5
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 69


 2009 0038 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2010              	.LVL162:
 2011 003c A070     		strb	r0, [r4, #2]
 2012              	.LVL163:
 2013              	.L137:
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 2014              		.loc 1 779 0
 2015 003e 0020     		movs	r0, #0
 2016 0040 70BD     		pop	{r4, r5, r6, pc}
 2017              		.cfi_endproc
 2018              	.LFE131:
 2020              		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 2021              		.align	1
 2022              		.global	HAL_RTC_GetAlarm
 2023              		.syntax unified
 2024              		.thumb
 2025              		.thumb_func
 2026              		.fpu fpv4-sp-d16
 2028              	HAL_RTC_GetAlarm:
 2029              	.LFB135:
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   uint32_t tmpreg = 0U, subsecondtmpreg = 0U;
 2030              		.loc 1 1272 0
 2031              		.cfi_startproc
 2032              		@ args = 0, pretend = 0, frame = 0
 2033              		@ frame_needed = 0, uses_anonymous_args = 0
 2034              	.LVL164:
 2035 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2036              	.LCFI14:
 2037              		.cfi_def_cfa_offset 24
 2038              		.cfi_offset 3, -24
 2039              		.cfi_offset 4, -20
 2040              		.cfi_offset 5, -16
 2041              		.cfi_offset 6, -12
 2042              		.cfi_offset 7, -8
 2043              		.cfi_offset 14, -4
 2044              	.LVL165:
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 2045              		.loc 1 1279 0
 2046 0002 B2F5807F 		cmp	r2, #256
 2047 0006 34D0     		beq	.L144
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 2048              		.loc 1 1289 0
 2049 0008 4FF40072 		mov	r2, #512
 2050              	.LVL166:
 2051 000c 4A62     		str	r2, [r1, #36]
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
 2052              		.loc 1 1291 0
 2053 000e 0068     		ldr	r0, [r0]
 2054              	.LVL167:
 2055 0010 026A     		ldr	r2, [r0, #32]
 2056              	.LVL168:
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 2057              		.loc 1 1292 0
 2058 0012 876C     		ldr	r7, [r0, #72]
 2059 0014 C7F30E07 		ubfx	r7, r7, #0, #15
 2060              	.LVL169:
 2061              	.L141:
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 70


1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> 8U);
 2062              		.loc 1 1296 0
 2063 0018 C2F30744 		ubfx	r4, r2, #16, #8
 2064 001c 04F03F00 		and	r0, r4, #63
 2065 0020 0870     		strb	r0, [r1]
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)(tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU));
 2066              		.loc 1 1297 0
 2067 0022 C2F30626 		ubfx	r6, r2, #8, #7
 2068 0026 4E70     		strb	r6, [r1, #1]
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.TimeFormat = (uint32_t)((tmpreg & RTC_ALRMAR_PM) >> 16U);
 2069              		.loc 1 1298 0
 2070 0028 02F07F05 		and	r5, r2, #127
 2071 002c 8D70     		strb	r5, [r1, #2]
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2072              		.loc 1 1299 0
 2073 002e 04F04004 		and	r4, r4, #64
 2074 0032 CC70     		strb	r4, [r1, #3]
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDay = (uint32_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> 24U);
 2075              		.loc 1 1300 0
 2076 0034 4F60     		str	r7, [r1, #4]
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2077              		.loc 1 1301 0
 2078 0036 C2F30567 		ubfx	r7, r2, #24, #6
 2079              	.LVL170:
 2080 003a 81F82070 		strb	r7, [r1, #32]
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2081              		.loc 1 1302 0
 2082 003e 02F08044 		and	r4, r2, #1073741824
 2083 0042 CC61     		str	r4, [r1, #28]
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 2084              		.loc 1 1303 0
 2085 0044 02F08032 		and	r2, r2, #-2139062144
 2086              	.LVL171:
 2087 0048 4A61     		str	r2, [r1, #20]
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   {
 2088              		.loc 1 1305 0
 2089 004a 83B9     		cbnz	r3, .L142
 2090 004c 0C46     		mov	r4, r1
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
 2091              		.loc 1 1307 0
 2092 004e FFF7FEFF 		bl	RTC_Bcd2ToByte
 2093              	.LVL172:
 2094 0052 2070     		strb	r0, [r4]
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
 2095              		.loc 1 1308 0
 2096 0054 3046     		mov	r0, r6
 2097 0056 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2098              	.LVL173:
 2099 005a 6070     		strb	r0, [r4, #1]
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 2100              		.loc 1 1309 0
 2101 005c 2846     		mov	r0, r5
 2102 005e FFF7FEFF 		bl	RTC_Bcd2ToByte
 2103              	.LVL174:
 2104 0062 A070     		strb	r0, [r4, #2]
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }  
 2105              		.loc 1 1310 0
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 71


 2106 0064 3846     		mov	r0, r7
 2107 0066 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2108              	.LVL175:
 2109 006a 84F82000 		strb	r0, [r4, #32]
 2110              	.LVL176:
 2111              	.L142:
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c **** 
 2112              		.loc 1 1314 0
 2113 006e 0020     		movs	r0, #0
 2114 0070 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2115              	.LVL177:
 2116              	.L144:
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     
 2117              		.loc 1 1282 0
 2118 0072 4A62     		str	r2, [r1, #36]
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR ) & RTC_ALRMASSR_SS);
 2119              		.loc 1 1284 0
 2120 0074 0068     		ldr	r0, [r0]
 2121              	.LVL178:
 2122 0076 C269     		ldr	r2, [r0, #28]
 2123              	.LVL179:
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc.c ****   }
 2124              		.loc 1 1285 0
 2125 0078 476C     		ldr	r7, [r0, #68]
 2126 007a C7F30E07 		ubfx	r7, r7, #0, #15
 2127              	.LVL180:
 2128 007e CBE7     		b	.L141
 2129              		.cfi_endproc
 2130              	.LFE135:
 2132              		.comm	globalTick,4,4
 2133              		.text
 2134              	.Letext0:
 2135              		.file 2 "/usr/local/Caskroom/gcc-arm-embedded/6-2017-q1-update/gcc-arm-none-eabi-6-2017-q1-update/
 2136              		.file 3 "/usr/local/Caskroom/gcc-arm-embedded/6-2017-q1-update/gcc-arm-none-eabi-6-2017-q1-update/
 2137              		.file 4 "Inc/main.h"
 2138              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2139              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2140              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f334x8.h"
 2141              		.file 8 "/usr/local/Caskroom/gcc-arm-embedded/6-2017-q1-update/gcc-arm-none-eabi-6-2017-q1-update/
 2142              		.file 9 "/usr/local/Caskroom/gcc-arm-embedded/6-2017-q1-update/gcc-arm-none-eabi-6-2017-q1-update/
 2143              		.file 10 "/usr/local/Caskroom/gcc-arm-embedded/6-2017-q1-update/gcc-arm-none-eabi-6-2017-q1-update
 2144              		.file 11 "/usr/local/Caskroom/gcc-arm-embedded/6-2017-q1-update/gcc-arm-none-eabi-6-2017-q1-update
 2145              		.file 12 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2146              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2147              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rtc.h"
 2148              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 2149              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rtc_ex.h"
ARM GAS  /var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s 			page 72


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_rtc.c
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:18     .text.HAL_RTC_MspInit:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:25     .text.HAL_RTC_MspInit:0000000000000000 HAL_RTC_MspInit
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:39     .text.HAL_RTC_MspDeInit:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:46     .text.HAL_RTC_MspDeInit:0000000000000000 HAL_RTC_MspDeInit
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:59     .text.HAL_RTC_DeactivateAlarm:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:66     .text.HAL_RTC_DeactivateAlarm:0000000000000000 HAL_RTC_DeactivateAlarm
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:208    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:215    .text.HAL_RTC_AlarmAEventCallback:0000000000000000 HAL_RTC_AlarmAEventCallback
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:228    .text.HAL_RTC_AlarmIRQHandler:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:235    .text.HAL_RTC_AlarmIRQHandler:0000000000000000 HAL_RTC_AlarmIRQHandler
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:305    .text.HAL_RTC_AlarmIRQHandler:000000000000005c $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:310    .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:317    .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 HAL_RTC_PollForAlarmAEvent
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:379    .text.HAL_RTC_WaitForSynchro:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:386    .text.HAL_RTC_WaitForSynchro:0000000000000000 HAL_RTC_WaitForSynchro
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:437    .text.HAL_RTC_GetState:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:444    .text.HAL_RTC_GetState:0000000000000000 HAL_RTC_GetState
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:461    .text.RTC_EnterInitMode:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:468    .text.RTC_EnterInitMode:0000000000000000 RTC_EnterInitMode
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:528    .text.HAL_RTC_Init:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:535    .text.HAL_RTC_Init:0000000000000000 HAL_RTC_Init
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:667    .text.HAL_RTC_DeInit:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:674    .text.HAL_RTC_DeInit:0000000000000000 HAL_RTC_DeInit
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:837    .text.HAL_RTC_DeInit:00000000000000d4 $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:842    .text.RTC_ByteToBcd2:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:849    .text.RTC_ByteToBcd2:0000000000000000 RTC_ByteToBcd2
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:887    .text.HAL_RTC_SetTime:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:894    .text.HAL_RTC_SetTime:0000000000000000 HAL_RTC_SetTime
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1093   .text.HAL_RTC_SetDate:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1100   .text.HAL_RTC_SetDate:0000000000000000 HAL_RTC_SetDate
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1278   .text.HAL_RTC_SetAlarm:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1285   .text.HAL_RTC_SetAlarm:0000000000000000 HAL_RTC_SetAlarm
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1549   .text.HAL_RTC_SetAlarm_IT:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1556   .text.HAL_RTC_SetAlarm_IT:0000000000000000 HAL_RTC_SetAlarm_IT
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1840   .text.HAL_RTC_SetAlarm_IT:000000000000018c $d
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1845   .text.RTC_Bcd2ToByte:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1852   .text.RTC_Bcd2ToByte:0000000000000000 RTC_Bcd2ToByte
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1876   .text.HAL_RTC_GetTime:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1883   .text.HAL_RTC_GetTime:0000000000000000 HAL_RTC_GetTime
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1953   .text.HAL_RTC_GetDate:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:1960   .text.HAL_RTC_GetDate:0000000000000000 HAL_RTC_GetDate
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:2021   .text.HAL_RTC_GetAlarm:0000000000000000 $t
/var/folders/p7/nwmyw04531jbkqkgv59cx10h0000gn/T//ccbwmGmT.s:2028   .text.HAL_RTC_GetAlarm:0000000000000000 HAL_RTC_GetAlarm
                            *COM*:0000000000000004 globalTick
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RTCEx_AlarmBEventCallback
